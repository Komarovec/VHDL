// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2020.1 (win64) Build 2902540 Wed May 27 19:54:49 MDT 2020
// Date        : Sat Oct  3 18:02:33 2020
// Host        : KomaroKomp running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim
//               d:/Entertaiment/Programy/VHDL/VHDL/PartialReconfigSimple/CustomFloorplanTest.srcs/sources_1/bd/dfx_controller_setup/ip/dfx_controller_setup_dfx_controller_0_0/dfx_controller_setup_dfx_controller_0_0_sim_netlist.v
// Design      : dfx_controller_setup_dfx_controller_0_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7a200tsbg484-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "dfx_controller_setup_dfx_controller_0_0,dfx_controller_dfx_controller_setup_dfx_controller_0_0,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "dfx_controller_dfx_controller_setup_dfx_controller_0_0,Vivado 2020.1" *) 
(* NotValidForBitStream *)
module dfx_controller_setup_dfx_controller_0_0
   (m_axi_mem_araddr,
    m_axi_mem_arlen,
    m_axi_mem_arsize,
    m_axi_mem_arburst,
    m_axi_mem_arprot,
    m_axi_mem_arcache,
    m_axi_mem_aruser,
    m_axi_mem_arvalid,
    m_axi_mem_arready,
    m_axi_mem_rdata,
    m_axi_mem_rresp,
    m_axi_mem_rlast,
    m_axi_mem_rvalid,
    m_axi_mem_rready,
    clk,
    reset,
    icap_clk,
    icap_reset,
    icap_csib,
    icap_rdwrb,
    icap_i,
    icap_o,
    vsm_VS_0_hw_triggers,
    vsm_VS_0_rm_shutdown_req,
    vsm_VS_0_rm_shutdown_ack,
    vsm_VS_0_rm_decouple,
    vsm_VS_0_rm_reset,
    vsm_VS_0_event_error,
    vsm_VS_0_m_axis_status_tdata,
    vsm_VS_0_m_axis_status_tvalid);
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_MEM ARADDR" *) (* x_interface_parameter = "XIL_INTERFACENAME M_AXI_MEM, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 4, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_ONLY, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 0, HAS_BRESP 0, HAS_RRESP 1, SUPPORTS_NARROW_BURST 1, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 256, PHASE 0.000, CLK_DOMAIN dfx_controller_setup_sys_clock, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) output [31:0]m_axi_mem_araddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_MEM ARLEN" *) output [7:0]m_axi_mem_arlen;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_MEM ARSIZE" *) output [2:0]m_axi_mem_arsize;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_MEM ARBURST" *) output [1:0]m_axi_mem_arburst;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_MEM ARPROT" *) output [2:0]m_axi_mem_arprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_MEM ARCACHE" *) output [3:0]m_axi_mem_arcache;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_MEM ARUSER" *) output [3:0]m_axi_mem_aruser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_MEM ARVALID" *) output m_axi_mem_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_MEM ARREADY" *) input m_axi_mem_arready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_MEM RDATA" *) input [31:0]m_axi_mem_rdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_MEM RRESP" *) input [1:0]m_axi_mem_rresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_MEM RLAST" *) input m_axi_mem_rlast;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_MEM RVALID" *) input m_axi_mem_rvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_MEM RREADY" *) output m_axi_mem_rready;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 CLK CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME CLK, ASSOCIATED_BUSIF M_AXI_MEM:vsm_VS_0_m_axis_status, ASSOCIATED_RESET reset, FREQ_HZ 50000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, CLK_DOMAIN dfx_controller_setup_sys_clock, INSERT_VIP 0" *) input clk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 reset RST" *) (* x_interface_parameter = "XIL_INTERFACENAME reset, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input reset;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 ICAP_CLK CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME ICAP_CLK, ASSOCIATED_BUSIF ICAP, ASSOCIATED_RESET icap_reset, FREQ_HZ 50000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, CLK_DOMAIN dfx_controller_setup_sys_clock, INSERT_VIP 0" *) input icap_clk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 icap_reset RST" *) (* x_interface_parameter = "XIL_INTERFACENAME icap_reset, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input icap_reset;
  (* x_interface_info = "xilinx.com:interface:icap:1.0 ICAP csib" *) output icap_csib;
  (* x_interface_info = "xilinx.com:interface:icap:1.0 ICAP rdwrb" *) output icap_rdwrb;
  (* x_interface_info = "xilinx.com:interface:icap:1.0 ICAP o" *) input [31:0]icap_i;
  (* x_interface_info = "xilinx.com:interface:icap:1.0 ICAP i" *) output [31:0]icap_o;
  input [1:0]vsm_VS_0_hw_triggers;
  output vsm_VS_0_rm_shutdown_req;
  input vsm_VS_0_rm_shutdown_ack;
  output vsm_VS_0_rm_decouple;
  output vsm_VS_0_rm_reset;
  output vsm_VS_0_event_error;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 vsm_VS_0_m_axis_status TDATA" *) (* x_interface_parameter = "XIL_INTERFACENAME vsm_VS_0_m_axis_status, TDATA_NUM_BYTES 4, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 0, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 50000000, PHASE 0.000, CLK_DOMAIN dfx_controller_setup_sys_clock, LAYERED_METADATA undef, INSERT_VIP 0" *) output [31:0]vsm_VS_0_m_axis_status_tdata;
  (* x_interface_info = "xilinx.com:interface:axis:1.0 vsm_VS_0_m_axis_status TVALID" *) output vsm_VS_0_m_axis_status_tvalid;

  wire clk;
  wire icap_clk;
  wire icap_csib;
  wire [31:0]icap_i;
  wire [31:0]icap_o;
  wire icap_rdwrb;
  wire icap_reset;
  wire [31:0]m_axi_mem_araddr;
  wire [1:0]m_axi_mem_arburst;
  wire [3:0]m_axi_mem_arcache;
  wire [7:0]m_axi_mem_arlen;
  wire [2:0]m_axi_mem_arprot;
  wire m_axi_mem_arready;
  wire [2:0]m_axi_mem_arsize;
  wire [3:0]m_axi_mem_aruser;
  wire m_axi_mem_arvalid;
  wire [31:0]m_axi_mem_rdata;
  wire m_axi_mem_rlast;
  wire m_axi_mem_rready;
  wire [1:0]m_axi_mem_rresp;
  wire m_axi_mem_rvalid;
  wire reset;
  wire vsm_VS_0_event_error;
  wire [1:0]vsm_VS_0_hw_triggers;
  wire [31:0]vsm_VS_0_m_axis_status_tdata;
  wire vsm_VS_0_m_axis_status_tvalid;
  wire vsm_VS_0_rm_decouple;
  wire vsm_VS_0_rm_reset;
  wire vsm_VS_0_rm_shutdown_ack;
  wire vsm_VS_0_rm_shutdown_req;

  (* C_NUM_VIRTUAL_SOCKETS = "1" *) 
  (* C_RESET_ACTIVE_LEVEL = "1'b0" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dfx_controller_setup_dfx_controller_0_0 U0
       (.clk(clk),
        .icap_clk(icap_clk),
        .icap_csib(icap_csib),
        .icap_i(icap_i),
        .icap_o(icap_o),
        .icap_rdwrb(icap_rdwrb),
        .icap_reset(icap_reset),
        .m_axi_mem_araddr(m_axi_mem_araddr),
        .m_axi_mem_arburst(m_axi_mem_arburst),
        .m_axi_mem_arcache(m_axi_mem_arcache),
        .m_axi_mem_arlen(m_axi_mem_arlen),
        .m_axi_mem_arprot(m_axi_mem_arprot),
        .m_axi_mem_arready(m_axi_mem_arready),
        .m_axi_mem_arsize(m_axi_mem_arsize),
        .m_axi_mem_aruser(m_axi_mem_aruser),
        .m_axi_mem_arvalid(m_axi_mem_arvalid),
        .m_axi_mem_rdata(m_axi_mem_rdata),
        .m_axi_mem_rlast(m_axi_mem_rlast),
        .m_axi_mem_rready(m_axi_mem_rready),
        .m_axi_mem_rresp(m_axi_mem_rresp),
        .m_axi_mem_rvalid(m_axi_mem_rvalid),
        .reset(reset),
        .vsm_VS_0_event_error(vsm_VS_0_event_error),
        .vsm_VS_0_hw_triggers(vsm_VS_0_hw_triggers),
        .vsm_VS_0_m_axis_status_tdata(vsm_VS_0_m_axis_status_tdata),
        .vsm_VS_0_m_axis_status_tvalid(vsm_VS_0_m_axis_status_tvalid),
        .vsm_VS_0_rm_decouple(vsm_VS_0_rm_decouple),
        .vsm_VS_0_rm_reset(vsm_VS_0_rm_reset),
        .vsm_VS_0_rm_shutdown_ack(vsm_VS_0_rm_shutdown_ack),
        .vsm_VS_0_rm_shutdown_req(vsm_VS_0_rm_shutdown_req));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module dfx_controller_setup_dfx_controller_0_0_cdc_sync
   (cc_done_i,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] ,
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_scndry_out_0 ,
    rd_en,
    icap_clk,
    clk,
    dout,
    cc_error_i,
    reset,
    empty,
    Q,
    icap_i);
  output cc_done_i;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] ;
  output \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_scndry_out_0 ;
  output rd_en;
  input icap_clk;
  input clk;
  input [0:0]dout;
  input cc_error_i;
  input reset;
  input empty;
  input [3:0]Q;
  input [0:0]icap_i;

  wire \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_scndry_out_0 ;
  wire [3:0]Q;
  wire cc_done_i;
  wire cc_error_i;
  wire clk;
  wire [0:0]dout;
  wire empty;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] ;
  wire icap_clk;
  wire [0:0]icap_i;
  wire p_in_d1_cdc_from;
  wire prmry_in_xored;
  wire rd_en;
  wire reset;
  wire s_out_d1_cdc_to;
  wire s_out_d2;
  wire s_out_d3;
  wire s_out_d4;
  wire s_out_d5;
  wire s_out_d6;
  wire s_out_d7;
  wire s_out_re__0;
  wire srst_d1;
  wire srst_d2;
  wire srst_d3;
  wire srst_d4;
  wire srst_d5;
  wire srst_d6;
  wire srst_d7;

  (* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_s_out_d2 
       (.C(clk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_s_out_d3 
       (.C(clk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_s_out_d4 
       (.C(clk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_s_out_d5 
       (.C(clk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_s_out_d6 
       (.C(clk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_s_out_d7 
       (.C(clk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_scndry_out 
       (.C(clk),
        .CE(1'b1),
        .D(s_out_re__0),
        .Q(cc_done_i),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.REG_P_IN2_cdc_to 
       (.C(clk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.REG_P_IN_cdc_from 
       (.C(icap_clk),
        .CE(1'b1),
        .D(prmry_in_xored),
        .Q(p_in_d1_cdc_from),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFEF00000010)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.REG_P_IN_cdc_from_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(icap_i),
        .I5(p_in_d1_cdc_from),
        .O(prmry_in_xored));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.s_rst_d1 
       (.C(clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(srst_d1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.s_rst_d2 
       (.C(clk),
        .CE(1'b1),
        .D(srst_d1),
        .Q(srst_d2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.s_rst_d3 
       (.C(clk),
        .CE(1'b1),
        .D(srst_d2),
        .Q(srst_d3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.s_rst_d4 
       (.C(clk),
        .CE(1'b1),
        .D(srst_d3),
        .Q(srst_d4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.s_rst_d5 
       (.C(clk),
        .CE(1'b1),
        .D(srst_d4),
        .Q(srst_d5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.s_rst_d6 
       (.C(clk),
        .CE(1'b1),
        .D(srst_d5),
        .Q(srst_d6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.s_rst_d7 
       (.C(clk),
        .CE(1'b1),
        .D(srst_d6),
        .Q(srst_d7),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \blk_id_fifo.xpm_fifo_sync_inst_i_2 
       (.I0(cc_done_i),
        .I1(reset),
        .I2(empty),
        .O(rd_en));
  LUT2 #(
    .INIT(4'h8)) 
    cc_error_i_1
       (.I0(cc_done_i),
        .I1(cc_error_i),
        .O(\GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_scndry_out_0 ));
  LUT3 #(
    .INIT(8'h60)) 
    s_out_re
       (.I0(s_out_d6),
        .I1(s_out_d7),
        .I2(srst_d7),
        .O(s_out_re__0));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \vs_id_o[0]_i_1 
       (.I0(dout),
        .I1(cc_done_i),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] ));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module dfx_controller_setup_dfx_controller_0_0_cdc_sync_48
   (cc_error_i,
    \cp_fsm_cs_reg[3] ,
    icap_clk,
    clk,
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.REG_P_IN_cdc_from_0 ,
    icap_i,
    Q);
  output cc_error_i;
  output \cp_fsm_cs_reg[3] ;
  input icap_clk;
  input clk;
  input \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.REG_P_IN_cdc_from_0 ;
  input [0:0]icap_i;
  input [3:0]Q;

  wire \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.REG_P_IN_cdc_from_0 ;
  wire [3:0]Q;
  wire cc_error_i;
  wire clk;
  wire \cp_fsm_cs_reg[3] ;
  wire icap_clk;
  wire [0:0]icap_i;
  wire p_in_d1_cdc_from;
  wire prmry_in_xored;
  wire s_out_d1_cdc_to;
  wire s_out_d2;
  wire s_out_d3;
  wire s_out_d4;
  wire s_out_d5;
  wire s_out_d6;
  wire s_out_d7;
  wire s_out_re__0;
  wire srst_d1;
  wire srst_d2;
  wire srst_d3;
  wire srst_d4;
  wire srst_d5;
  wire srst_d6;
  wire srst_d7;

  (* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_s_out_d2 
       (.C(clk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_s_out_d3 
       (.C(clk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_s_out_d4 
       (.C(clk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_s_out_d5 
       (.C(clk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_s_out_d6 
       (.C(clk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_s_out_d7 
       (.C(clk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_scndry_out 
       (.C(clk),
        .CE(1'b1),
        .D(s_out_re__0),
        .Q(cc_error_i),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.REG_P_IN2_cdc_to 
       (.C(clk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.REG_P_IN_cdc_from 
       (.C(icap_clk),
        .CE(1'b1),
        .D(prmry_in_xored),
        .Q(p_in_d1_cdc_from),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFD00000002)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.REG_P_IN_cdc_from_i_1 
       (.I0(\GENERATE_PULSE_P_S_CDC_OPEN_ENDED.REG_P_IN_cdc_from_0 ),
        .I1(icap_i),
        .I2(\cp_fsm_cs_reg[3] ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(p_in_d1_cdc_from),
        .O(prmry_in_xored));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.s_rst_d1 
       (.C(clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(srst_d1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.s_rst_d2 
       (.C(clk),
        .CE(1'b1),
        .D(srst_d1),
        .Q(srst_d2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.s_rst_d3 
       (.C(clk),
        .CE(1'b1),
        .D(srst_d2),
        .Q(srst_d3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.s_rst_d4 
       (.C(clk),
        .CE(1'b1),
        .D(srst_d3),
        .Q(srst_d4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.s_rst_d5 
       (.C(clk),
        .CE(1'b1),
        .D(srst_d4),
        .Q(srst_d5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.s_rst_d6 
       (.C(clk),
        .CE(1'b1),
        .D(srst_d5),
        .Q(srst_d6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_PULSE_P_S_CDC_OPEN_ENDED.s_rst_d7 
       (.C(clk),
        .CE(1'b1),
        .D(srst_d6),
        .Q(srst_d7),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hB)) 
    \icap_o_preswap[2]_i_2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .O(\cp_fsm_cs_reg[3] ));
  LUT3 #(
    .INIT(8'h60)) 
    s_out_re
       (.I0(s_out_d6),
        .I1(s_out_d7),
        .I2(srst_d7),
        .O(s_out_re__0));
endmodule

(* ORIG_REF_NAME = "cntr_incr_decr_addn_f" *) 
module dfx_controller_setup_dfx_controller_0_0_cntr_incr_decr_addn_f
   (fifo_full_p1,
    Q,
    sig_next_sequential_reg_reg,
    E,
    sig_s_ready_out_reg,
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0,
    m_axi_mem_rlast_0,
    sig_wr_fifo,
    \INFERRED_GEN.cnt_i_reg[1]_0 ,
    \INFERRED_GEN.cnt_i_reg[1]_1 ,
    sig_mstr2data_cmd_valid,
    sig_dqual_reg_empty,
    sig_dqual_reg_empty_reg,
    sig_next_sequential_reg,
    \sig_dbeat_cntr_reg[0] ,
    sig_cmd_stat_rst_user_reg_n_cdc_from,
    sig_ld_new_cmd_reg,
    sig_next_calc_error_reg,
    sig_rsc2stat_status_valid,
    sig_stat2rsc_status_ready,
    sig_addr_posted_cntr,
    sig_dqual_reg_empty_reg_0,
    m_axi_mem_rvalid,
    sig_dqual_reg_empty_reg_1,
    sig_dqual_reg_full,
    sig_dqual_reg_empty_reg_2,
    sig_last_dbeat_reg,
    sig_last_dbeat_reg_0,
    m_axi_mem_rlast,
    SR,
    clk);
  output fifo_full_p1;
  output [1:0]Q;
  output sig_next_sequential_reg_reg;
  output [0:0]E;
  output sig_s_ready_out_reg;
  output sig_cmd_stat_rst_user_reg_n_cdc_from_reg;
  output sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0;
  output m_axi_mem_rlast_0;
  input sig_wr_fifo;
  input \INFERRED_GEN.cnt_i_reg[1]_0 ;
  input \INFERRED_GEN.cnt_i_reg[1]_1 ;
  input sig_mstr2data_cmd_valid;
  input sig_dqual_reg_empty;
  input sig_dqual_reg_empty_reg;
  input sig_next_sequential_reg;
  input \sig_dbeat_cntr_reg[0] ;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;
  input sig_ld_new_cmd_reg;
  input sig_next_calc_error_reg;
  input sig_rsc2stat_status_valid;
  input sig_stat2rsc_status_ready;
  input [2:0]sig_addr_posted_cntr;
  input sig_dqual_reg_empty_reg_0;
  input m_axi_mem_rvalid;
  input sig_dqual_reg_empty_reg_1;
  input sig_dqual_reg_full;
  input sig_dqual_reg_empty_reg_2;
  input sig_last_dbeat_reg;
  input sig_last_dbeat_reg_0;
  input m_axi_mem_rlast;
  input [0:0]SR;
  input clk;

  wire [0:0]E;
  wire \INFERRED_GEN.cnt_i_reg[1]_0 ;
  wire \INFERRED_GEN.cnt_i_reg[1]_1 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire [2:0]addr_i_p1;
  wire clk;
  wire fifo_full_p1;
  wire m_axi_mem_rlast;
  wire m_axi_mem_rlast_0;
  wire m_axi_mem_rvalid;
  wire [2:0]sig_addr_posted_cntr;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from_reg;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0;
  wire \sig_dbeat_cntr_reg[0] ;
  wire sig_dqual_reg_empty;
  wire sig_dqual_reg_empty_reg;
  wire sig_dqual_reg_empty_reg_0;
  wire sig_dqual_reg_empty_reg_1;
  wire sig_dqual_reg_empty_reg_2;
  wire sig_dqual_reg_full;
  wire sig_last_dbeat_reg;
  wire sig_last_dbeat_reg_0;
  wire sig_ld_new_cmd_reg;
  wire sig_mstr2data_cmd_valid;
  wire sig_next_calc_error_reg;
  wire sig_next_cmd_cmplt_reg_i_4_n_0;
  wire sig_next_cmd_cmplt_reg_i_5_n_0;
  wire sig_next_sequential_reg;
  wire sig_next_sequential_reg_reg;
  wire sig_rd_empty;
  wire sig_rsc2stat_status_valid;
  wire sig_s_ready_out_reg;
  wire sig_stat2rsc_status_ready;
  wire sig_wr_fifo;

  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h48004920)) 
    FIFO_Full_i_1__0
       (.I0(Q[0]),
        .I1(sig_next_sequential_reg_reg),
        .I2(sig_wr_fifo),
        .I3(Q[1]),
        .I4(sig_rd_empty),
        .O(fifo_full_p1));
  LUT5 #(
    .INIT(32'h5595AA6A)) 
    \INFERRED_GEN.cnt_i[0]_i_1__0 
       (.I0(sig_next_sequential_reg_reg),
        .I1(sig_mstr2data_cmd_valid),
        .I2(\INFERRED_GEN.cnt_i_reg[1]_1 ),
        .I3(\INFERRED_GEN.cnt_i_reg[1]_0 ),
        .I4(Q[0]),
        .O(addr_i_p1[0]));
  LUT6 #(
    .INIT(64'hBAAADFFF45552000)) 
    \INFERRED_GEN.cnt_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(\INFERRED_GEN.cnt_i_reg[1]_0 ),
        .I2(\INFERRED_GEN.cnt_i_reg[1]_1 ),
        .I3(sig_mstr2data_cmd_valid),
        .I4(sig_next_sequential_reg_reg),
        .I5(Q[1]),
        .O(addr_i_p1[1]));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h006A03AA)) 
    \INFERRED_GEN.cnt_i[2]_i_1__0 
       (.I0(sig_rd_empty),
        .I1(Q[1]),
        .I2(sig_wr_fifo),
        .I3(sig_next_sequential_reg_reg),
        .I4(Q[0]),
        .O(addr_i_p1[2]));
  FDSE \INFERRED_GEN.cnt_i_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(addr_i_p1[0]),
        .Q(Q[0]),
        .S(SR));
  FDSE \INFERRED_GEN.cnt_i_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(addr_i_p1[1]),
        .Q(Q[1]),
        .S(SR));
  FDSE \INFERRED_GEN.cnt_i_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(addr_i_p1[2]),
        .Q(sig_rd_empty),
        .S(SR));
  LUT6 #(
    .INIT(64'h5444FFFF44444444)) 
    \sig_dbeat_cntr[7]_i_1 
       (.I0(sig_next_cmd_cmplt_reg_i_4_n_0),
        .I1(sig_dqual_reg_empty),
        .I2(sig_dqual_reg_empty_reg),
        .I3(sig_next_sequential_reg),
        .I4(\sig_dbeat_cntr_reg[0] ),
        .I5(sig_s_ready_out_reg),
        .O(E));
  LUT6 #(
    .INIT(64'h1DFF00001D000000)) 
    sig_last_dbeat_i_1
       (.I0(sig_last_dbeat_reg),
        .I1(sig_next_sequential_reg_reg),
        .I2(sig_last_dbeat_reg_0),
        .I3(E),
        .I4(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .I5(sig_dqual_reg_empty_reg),
        .O(sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'h08)) 
    sig_ld_new_cmd_reg_i_1
       (.I0(sig_next_sequential_reg_reg),
        .I1(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .I2(sig_ld_new_cmd_reg),
        .O(sig_cmd_stat_rst_user_reg_n_cdc_from_reg));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT4 #(
    .INIT(16'h40FF)) 
    sig_next_cmd_cmplt_reg_i_1
       (.I0(sig_next_sequential_reg_reg),
        .I1(m_axi_mem_rlast),
        .I2(sig_s_ready_out_reg),
        .I3(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .O(m_axi_mem_rlast_0));
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sig_next_cmd_cmplt_reg_i_2
       (.I0(sig_s_ready_out_reg),
        .I1(sig_next_sequential_reg),
        .I2(sig_dqual_reg_empty_reg),
        .I3(sig_dqual_reg_empty),
        .I4(sig_next_cmd_cmplt_reg_i_4_n_0),
        .O(sig_next_sequential_reg_reg));
  LUT6 #(
    .INIT(64'h0000000000080000)) 
    sig_next_cmd_cmplt_reg_i_3
       (.I0(sig_dqual_reg_empty_reg_0),
        .I1(m_axi_mem_rvalid),
        .I2(sig_dqual_reg_empty_reg_1),
        .I3(sig_next_calc_error_reg),
        .I4(sig_dqual_reg_full),
        .I5(sig_dqual_reg_empty_reg_2),
        .O(sig_s_ready_out_reg));
  LUT5 #(
    .INIT(32'hFEFEFFFE)) 
    sig_next_cmd_cmplt_reg_i_4
       (.I0(sig_next_cmd_cmplt_reg_i_5_n_0),
        .I1(sig_next_calc_error_reg),
        .I2(sig_rd_empty),
        .I3(sig_rsc2stat_status_valid),
        .I4(sig_stat2rsc_status_ready),
        .O(sig_next_cmd_cmplt_reg_i_4_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    sig_next_cmd_cmplt_reg_i_5
       (.I0(sig_addr_posted_cntr[2]),
        .I1(sig_addr_posted_cntr[1]),
        .I2(sig_addr_posted_cntr[0]),
        .O(sig_next_cmd_cmplt_reg_i_5_n_0));
endmodule

(* ORIG_REF_NAME = "cntr_incr_decr_addn_f" *) 
module dfx_controller_setup_dfx_controller_0_0_cntr_incr_decr_addn_f_28
   (fifo_full_p1,
    Q,
    sig_push_addr_reg1_out,
    \INFERRED_GEN.cnt_i_reg[2]_0 ,
    sig_wr_fifo,
    sig_addr_reg_empty,
    \INFERRED_GEN.cnt_i_reg[1]_0 ,
    \INFERRED_GEN.cnt_i_reg[1]_1 ,
    sig_mstr2addr_cmd_valid,
    sig_cmd_stat_rst_user_reg_n_cdc_from,
    SR,
    clk);
  output fifo_full_p1;
  output [1:0]Q;
  output sig_push_addr_reg1_out;
  output \INFERRED_GEN.cnt_i_reg[2]_0 ;
  input sig_wr_fifo;
  input sig_addr_reg_empty;
  input \INFERRED_GEN.cnt_i_reg[1]_0 ;
  input \INFERRED_GEN.cnt_i_reg[1]_1 ;
  input sig_mstr2addr_cmd_valid;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;
  input [0:0]SR;
  input clk;

  wire \INFERRED_GEN.cnt_i_reg[1]_0 ;
  wire \INFERRED_GEN.cnt_i_reg[1]_1 ;
  wire \INFERRED_GEN.cnt_i_reg[2]_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire [2:0]addr_i_p1;
  wire clk;
  wire fifo_full_p1;
  wire sig_addr_reg_empty;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_mstr2addr_cmd_valid;
  wire sig_push_addr_reg1_out;
  wire sig_rd_empty;
  wire sig_wr_fifo;

  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT5 #(
    .INIT(32'h06010008)) 
    FIFO_Full_i_1
       (.I0(sig_wr_fifo),
        .I1(Q[0]),
        .I2(sig_rd_empty),
        .I3(sig_addr_reg_empty),
        .I4(Q[1]),
        .O(fifo_full_p1));
  LUT6 #(
    .INIT(64'hBFBF40BF4040BF40)) 
    \INFERRED_GEN.cnt_i[0]_i_1 
       (.I0(\INFERRED_GEN.cnt_i_reg[1]_0 ),
        .I1(\INFERRED_GEN.cnt_i_reg[1]_1 ),
        .I2(sig_mstr2addr_cmd_valid),
        .I3(sig_addr_reg_empty),
        .I4(sig_rd_empty),
        .I5(Q[0]),
        .O(addr_i_p1[0]));
  LUT6 #(
    .INIT(64'hBAAADFFF45552000)) 
    \INFERRED_GEN.cnt_i[1]_i_1 
       (.I0(Q[0]),
        .I1(\INFERRED_GEN.cnt_i_reg[1]_0 ),
        .I2(\INFERRED_GEN.cnt_i_reg[1]_1 ),
        .I3(sig_mstr2addr_cmd_valid),
        .I4(sig_push_addr_reg1_out),
        .I5(Q[1]),
        .O(addr_i_p1[1]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT5 #(
    .INIT(32'h52F0F0F4)) 
    \INFERRED_GEN.cnt_i[2]_i_1 
       (.I0(Q[1]),
        .I1(sig_addr_reg_empty),
        .I2(sig_rd_empty),
        .I3(Q[0]),
        .I4(sig_wr_fifo),
        .O(addr_i_p1[2]));
  FDSE \INFERRED_GEN.cnt_i_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(addr_i_p1[0]),
        .Q(Q[0]),
        .S(SR));
  FDSE \INFERRED_GEN.cnt_i_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(addr_i_p1[1]),
        .Q(Q[1]),
        .S(SR));
  FDSE \INFERRED_GEN.cnt_i_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(addr_i_p1[2]),
        .Q(sig_rd_empty),
        .S(SR));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \sig_next_addr_reg[31]_i_2 
       (.I0(sig_addr_reg_empty),
        .I1(sig_rd_empty),
        .O(sig_push_addr_reg1_out));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'h40)) 
    sig_posted_to_axi_2_i_1
       (.I0(sig_rd_empty),
        .I1(sig_addr_reg_empty),
        .I2(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .O(\INFERRED_GEN.cnt_i_reg[2]_0 ));
endmodule

(* ORIG_REF_NAME = "dynshreg_f" *) 
module dfx_controller_setup_dfx_controller_0_0_dynshreg_f
   (sig_wr_fifo,
    sig_calc_error_reg_reg,
    out,
    sig_mstr2addr_cmd_valid,
    sig_calc_error_reg_reg_0,
    sig_calc_error_reg_reg_1,
    in,
    Q,
    clk);
  output sig_wr_fifo;
  output sig_calc_error_reg_reg;
  output [42:0]out;
  input sig_mstr2addr_cmd_valid;
  input sig_calc_error_reg_reg_0;
  input sig_calc_error_reg_reg_1;
  input [41:0]in;
  input [1:0]Q;
  input clk;

  wire [1:0]Q;
  wire clk;
  wire [41:0]in;
  wire [42:0]out;
  wire sig_calc_error_reg_reg;
  wire sig_calc_error_reg_reg_0;
  wire sig_calc_error_reg_reg_1;
  wire sig_mstr2addr_cmd_valid;
  wire sig_wr_fifo;

  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][11]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][11]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[40]),
        .Q(out[41]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][13]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][13]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(1'b1),
        .Q(out[40]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][15]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][15]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[39]),
        .Q(out[39]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][16]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][16]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[38]),
        .Q(out[38]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][17]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][17]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[37]),
        .Q(out[37]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][18]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][18]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[36]),
        .Q(out[36]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][19]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][19]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[35]),
        .Q(out[35]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][20]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][20]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[34]),
        .Q(out[34]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][21]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][21]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[33]),
        .Q(out[33]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][22]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][22]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[32]),
        .Q(out[32]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][23]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][23]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[31]),
        .Q(out[31]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][24]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][24]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[30]),
        .Q(out[30]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][25]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][25]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[29]),
        .Q(out[29]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][26]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][26]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[28]),
        .Q(out[28]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][27]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][27]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[27]),
        .Q(out[27]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][28]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][28]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[26]),
        .Q(out[26]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][29]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][29]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[25]),
        .Q(out[25]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][30]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][30]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[24]),
        .Q(out[24]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][31]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][31]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[23]),
        .Q(out[23]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][32]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][32]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[22]),
        .Q(out[22]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][33]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][33]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[21]),
        .Q(out[21]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][34]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][34]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[20]),
        .Q(out[20]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][35]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][35]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[19]),
        .Q(out[19]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][36]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][36]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[18]),
        .Q(out[18]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][37]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][37]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[17]),
        .Q(out[17]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][38]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][38]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[16]),
        .Q(out[16]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][39]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][39]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[15]),
        .Q(out[15]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][40]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][40]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[14]),
        .Q(out[14]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][41]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][41]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[13]),
        .Q(out[13]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][42]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][42]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[12]),
        .Q(out[12]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][43]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][43]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[11]),
        .Q(out[11]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][44]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][44]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[10]),
        .Q(out[10]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][45]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][45]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[9]),
        .Q(out[9]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][46]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][46]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[8]),
        .Q(out[8]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][47]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][47]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[7]),
        .Q(out[7]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][48]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][48]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[6]),
        .Q(out[6]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][49]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][49]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[5]),
        .Q(out[5]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][50]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][50]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[4]),
        .Q(out[4]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][51]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][51]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[3]),
        .Q(out[3]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][52]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][52]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[2]),
        .Q(out[2]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][53]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][53]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[1]),
        .Q(out[1]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][54]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][54]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[0]),
        .Q(out[0]));
  LUT3 #(
    .INIT(8'h08)) 
    \INFERRED_GEN.data_reg[2][54]_srl3_i_1 
       (.I0(sig_mstr2addr_cmd_valid),
        .I1(sig_calc_error_reg_reg_0),
        .I2(sig_calc_error_reg_reg_1),
        .O(sig_wr_fifo));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_ADDR_CNTL/GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][8]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][8]_srl3 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[41]),
        .Q(out[42]));
  LUT1 #(
    .INIT(2'h1)) 
    sig_addr_valid_reg_i_1
       (.I0(out[42]),
        .O(sig_calc_error_reg_reg));
endmodule

(* ORIG_REF_NAME = "dynshreg_f" *) 
module dfx_controller_setup_dfx_controller_0_0_dynshreg_f__parameterized0
   (sig_wr_fifo,
    D,
    \INFERRED_GEN.cnt_i_reg[0] ,
    out,
    sig_mstr2data_cmd_valid,
    sig_next_calc_error_reg_reg,
    sig_next_calc_error_reg_reg_0,
    \sig_dbeat_cntr_reg[0] ,
    Q,
    \sig_dbeat_cntr_reg[6] ,
    \sig_dbeat_cntr_reg[4] ,
    in,
    sig_next_calc_error_reg_reg_1,
    clk);
  output sig_wr_fifo;
  output [7:0]D;
  output \INFERRED_GEN.cnt_i_reg[0] ;
  output [3:0]out;
  input sig_mstr2data_cmd_valid;
  input sig_next_calc_error_reg_reg;
  input sig_next_calc_error_reg_reg_0;
  input \sig_dbeat_cntr_reg[0] ;
  input [7:0]Q;
  input \sig_dbeat_cntr_reg[6] ;
  input \sig_dbeat_cntr_reg[4] ;
  input [11:0]in;
  input [1:0]sig_next_calc_error_reg_reg_1;
  input clk;

  wire [7:0]D;
  wire \INFERRED_GEN.cnt_i_reg[0] ;
  wire [7:0]Q;
  wire clk;
  wire [11:0]in;
  wire [3:0]out;
  wire [13:6]sig_cmd_fifo_data_out;
  wire \sig_dbeat_cntr_reg[0] ;
  wire \sig_dbeat_cntr_reg[4] ;
  wire \sig_dbeat_cntr_reg[6] ;
  wire sig_last_dbeat_i_5_n_0;
  wire sig_mstr2data_cmd_valid;
  wire sig_next_calc_error_reg_reg;
  wire sig_next_calc_error_reg_reg_0;
  wire [1:0]sig_next_calc_error_reg_reg_1;
  wire sig_wr_fifo;

  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][15]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][15]_srl3 
       (.A0(sig_next_calc_error_reg_reg_1[0]),
        .A1(sig_next_calc_error_reg_reg_1[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[7]),
        .Q(sig_cmd_fifo_data_out[13]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][16]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][16]_srl3 
       (.A0(sig_next_calc_error_reg_reg_1[0]),
        .A1(sig_next_calc_error_reg_reg_1[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[6]),
        .Q(sig_cmd_fifo_data_out[12]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][17]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][17]_srl3 
       (.A0(sig_next_calc_error_reg_reg_1[0]),
        .A1(sig_next_calc_error_reg_reg_1[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[5]),
        .Q(sig_cmd_fifo_data_out[11]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][18]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][18]_srl3 
       (.A0(sig_next_calc_error_reg_reg_1[0]),
        .A1(sig_next_calc_error_reg_reg_1[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[4]),
        .Q(sig_cmd_fifo_data_out[10]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][19]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][19]_srl3 
       (.A0(sig_next_calc_error_reg_reg_1[0]),
        .A1(sig_next_calc_error_reg_reg_1[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[3]),
        .Q(sig_cmd_fifo_data_out[9]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][20]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][20]_srl3 
       (.A0(sig_next_calc_error_reg_reg_1[0]),
        .A1(sig_next_calc_error_reg_reg_1[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[2]),
        .Q(sig_cmd_fifo_data_out[8]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][21]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][21]_srl3 
       (.A0(sig_next_calc_error_reg_reg_1[0]),
        .A1(sig_next_calc_error_reg_reg_1[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[1]),
        .Q(sig_cmd_fifo_data_out[7]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][22]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][22]_srl3 
       (.A0(sig_next_calc_error_reg_reg_1[0]),
        .A1(sig_next_calc_error_reg_reg_1[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[0]),
        .Q(sig_cmd_fifo_data_out[6]));
  LUT3 #(
    .INIT(8'h08)) 
    \INFERRED_GEN.data_reg[2][22]_srl3_i_1 
       (.I0(sig_mstr2data_cmd_valid),
        .I1(sig_next_calc_error_reg_reg),
        .I2(sig_next_calc_error_reg_reg_0),
        .O(sig_wr_fifo));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][2]_srl3 
       (.A0(sig_next_calc_error_reg_reg_1[0]),
        .A1(sig_next_calc_error_reg_reg_1[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[11]),
        .Q(out[3]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][3]_srl3 
       (.A0(sig_next_calc_error_reg_reg_1[0]),
        .A1(sig_next_calc_error_reg_reg_1[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[10]),
        .Q(out[2]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][4]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][4]_srl3 
       (.A0(sig_next_calc_error_reg_reg_1[0]),
        .A1(sig_next_calc_error_reg_reg_1[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[9]),
        .Q(out[1]));
  (* srl_bus_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2] " *) 
  (* srl_name = "U0/\i_fetch0/i_dma/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/USE_SRL_FIFO.I_SYNC_FIFO/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[2][5]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[2][5]_srl3 
       (.A0(sig_next_calc_error_reg_reg_1[0]),
        .A1(sig_next_calc_error_reg_reg_1[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(sig_wr_fifo),
        .CLK(clk),
        .D(in[8]),
        .Q(out[0]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \sig_dbeat_cntr[0]_i_1 
       (.I0(sig_cmd_fifo_data_out[6]),
        .I1(\sig_dbeat_cntr_reg[0] ),
        .I2(Q[0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT4 #(
    .INIT(16'hB88B)) 
    \sig_dbeat_cntr[1]_i_1 
       (.I0(sig_cmd_fifo_data_out[7]),
        .I1(\sig_dbeat_cntr_reg[0] ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(D[1]));
  LUT5 #(
    .INIT(32'hB8B8B88B)) 
    \sig_dbeat_cntr[2]_i_1 
       (.I0(sig_cmd_fifo_data_out[8]),
        .I1(\sig_dbeat_cntr_reg[0] ),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8B88B)) 
    \sig_dbeat_cntr[3]_i_1 
       (.I0(sig_cmd_fifo_data_out[9]),
        .I1(\sig_dbeat_cntr_reg[0] ),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(D[3]));
  LUT5 #(
    .INIT(32'hB88BB8B8)) 
    \sig_dbeat_cntr[4]_i_1 
       (.I0(sig_cmd_fifo_data_out[10]),
        .I1(\sig_dbeat_cntr_reg[0] ),
        .I2(Q[4]),
        .I3(Q[3]),
        .I4(\sig_dbeat_cntr_reg[4] ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B88BB8B8)) 
    \sig_dbeat_cntr[5]_i_1 
       (.I0(sig_cmd_fifo_data_out[11]),
        .I1(\sig_dbeat_cntr_reg[0] ),
        .I2(Q[5]),
        .I3(Q[4]),
        .I4(\sig_dbeat_cntr_reg[4] ),
        .I5(Q[3]),
        .O(D[5]));
  LUT4 #(
    .INIT(16'h8BB8)) 
    \sig_dbeat_cntr[6]_i_1 
       (.I0(sig_cmd_fifo_data_out[12]),
        .I1(\sig_dbeat_cntr_reg[0] ),
        .I2(Q[6]),
        .I3(\sig_dbeat_cntr_reg[6] ),
        .O(D[6]));
  LUT5 #(
    .INIT(32'hB88BB8B8)) 
    \sig_dbeat_cntr[7]_i_2 
       (.I0(sig_cmd_fifo_data_out[13]),
        .I1(\sig_dbeat_cntr_reg[0] ),
        .I2(Q[7]),
        .I3(Q[6]),
        .I4(\sig_dbeat_cntr_reg[6] ),
        .O(D[7]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    sig_last_dbeat_i_3
       (.I0(sig_cmd_fifo_data_out[8]),
        .I1(sig_cmd_fifo_data_out[9]),
        .I2(sig_cmd_fifo_data_out[6]),
        .I3(sig_cmd_fifo_data_out[7]),
        .I4(sig_last_dbeat_i_5_n_0),
        .O(\INFERRED_GEN.cnt_i_reg[0] ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sig_last_dbeat_i_5
       (.I0(sig_cmd_fifo_data_out[11]),
        .I1(sig_cmd_fifo_data_out[10]),
        .I2(sig_cmd_fifo_data_out[13]),
        .I3(sig_cmd_fifo_data_out[12]),
        .O(sig_last_dbeat_i_5_n_0));
endmodule

(* ORIG_REF_NAME = "srl_fifo_f" *) 
module dfx_controller_setup_dfx_controller_0_0_srl_fifo_f
   (FIFO_Full_reg,
    sig_push_addr_reg1_out,
    FIFO_Full_reg_0,
    sig_calc_error_reg_reg,
    out,
    \INFERRED_GEN.cnt_i_reg[2] ,
    SR,
    clk,
    sig_addr_reg_empty,
    \INFERRED_GEN.cnt_i_reg[1] ,
    sig_mstr2addr_cmd_valid,
    sig_cmd_stat_rst_user_reg_n_cdc_from,
    in);
  output FIFO_Full_reg;
  output sig_push_addr_reg1_out;
  output FIFO_Full_reg_0;
  output sig_calc_error_reg_reg;
  output [42:0]out;
  output \INFERRED_GEN.cnt_i_reg[2] ;
  input [0:0]SR;
  input clk;
  input sig_addr_reg_empty;
  input \INFERRED_GEN.cnt_i_reg[1] ;
  input sig_mstr2addr_cmd_valid;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;
  input [41:0]in;

  wire FIFO_Full_reg;
  wire FIFO_Full_reg_0;
  wire \INFERRED_GEN.cnt_i_reg[1] ;
  wire \INFERRED_GEN.cnt_i_reg[2] ;
  wire [0:0]SR;
  wire clk;
  wire [41:0]in;
  wire [42:0]out;
  wire sig_addr_reg_empty;
  wire sig_calc_error_reg_reg;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_mstr2addr_cmd_valid;
  wire sig_push_addr_reg1_out;

  dfx_controller_setup_dfx_controller_0_0_srl_fifo_rbu_f I_SRL_FIFO_RBU_F
       (.FIFO_Full_reg_0(FIFO_Full_reg),
        .FIFO_Full_reg_1(FIFO_Full_reg_0),
        .\INFERRED_GEN.cnt_i_reg[1] (\INFERRED_GEN.cnt_i_reg[1] ),
        .\INFERRED_GEN.cnt_i_reg[2] (\INFERRED_GEN.cnt_i_reg[2] ),
        .SR(SR),
        .clk(clk),
        .in(in),
        .out(out),
        .sig_addr_reg_empty(sig_addr_reg_empty),
        .sig_calc_error_reg_reg(sig_calc_error_reg_reg),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_mstr2addr_cmd_valid(sig_mstr2addr_cmd_valid),
        .sig_push_addr_reg1_out(sig_push_addr_reg1_out));
endmodule

(* ORIG_REF_NAME = "srl_fifo_f" *) 
module dfx_controller_setup_dfx_controller_0_0_srl_fifo_f__parameterized0
   (FIFO_Full_reg,
    sig_next_sequential_reg_reg,
    E,
    sig_s_ready_out_reg,
    D,
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0,
    m_axi_mem_rlast_0,
    out,
    SR,
    clk,
    \INFERRED_GEN.cnt_i_reg[1] ,
    sig_mstr2data_cmd_valid,
    sig_dqual_reg_empty,
    sig_dqual_reg_empty_reg,
    sig_next_sequential_reg,
    \sig_dbeat_cntr_reg[0] ,
    Q,
    \sig_dbeat_cntr_reg[6] ,
    \sig_dbeat_cntr_reg[4] ,
    sig_cmd_stat_rst_user_reg_n_cdc_from,
    sig_ld_new_cmd_reg,
    sig_next_calc_error_reg,
    sig_rsc2stat_status_valid,
    sig_stat2rsc_status_ready,
    sig_addr_posted_cntr,
    sig_dqual_reg_empty_reg_0,
    m_axi_mem_rvalid,
    sig_dqual_reg_empty_reg_1,
    sig_dqual_reg_full,
    sig_dqual_reg_empty_reg_2,
    sig_last_dbeat_reg,
    m_axi_mem_rlast,
    in);
  output FIFO_Full_reg;
  output sig_next_sequential_reg_reg;
  output [0:0]E;
  output sig_s_ready_out_reg;
  output [7:0]D;
  output sig_cmd_stat_rst_user_reg_n_cdc_from_reg;
  output sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0;
  output m_axi_mem_rlast_0;
  output [3:0]out;
  input [0:0]SR;
  input clk;
  input \INFERRED_GEN.cnt_i_reg[1] ;
  input sig_mstr2data_cmd_valid;
  input sig_dqual_reg_empty;
  input sig_dqual_reg_empty_reg;
  input sig_next_sequential_reg;
  input \sig_dbeat_cntr_reg[0] ;
  input [7:0]Q;
  input \sig_dbeat_cntr_reg[6] ;
  input \sig_dbeat_cntr_reg[4] ;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;
  input sig_ld_new_cmd_reg;
  input sig_next_calc_error_reg;
  input sig_rsc2stat_status_valid;
  input sig_stat2rsc_status_ready;
  input [2:0]sig_addr_posted_cntr;
  input sig_dqual_reg_empty_reg_0;
  input m_axi_mem_rvalid;
  input sig_dqual_reg_empty_reg_1;
  input sig_dqual_reg_full;
  input sig_dqual_reg_empty_reg_2;
  input sig_last_dbeat_reg;
  input m_axi_mem_rlast;
  input [11:0]in;

  wire [7:0]D;
  wire [0:0]E;
  wire FIFO_Full_reg;
  wire \INFERRED_GEN.cnt_i_reg[1] ;
  wire [7:0]Q;
  wire [0:0]SR;
  wire clk;
  wire [11:0]in;
  wire m_axi_mem_rlast;
  wire m_axi_mem_rlast_0;
  wire m_axi_mem_rvalid;
  wire [3:0]out;
  wire [2:0]sig_addr_posted_cntr;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from_reg;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0;
  wire \sig_dbeat_cntr_reg[0] ;
  wire \sig_dbeat_cntr_reg[4] ;
  wire \sig_dbeat_cntr_reg[6] ;
  wire sig_dqual_reg_empty;
  wire sig_dqual_reg_empty_reg;
  wire sig_dqual_reg_empty_reg_0;
  wire sig_dqual_reg_empty_reg_1;
  wire sig_dqual_reg_empty_reg_2;
  wire sig_dqual_reg_full;
  wire sig_last_dbeat_reg;
  wire sig_ld_new_cmd_reg;
  wire sig_mstr2data_cmd_valid;
  wire sig_next_calc_error_reg;
  wire sig_next_sequential_reg;
  wire sig_next_sequential_reg_reg;
  wire sig_rsc2stat_status_valid;
  wire sig_s_ready_out_reg;
  wire sig_stat2rsc_status_ready;

  dfx_controller_setup_dfx_controller_0_0_srl_fifo_rbu_f__parameterized0 I_SRL_FIFO_RBU_F
       (.D(D),
        .E(E),
        .FIFO_Full_reg_0(FIFO_Full_reg),
        .\INFERRED_GEN.cnt_i_reg[1] (\INFERRED_GEN.cnt_i_reg[1] ),
        .Q(Q),
        .SR(SR),
        .clk(clk),
        .in(in),
        .m_axi_mem_rlast(m_axi_mem_rlast),
        .m_axi_mem_rlast_0(m_axi_mem_rlast_0),
        .m_axi_mem_rvalid(m_axi_mem_rvalid),
        .out(out),
        .sig_addr_posted_cntr(sig_addr_posted_cntr),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_cmd_stat_rst_user_reg_n_cdc_from_reg(sig_cmd_stat_rst_user_reg_n_cdc_from_reg),
        .sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0(sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0),
        .\sig_dbeat_cntr_reg[0] (\sig_dbeat_cntr_reg[0] ),
        .\sig_dbeat_cntr_reg[4] (\sig_dbeat_cntr_reg[4] ),
        .\sig_dbeat_cntr_reg[6] (\sig_dbeat_cntr_reg[6] ),
        .sig_dqual_reg_empty(sig_dqual_reg_empty),
        .sig_dqual_reg_empty_reg(sig_dqual_reg_empty_reg),
        .sig_dqual_reg_empty_reg_0(sig_dqual_reg_empty_reg_0),
        .sig_dqual_reg_empty_reg_1(sig_dqual_reg_empty_reg_1),
        .sig_dqual_reg_empty_reg_2(sig_dqual_reg_empty_reg_2),
        .sig_dqual_reg_full(sig_dqual_reg_full),
        .sig_last_dbeat_reg(sig_last_dbeat_reg),
        .sig_ld_new_cmd_reg(sig_ld_new_cmd_reg),
        .sig_mstr2data_cmd_valid(sig_mstr2data_cmd_valid),
        .sig_next_calc_error_reg(sig_next_calc_error_reg),
        .sig_next_sequential_reg(sig_next_sequential_reg),
        .sig_next_sequential_reg_reg(sig_next_sequential_reg_reg),
        .sig_rsc2stat_status_valid(sig_rsc2stat_status_valid),
        .sig_s_ready_out_reg(sig_s_ready_out_reg),
        .sig_stat2rsc_status_ready(sig_stat2rsc_status_ready));
endmodule

(* ORIG_REF_NAME = "srl_fifo_rbu_f" *) 
module dfx_controller_setup_dfx_controller_0_0_srl_fifo_rbu_f
   (FIFO_Full_reg_0,
    sig_push_addr_reg1_out,
    FIFO_Full_reg_1,
    sig_calc_error_reg_reg,
    out,
    \INFERRED_GEN.cnt_i_reg[2] ,
    SR,
    clk,
    sig_addr_reg_empty,
    \INFERRED_GEN.cnt_i_reg[1] ,
    sig_mstr2addr_cmd_valid,
    sig_cmd_stat_rst_user_reg_n_cdc_from,
    in);
  output FIFO_Full_reg_0;
  output sig_push_addr_reg1_out;
  output FIFO_Full_reg_1;
  output sig_calc_error_reg_reg;
  output [42:0]out;
  output \INFERRED_GEN.cnt_i_reg[2] ;
  input [0:0]SR;
  input clk;
  input sig_addr_reg_empty;
  input \INFERRED_GEN.cnt_i_reg[1] ;
  input sig_mstr2addr_cmd_valid;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;
  input [41:0]in;

  wire CNTR_INCR_DECR_ADDN_F_I_n_1;
  wire CNTR_INCR_DECR_ADDN_F_I_n_2;
  wire FIFO_Full_reg_0;
  wire FIFO_Full_reg_1;
  wire \INFERRED_GEN.cnt_i_reg[1] ;
  wire \INFERRED_GEN.cnt_i_reg[2] ;
  wire [0:0]SR;
  wire clk;
  wire fifo_full_p1;
  wire [41:0]in;
  wire [42:0]out;
  wire sig_addr_reg_empty;
  wire sig_calc_error_reg_reg;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_mstr2addr_cmd_valid;
  wire sig_push_addr_reg1_out;
  wire sig_wr_fifo;

  dfx_controller_setup_dfx_controller_0_0_cntr_incr_decr_addn_f_28 CNTR_INCR_DECR_ADDN_F_I
       (.\INFERRED_GEN.cnt_i_reg[1]_0 (FIFO_Full_reg_0),
        .\INFERRED_GEN.cnt_i_reg[1]_1 (\INFERRED_GEN.cnt_i_reg[1] ),
        .\INFERRED_GEN.cnt_i_reg[2]_0 (\INFERRED_GEN.cnt_i_reg[2] ),
        .Q({CNTR_INCR_DECR_ADDN_F_I_n_1,CNTR_INCR_DECR_ADDN_F_I_n_2}),
        .SR(SR),
        .clk(clk),
        .fifo_full_p1(fifo_full_p1),
        .sig_addr_reg_empty(sig_addr_reg_empty),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_mstr2addr_cmd_valid(sig_mstr2addr_cmd_valid),
        .sig_push_addr_reg1_out(sig_push_addr_reg1_out),
        .sig_wr_fifo(sig_wr_fifo));
  dfx_controller_setup_dfx_controller_0_0_dynshreg_f DYNSHREG_F_I
       (.Q({CNTR_INCR_DECR_ADDN_F_I_n_1,CNTR_INCR_DECR_ADDN_F_I_n_2}),
        .clk(clk),
        .in(in),
        .out(out),
        .sig_calc_error_reg_reg(sig_calc_error_reg_reg),
        .sig_calc_error_reg_reg_0(\INFERRED_GEN.cnt_i_reg[1] ),
        .sig_calc_error_reg_reg_1(FIFO_Full_reg_0),
        .sig_mstr2addr_cmd_valid(sig_mstr2addr_cmd_valid),
        .sig_wr_fifo(sig_wr_fifo));
  FDRE FIFO_Full_reg
       (.C(clk),
        .CE(1'b1),
        .D(fifo_full_p1),
        .Q(FIFO_Full_reg_0),
        .R(SR));
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_onehot_sig_pcc_sm_state[6]_i_3 
       (.I0(FIFO_Full_reg_0),
        .I1(\INFERRED_GEN.cnt_i_reg[1] ),
        .O(FIFO_Full_reg_1));
endmodule

(* ORIG_REF_NAME = "srl_fifo_rbu_f" *) 
module dfx_controller_setup_dfx_controller_0_0_srl_fifo_rbu_f__parameterized0
   (FIFO_Full_reg_0,
    sig_next_sequential_reg_reg,
    E,
    sig_s_ready_out_reg,
    D,
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0,
    m_axi_mem_rlast_0,
    out,
    SR,
    clk,
    \INFERRED_GEN.cnt_i_reg[1] ,
    sig_mstr2data_cmd_valid,
    sig_dqual_reg_empty,
    sig_dqual_reg_empty_reg,
    sig_next_sequential_reg,
    \sig_dbeat_cntr_reg[0] ,
    Q,
    \sig_dbeat_cntr_reg[6] ,
    \sig_dbeat_cntr_reg[4] ,
    sig_cmd_stat_rst_user_reg_n_cdc_from,
    sig_ld_new_cmd_reg,
    sig_next_calc_error_reg,
    sig_rsc2stat_status_valid,
    sig_stat2rsc_status_ready,
    sig_addr_posted_cntr,
    sig_dqual_reg_empty_reg_0,
    m_axi_mem_rvalid,
    sig_dqual_reg_empty_reg_1,
    sig_dqual_reg_full,
    sig_dqual_reg_empty_reg_2,
    sig_last_dbeat_reg,
    m_axi_mem_rlast,
    in);
  output FIFO_Full_reg_0;
  output sig_next_sequential_reg_reg;
  output [0:0]E;
  output sig_s_ready_out_reg;
  output [7:0]D;
  output sig_cmd_stat_rst_user_reg_n_cdc_from_reg;
  output sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0;
  output m_axi_mem_rlast_0;
  output [3:0]out;
  input [0:0]SR;
  input clk;
  input \INFERRED_GEN.cnt_i_reg[1] ;
  input sig_mstr2data_cmd_valid;
  input sig_dqual_reg_empty;
  input sig_dqual_reg_empty_reg;
  input sig_next_sequential_reg;
  input \sig_dbeat_cntr_reg[0] ;
  input [7:0]Q;
  input \sig_dbeat_cntr_reg[6] ;
  input \sig_dbeat_cntr_reg[4] ;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;
  input sig_ld_new_cmd_reg;
  input sig_next_calc_error_reg;
  input sig_rsc2stat_status_valid;
  input sig_stat2rsc_status_ready;
  input [2:0]sig_addr_posted_cntr;
  input sig_dqual_reg_empty_reg_0;
  input m_axi_mem_rvalid;
  input sig_dqual_reg_empty_reg_1;
  input sig_dqual_reg_full;
  input sig_dqual_reg_empty_reg_2;
  input sig_last_dbeat_reg;
  input m_axi_mem_rlast;
  input [11:0]in;

  wire CNTR_INCR_DECR_ADDN_F_I_n_1;
  wire CNTR_INCR_DECR_ADDN_F_I_n_2;
  wire [7:0]D;
  wire DYNSHREG_F_I_n_9;
  wire [0:0]E;
  wire FIFO_Full_reg_0;
  wire \INFERRED_GEN.cnt_i_reg[1] ;
  wire [7:0]Q;
  wire [0:0]SR;
  wire clk;
  wire fifo_full_p1;
  wire [11:0]in;
  wire m_axi_mem_rlast;
  wire m_axi_mem_rlast_0;
  wire m_axi_mem_rvalid;
  wire [3:0]out;
  wire [2:0]sig_addr_posted_cntr;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from_reg;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0;
  wire \sig_dbeat_cntr_reg[0] ;
  wire \sig_dbeat_cntr_reg[4] ;
  wire \sig_dbeat_cntr_reg[6] ;
  wire sig_dqual_reg_empty;
  wire sig_dqual_reg_empty_reg;
  wire sig_dqual_reg_empty_reg_0;
  wire sig_dqual_reg_empty_reg_1;
  wire sig_dqual_reg_empty_reg_2;
  wire sig_dqual_reg_full;
  wire sig_last_dbeat_reg;
  wire sig_ld_new_cmd_reg;
  wire sig_mstr2data_cmd_valid;
  wire sig_next_calc_error_reg;
  wire sig_next_sequential_reg;
  wire sig_next_sequential_reg_reg;
  wire sig_rsc2stat_status_valid;
  wire sig_s_ready_out_reg;
  wire sig_stat2rsc_status_ready;
  wire sig_wr_fifo;

  dfx_controller_setup_dfx_controller_0_0_cntr_incr_decr_addn_f CNTR_INCR_DECR_ADDN_F_I
       (.E(E),
        .\INFERRED_GEN.cnt_i_reg[1]_0 (FIFO_Full_reg_0),
        .\INFERRED_GEN.cnt_i_reg[1]_1 (\INFERRED_GEN.cnt_i_reg[1] ),
        .Q({CNTR_INCR_DECR_ADDN_F_I_n_1,CNTR_INCR_DECR_ADDN_F_I_n_2}),
        .SR(SR),
        .clk(clk),
        .fifo_full_p1(fifo_full_p1),
        .m_axi_mem_rlast(m_axi_mem_rlast),
        .m_axi_mem_rlast_0(m_axi_mem_rlast_0),
        .m_axi_mem_rvalid(m_axi_mem_rvalid),
        .sig_addr_posted_cntr(sig_addr_posted_cntr),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_cmd_stat_rst_user_reg_n_cdc_from_reg(sig_cmd_stat_rst_user_reg_n_cdc_from_reg),
        .sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0(sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0),
        .\sig_dbeat_cntr_reg[0] (\sig_dbeat_cntr_reg[0] ),
        .sig_dqual_reg_empty(sig_dqual_reg_empty),
        .sig_dqual_reg_empty_reg(sig_dqual_reg_empty_reg),
        .sig_dqual_reg_empty_reg_0(sig_dqual_reg_empty_reg_0),
        .sig_dqual_reg_empty_reg_1(sig_dqual_reg_empty_reg_1),
        .sig_dqual_reg_empty_reg_2(sig_dqual_reg_empty_reg_2),
        .sig_dqual_reg_full(sig_dqual_reg_full),
        .sig_last_dbeat_reg(sig_last_dbeat_reg),
        .sig_last_dbeat_reg_0(DYNSHREG_F_I_n_9),
        .sig_ld_new_cmd_reg(sig_ld_new_cmd_reg),
        .sig_mstr2data_cmd_valid(sig_mstr2data_cmd_valid),
        .sig_next_calc_error_reg(sig_next_calc_error_reg),
        .sig_next_sequential_reg(sig_next_sequential_reg),
        .sig_next_sequential_reg_reg(sig_next_sequential_reg_reg),
        .sig_rsc2stat_status_valid(sig_rsc2stat_status_valid),
        .sig_s_ready_out_reg(sig_s_ready_out_reg),
        .sig_stat2rsc_status_ready(sig_stat2rsc_status_ready),
        .sig_wr_fifo(sig_wr_fifo));
  dfx_controller_setup_dfx_controller_0_0_dynshreg_f__parameterized0 DYNSHREG_F_I
       (.D(D),
        .\INFERRED_GEN.cnt_i_reg[0] (DYNSHREG_F_I_n_9),
        .Q(Q),
        .clk(clk),
        .in(in),
        .out(out),
        .\sig_dbeat_cntr_reg[0] (sig_next_sequential_reg_reg),
        .\sig_dbeat_cntr_reg[4] (\sig_dbeat_cntr_reg[4] ),
        .\sig_dbeat_cntr_reg[6] (\sig_dbeat_cntr_reg[6] ),
        .sig_mstr2data_cmd_valid(sig_mstr2data_cmd_valid),
        .sig_next_calc_error_reg_reg(\INFERRED_GEN.cnt_i_reg[1] ),
        .sig_next_calc_error_reg_reg_0(FIFO_Full_reg_0),
        .sig_next_calc_error_reg_reg_1({CNTR_INCR_DECR_ADDN_F_I_n_1,CNTR_INCR_DECR_ADDN_F_I_n_2}),
        .sig_wr_fifo(sig_wr_fifo));
  FDRE FIFO_Full_reg
       (.C(clk),
        .CE(1'b1),
        .D(fifo_full_p1),
        .Q(FIFO_Full_reg_0),
        .R(SR));
endmodule

(* DEST_SYNC_FF = "6" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[5] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[5] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [0]),
        .Q(\dest_graysync_ff[5] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [1]),
        .Q(\dest_graysync_ff[5] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [2]),
        .Q(\dest_graysync_ff[5] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [3]),
        .Q(\dest_graysync_ff[5] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [4]),
        .Q(\dest_graysync_ff[5] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[5] [0]),
        .I1(\dest_graysync_ff[5] [2]),
        .I2(\dest_graysync_ff[5] [4]),
        .I3(\dest_graysync_ff[5] [3]),
        .I4(\dest_graysync_ff[5] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[5] [1]),
        .I1(\dest_graysync_ff[5] [3]),
        .I2(\dest_graysync_ff[5] [4]),
        .I3(\dest_graysync_ff[5] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[5] [2]),
        .I1(\dest_graysync_ff[5] [4]),
        .I2(\dest_graysync_ff[5] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[5] [3]),
        .I1(\dest_graysync_ff[5] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "6" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_cdc_gray__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[5] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[5] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [0]),
        .Q(\dest_graysync_ff[5] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [1]),
        .Q(\dest_graysync_ff[5] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [2]),
        .Q(\dest_graysync_ff[5] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [3]),
        .Q(\dest_graysync_ff[5] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [4]),
        .Q(\dest_graysync_ff[5] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[5] [0]),
        .I1(\dest_graysync_ff[5] [2]),
        .I2(\dest_graysync_ff[5] [4]),
        .I3(\dest_graysync_ff[5] [3]),
        .I4(\dest_graysync_ff[5] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[5] [1]),
        .I1(\dest_graysync_ff[5] [3]),
        .I2(\dest_graysync_ff[5] [4]),
        .I3(\dest_graysync_ff[5] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[5] [2]),
        .I1(\dest_graysync_ff[5] [4]),
        .I2(\dest_graysync_ff[5] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[5] [3]),
        .I1(\dest_graysync_ff[5] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "6" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "6" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_cdc_gray__parameterized0
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [5:0]src_in_bin;
  input dest_clk;
  output [5:0]dest_out_bin;

  wire [5:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[4] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[5] ;
  wire [4:0]\^dest_out_bin ;
  wire [4:0]gray_enc;
  wire src_clk;
  wire [5:0]src_in_bin;

  assign dest_out_bin[5] = \dest_graysync_ff[5] [5];
  assign dest_out_bin[4:0] = \^dest_out_bin [4:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [0]),
        .Q(\dest_graysync_ff[5] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [1]),
        .Q(\dest_graysync_ff[5] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [2]),
        .Q(\dest_graysync_ff[5] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [3]),
        .Q(\dest_graysync_ff[5] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [4]),
        .Q(\dest_graysync_ff[5] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [5]),
        .Q(\dest_graysync_ff[5] [5]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[5] [0]),
        .I1(\dest_graysync_ff[5] [2]),
        .I2(\dest_graysync_ff[5] [4]),
        .I3(\dest_graysync_ff[5] [5]),
        .I4(\dest_graysync_ff[5] [3]),
        .I5(\dest_graysync_ff[5] [1]),
        .O(\^dest_out_bin [0]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[5] [1]),
        .I1(\dest_graysync_ff[5] [3]),
        .I2(\dest_graysync_ff[5] [5]),
        .I3(\dest_graysync_ff[5] [4]),
        .I4(\dest_graysync_ff[5] [2]),
        .O(\^dest_out_bin [1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[5] [2]),
        .I1(\dest_graysync_ff[5] [4]),
        .I2(\dest_graysync_ff[5] [5]),
        .I3(\dest_graysync_ff[5] [3]),
        .O(\^dest_out_bin [2]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[5] [3]),
        .I1(\dest_graysync_ff[5] [5]),
        .I2(\dest_graysync_ff[5] [4]),
        .O(\^dest_out_bin [3]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[5] [4]),
        .I1(\dest_graysync_ff[5] [5]),
        .O(\^dest_out_bin [4]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[5]),
        .Q(async_path[5]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "6" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "6" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_cdc_gray__parameterized0__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [5:0]src_in_bin;
  input dest_clk;
  output [5:0]dest_out_bin;

  wire [5:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[4] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[5] ;
  wire [4:0]\^dest_out_bin ;
  wire [4:0]gray_enc;
  wire src_clk;
  wire [5:0]src_in_bin;

  assign dest_out_bin[5] = \dest_graysync_ff[5] [5];
  assign dest_out_bin[4:0] = \^dest_out_bin [4:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [0]),
        .Q(\dest_graysync_ff[5] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [1]),
        .Q(\dest_graysync_ff[5] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [2]),
        .Q(\dest_graysync_ff[5] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [3]),
        .Q(\dest_graysync_ff[5] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [4]),
        .Q(\dest_graysync_ff[5] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[5][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[4] [5]),
        .Q(\dest_graysync_ff[5] [5]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[5] [0]),
        .I1(\dest_graysync_ff[5] [2]),
        .I2(\dest_graysync_ff[5] [4]),
        .I3(\dest_graysync_ff[5] [5]),
        .I4(\dest_graysync_ff[5] [3]),
        .I5(\dest_graysync_ff[5] [1]),
        .O(\^dest_out_bin [0]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[5] [1]),
        .I1(\dest_graysync_ff[5] [3]),
        .I2(\dest_graysync_ff[5] [5]),
        .I3(\dest_graysync_ff[5] [4]),
        .I4(\dest_graysync_ff[5] [2]),
        .O(\^dest_out_bin [1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[5] [2]),
        .I1(\dest_graysync_ff[5] [4]),
        .I2(\dest_graysync_ff[5] [5]),
        .I3(\dest_graysync_ff[5] [3]),
        .O(\^dest_out_bin [2]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[5] [3]),
        .I1(\dest_graysync_ff[5] [5]),
        .I2(\dest_graysync_ff[5] [4]),
        .O(\^dest_out_bin [3]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[5] [4]),
        .I1(\dest_graysync_ff[5] [5]),
        .O(\^dest_out_bin [4]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[5]),
        .Q(async_path[5]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "6" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [5:0]syncstages_ff;

  assign dest_rst = syncstages_ff[5];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[4]),
        .Q(syncstages_ff[5]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "6" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_cdc_sync_rst__2
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [5:0]syncstages_ff;

  assign dest_rst = syncstages_ff[5];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[4]),
        .Q(syncstages_ff[5]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn
   (count_value_i,
    Q,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    wr_clk);
  output [1:0]count_value_i;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [0:0]\count_value_i_reg[0]_0 ;
  input wr_clk;

  wire [1:0]Q;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[1]_i_2_n_0 ;
  wire [0:0]\count_value_i_reg[0]_0 ;
  wire ram_empty_i;
  wire rd_en;
  wire wr_clk;

  LUT6 #(
    .INIT(64'h000000005A88A655)) 
    \count_value_i[0]_i_1 
       (.I0(count_value_i[0]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(Q[1]),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg[0]_0 ),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000A8AA)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i[1]_i_2_n_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(ram_empty_i),
        .I4(\count_value_i_reg[0]_0 ),
        .O(\count_value_i[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFFFF755500008AA)) 
    \count_value_i[1]_i_2 
       (.I0(count_value_i[0]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(Q[1]),
        .I4(ram_empty_i),
        .I5(count_value_i[1]),
        .O(\count_value_i[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(count_value_i[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(count_value_i[1]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn_41
   (count_value_i,
    Q,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    wr_clk);
  output [1:0]count_value_i;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [0:0]\count_value_i_reg[0]_0 ;
  input wr_clk;

  wire [1:0]Q;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[1]_i_2_n_0 ;
  wire [0:0]\count_value_i_reg[0]_0 ;
  wire ram_empty_i;
  wire rd_en;
  wire wr_clk;

  LUT6 #(
    .INIT(64'h000000005A88A655)) 
    \count_value_i[0]_i_1 
       (.I0(count_value_i[0]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(Q[1]),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg[0]_0 ),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000A8AA)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i[1]_i_2_n_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(ram_empty_i),
        .I4(\count_value_i_reg[0]_0 ),
        .O(\count_value_i[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFFFF755500008AA)) 
    \count_value_i[1]_i_2 
       (.I0(count_value_i[0]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(Q[1]),
        .I4(ram_empty_i),
        .I5(count_value_i[1]),
        .O(\count_value_i[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(count_value_i[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(count_value_i[1]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn_49
   (count_value_i,
    Q,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    wr_clk);
  output [1:0]count_value_i;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [0:0]\count_value_i_reg[0]_0 ;
  input wr_clk;

  wire [1:0]Q;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[1]_i_2_n_0 ;
  wire [0:0]\count_value_i_reg[0]_0 ;
  wire ram_empty_i;
  wire rd_en;
  wire wr_clk;

  LUT6 #(
    .INIT(64'h000000005A88A655)) 
    \count_value_i[0]_i_1 
       (.I0(count_value_i[0]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(Q[1]),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg[0]_0 ),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000A8AA)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i[1]_i_2_n_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(ram_empty_i),
        .I4(\count_value_i_reg[0]_0 ),
        .O(\count_value_i[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFFFF755500008AA)) 
    \count_value_i[1]_i_2 
       (.I0(count_value_i[0]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(Q[1]),
        .I4(ram_empty_i),
        .I5(count_value_i[1]),
        .O(\count_value_i[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(count_value_i[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(count_value_i[1]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized0
   (D,
    Q,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    \count_value_i_reg[3]_0 ,
    \count_value_i_reg[0]_0 ,
    \count_value_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    p_14_in,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ,
    ram_wr_en_pf,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    count_value_i,
    \count_value_i_reg[0]_1 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[4]_1 ,
    wr_clk);
  output [1:0]D;
  output [3:0]Q;
  output \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output [1:0]\count_value_i_reg[3]_0 ;
  output \count_value_i_reg[0]_0 ;
  output [2:0]\count_value_i_reg[4]_0 ;
  input [4:0]\grdc.rd_data_count_i_reg[4] ;
  input p_14_in;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ;
  input ram_wr_en_pf;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ;
  input [3:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_0 ;
  input [1:0]count_value_i;
  input [1:0]\count_value_i_reg[0]_1 ;
  input rd_en;
  input ram_empty_i;
  input [0:0]\count_value_i_reg[4]_1 ;
  input wr_clk;

  wire [1:0]D;
  wire \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [3:0]Q;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[0]_1 ;
  wire [1:0]\count_value_i_reg[3]_0 ;
  wire [2:0]\count_value_i_reg[4]_0 ;
  wire [0:0]\count_value_i_reg[4]_1 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ;
  wire [3:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ;
  wire [4:0]\grdc.rd_data_count_i_reg[4] ;
  wire \grdc.rd_data_count_i_reg[4]_0 ;
  wire \gwdc.wr_data_count_i[2]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire p_14_in;
  wire ram_empty_i;
  wire ram_wr_en_pf;
  wire rd_en;
  wire wr_clk;

  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__1 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_1 [0]),
        .I2(\count_value_i_reg[0]_1 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__1 
       (.I0(\count_value_i_reg[0]_1 [1]),
        .I1(\count_value_i_reg[0]_1 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_1 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [0]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [1]),
        .I5(Q[1]),
        .O(\count_value_i_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[4] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFF5DFF55550455)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2 
       (.I0(Q[0]),
        .I1(ram_wr_en_pf),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ),
        .I3(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(Q[2]),
        .I2(\grdc.rd_data_count_i_reg[4] [2]),
        .I3(\grdc.rd_data_count_i_reg[4] [3]),
        .I4(Q[3]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hD4D444D4DDDDD4DD)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4] [0]),
        .I3(p_14_in),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ),
        .I5(Q[0]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h69699669)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [2]),
        .I2(Q[2]),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [1]),
        .I4(Q[1]),
        .O(\count_value_i_reg[3]_0 [0]));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [3]),
        .I3(Q[3]),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [2]),
        .I5(Q[2]),
        .O(\count_value_i_reg[3]_0 [1]));
  LUT6 #(
    .INIT(64'h0000900090909990)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[1]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [1]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [0]),
        .I3(ram_wr_en_pf),
        .I4(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .I5(Q[0]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_1 [1]),
        .I1(\count_value_i_reg[0]_1 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(\gwdc.wr_data_count_i[2]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(count_value_i[1]),
        .I5(\grdc.rd_data_count_i_reg[4] [1]),
        .O(\count_value_i_reg[4]_0 [0]));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \gwdc.wr_data_count_i[2]_i_2 
       (.I0(Q[1]),
        .I1(count_value_i[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(Q[0]),
        .I4(count_value_i[0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(\gwdc.wr_data_count_i[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h69699669)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] [3]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[4] [2]),
        .I4(Q[2]),
        .O(\count_value_i_reg[4]_0 [1]));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4]_0 ),
        .I2(\grdc.rd_data_count_i_reg[4] [4]),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\grdc.rd_data_count_i_reg[4] [3]),
        .I5(Q[3]),
        .O(\count_value_i_reg[4]_0 [2]));
  LUT6 #(
    .INIT(64'hF999FFF990009990)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(count_value_i[1]),
        .I4(Q[1]),
        .I5(\gwdc.wr_data_count_i[2]_i_2_n_0 ),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized0_39
   (D,
    Q,
    ram_empty_i0,
    leaving_empty0,
    \count_value_i_reg[0]_0 ,
    \count_value_i_reg[2]_0 ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ,
    ram_wr_en_pf,
    read_only,
    ram_empty_i,
    \gen_pntr_flags_cc.ram_empty_i_reg ,
    count_value_i,
    \count_value_i_reg[0]_1 ,
    wr_clk);
  output [1:0]D;
  output [4:0]Q;
  output ram_empty_i0;
  output leaving_empty0;
  output [0:0]\count_value_i_reg[0]_0 ;
  output \count_value_i_reg[2]_0 ;
  input [3:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ;
  input ram_wr_en_pf;
  input read_only;
  input ram_empty_i;
  input [3:0]\gen_pntr_flags_cc.ram_empty_i_reg ;
  input [1:0]count_value_i;
  input [0:0]\count_value_i_reg[0]_1 ;
  input wr_clk;

  wire [1:0]D;
  wire [4:0]Q;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [0:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[0]_1 ;
  wire \count_value_i_reg[2]_0 ;
  wire [3:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pntr_flags_cc.ram_empty_i_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ;
  wire going_empty1;
  wire leaving_empty0;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_wr_en_pf;
  wire read_only;
  wire wr_clk;

  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h8200000000008200)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4 
       (.I0(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [1]),
        .I2(Q[1]),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I4(Q[0]),
        .I5(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .O(leaving_empty0));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [3]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6 
       (.I0(Q[2]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [2]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h0FFF0088)) 
    \gen_pntr_flags_cc.ram_empty_i_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ),
        .I1(going_empty1),
        .I2(leaving_empty0),
        .I3(ram_wr_en_pf),
        .I4(ram_empty_i),
        .O(ram_empty_i0));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'h90)) 
    \gen_pntr_flags_cc.ram_empty_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ram_empty_i_reg [3]),
        .I2(\gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ),
        .O(going_empty1));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ram_empty_i_reg [0]),
        .I2(\gen_pntr_flags_cc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pntr_flags_cc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6966666669666966)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ),
        .I5(ram_wr_en_pf),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(read_only),
        .I2(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .I3(Q[1]),
        .I4(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(count_value_i[1]),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [1]),
        .I4(count_value_i[0]),
        .I5(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .O(\count_value_i_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gwdc.wr_data_count_i[4]_i_3 
       (.I0(Q[2]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [2]),
        .O(\count_value_i_reg[2]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized0_42
   (D,
    Q,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    \count_value_i_reg[3]_0 ,
    \count_value_i_reg[0]_0 ,
    \count_value_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    p_14_in,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ,
    ram_wr_en_pf,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    count_value_i,
    \count_value_i_reg[0]_1 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[4]_1 ,
    wr_clk);
  output [1:0]D;
  output [3:0]Q;
  output \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output [1:0]\count_value_i_reg[3]_0 ;
  output \count_value_i_reg[0]_0 ;
  output [2:0]\count_value_i_reg[4]_0 ;
  input [4:0]\grdc.rd_data_count_i_reg[4] ;
  input p_14_in;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ;
  input ram_wr_en_pf;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ;
  input [3:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_0 ;
  input [1:0]count_value_i;
  input [1:0]\count_value_i_reg[0]_1 ;
  input rd_en;
  input ram_empty_i;
  input [0:0]\count_value_i_reg[4]_1 ;
  input wr_clk;

  wire [1:0]D;
  wire \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [3:0]Q;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[0]_1 ;
  wire [1:0]\count_value_i_reg[3]_0 ;
  wire [2:0]\count_value_i_reg[4]_0 ;
  wire [0:0]\count_value_i_reg[4]_1 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ;
  wire [3:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ;
  wire [4:0]\grdc.rd_data_count_i_reg[4] ;
  wire \grdc.rd_data_count_i_reg[4]_0 ;
  wire \gwdc.wr_data_count_i[2]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire p_14_in;
  wire ram_empty_i;
  wire ram_wr_en_pf;
  wire rd_en;
  wire wr_clk;

  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__1 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_1 [0]),
        .I2(\count_value_i_reg[0]_1 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__1 
       (.I0(\count_value_i_reg[0]_1 [1]),
        .I1(\count_value_i_reg[0]_1 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_1 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [0]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [1]),
        .I5(Q[1]),
        .O(\count_value_i_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[4] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFF5DFF55550455)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2 
       (.I0(Q[0]),
        .I1(ram_wr_en_pf),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ),
        .I3(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(Q[2]),
        .I2(\grdc.rd_data_count_i_reg[4] [2]),
        .I3(\grdc.rd_data_count_i_reg[4] [3]),
        .I4(Q[3]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hD4D444D4DDDDD4DD)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4] [0]),
        .I3(p_14_in),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ),
        .I5(Q[0]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h69699669)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [2]),
        .I2(Q[2]),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [1]),
        .I4(Q[1]),
        .O(\count_value_i_reg[3]_0 [0]));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [3]),
        .I3(Q[3]),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [2]),
        .I5(Q[2]),
        .O(\count_value_i_reg[3]_0 [1]));
  LUT6 #(
    .INIT(64'h0000900090909990)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[1]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [1]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [0]),
        .I3(ram_wr_en_pf),
        .I4(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .I5(Q[0]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_1 [1]),
        .I1(\count_value_i_reg[0]_1 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(\gwdc.wr_data_count_i[2]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(count_value_i[1]),
        .I5(\grdc.rd_data_count_i_reg[4] [1]),
        .O(\count_value_i_reg[4]_0 [0]));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \gwdc.wr_data_count_i[2]_i_2 
       (.I0(Q[1]),
        .I1(count_value_i[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(Q[0]),
        .I4(count_value_i[0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(\gwdc.wr_data_count_i[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h69699669)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] [3]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[4] [2]),
        .I4(Q[2]),
        .O(\count_value_i_reg[4]_0 [1]));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4]_0 ),
        .I2(\grdc.rd_data_count_i_reg[4] [4]),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\grdc.rd_data_count_i_reg[4] [3]),
        .I5(Q[3]),
        .O(\count_value_i_reg[4]_0 [2]));
  LUT6 #(
    .INIT(64'hF999FFF990009990)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(count_value_i[1]),
        .I4(Q[1]),
        .I5(\gwdc.wr_data_count_i[2]_i_2_n_0 ),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized0_45
   (D,
    Q,
    ram_empty_i0,
    leaving_empty0,
    \count_value_i_reg[0]_0 ,
    \count_value_i_reg[2]_0 ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ,
    ram_wr_en_pf,
    read_only,
    ram_empty_i,
    \gen_pntr_flags_cc.ram_empty_i_reg ,
    count_value_i,
    \count_value_i_reg[0]_1 ,
    wr_clk);
  output [1:0]D;
  output [4:0]Q;
  output ram_empty_i0;
  output leaving_empty0;
  output [0:0]\count_value_i_reg[0]_0 ;
  output \count_value_i_reg[2]_0 ;
  input [3:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ;
  input ram_wr_en_pf;
  input read_only;
  input ram_empty_i;
  input [3:0]\gen_pntr_flags_cc.ram_empty_i_reg ;
  input [1:0]count_value_i;
  input [0:0]\count_value_i_reg[0]_1 ;
  input wr_clk;

  wire [1:0]D;
  wire [4:0]Q;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [0:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[0]_1 ;
  wire \count_value_i_reg[2]_0 ;
  wire [3:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pntr_flags_cc.ram_empty_i_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ;
  wire going_empty1;
  wire leaving_empty0;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_wr_en_pf;
  wire read_only;
  wire wr_clk;

  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h8200000000008200)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4 
       (.I0(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [1]),
        .I2(Q[1]),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I4(Q[0]),
        .I5(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .O(leaving_empty0));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [3]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6 
       (.I0(Q[2]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [2]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h0FFF0088)) 
    \gen_pntr_flags_cc.ram_empty_i_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ),
        .I1(going_empty1),
        .I2(leaving_empty0),
        .I3(ram_wr_en_pf),
        .I4(ram_empty_i),
        .O(ram_empty_i0));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'h90)) 
    \gen_pntr_flags_cc.ram_empty_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ram_empty_i_reg [3]),
        .I2(\gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ),
        .O(going_empty1));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ram_empty_i_reg [0]),
        .I2(\gen_pntr_flags_cc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pntr_flags_cc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6966666669666966)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ),
        .I5(ram_wr_en_pf),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(read_only),
        .I2(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .I3(Q[1]),
        .I4(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(count_value_i[1]),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [1]),
        .I4(count_value_i[0]),
        .I5(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .O(\count_value_i_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gwdc.wr_data_count_i[4]_i_3 
       (.I0(Q[2]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [2]),
        .O(\count_value_i_reg[2]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized0_50
   (D,
    Q,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    \count_value_i_reg[3]_0 ,
    \count_value_i_reg[0]_0 ,
    \count_value_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    p_14_in,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ,
    ram_wr_en_pf,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    count_value_i,
    \count_value_i_reg[0]_1 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[4]_1 ,
    wr_clk);
  output [1:0]D;
  output [3:0]Q;
  output \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output [1:0]\count_value_i_reg[3]_0 ;
  output \count_value_i_reg[0]_0 ;
  output [2:0]\count_value_i_reg[4]_0 ;
  input [4:0]\grdc.rd_data_count_i_reg[4] ;
  input p_14_in;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ;
  input ram_wr_en_pf;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ;
  input [3:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_0 ;
  input [1:0]count_value_i;
  input [1:0]\count_value_i_reg[0]_1 ;
  input rd_en;
  input ram_empty_i;
  input [0:0]\count_value_i_reg[4]_1 ;
  input wr_clk;

  wire [1:0]D;
  wire \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [3:0]Q;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[0]_1 ;
  wire [1:0]\count_value_i_reg[3]_0 ;
  wire [2:0]\count_value_i_reg[4]_0 ;
  wire [0:0]\count_value_i_reg[4]_1 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ;
  wire [3:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ;
  wire [4:0]\grdc.rd_data_count_i_reg[4] ;
  wire \grdc.rd_data_count_i_reg[4]_0 ;
  wire \gwdc.wr_data_count_i[2]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire p_14_in;
  wire ram_empty_i;
  wire ram_wr_en_pf;
  wire rd_en;
  wire wr_clk;

  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__1 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_1 [0]),
        .I2(\count_value_i_reg[0]_1 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__1 
       (.I0(\count_value_i_reg[0]_1 [1]),
        .I1(\count_value_i_reg[0]_1 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_1 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [0]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [1]),
        .I5(Q[1]),
        .O(\count_value_i_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[4] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFF5DFF55550455)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2 
       (.I0(Q[0]),
        .I1(ram_wr_en_pf),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ),
        .I3(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(Q[2]),
        .I2(\grdc.rd_data_count_i_reg[4] [2]),
        .I3(\grdc.rd_data_count_i_reg[4] [3]),
        .I4(Q[3]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hD4D444D4DDDDD4DD)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4] [0]),
        .I3(p_14_in),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ),
        .I5(Q[0]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h69699669)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [2]),
        .I2(Q[2]),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [1]),
        .I4(Q[1]),
        .O(\count_value_i_reg[3]_0 [0]));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [3]),
        .I3(Q[3]),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [2]),
        .I5(Q[2]),
        .O(\count_value_i_reg[3]_0 [1]));
  LUT6 #(
    .INIT(64'h0000900090909990)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[1]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [1]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [0]),
        .I3(ram_wr_en_pf),
        .I4(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .I5(Q[0]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_1 [1]),
        .I1(\count_value_i_reg[0]_1 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(\gwdc.wr_data_count_i[2]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(count_value_i[1]),
        .I5(\grdc.rd_data_count_i_reg[4] [1]),
        .O(\count_value_i_reg[4]_0 [0]));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \gwdc.wr_data_count_i[2]_i_2 
       (.I0(Q[1]),
        .I1(count_value_i[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(Q[0]),
        .I4(count_value_i[0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(\gwdc.wr_data_count_i[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h69699669)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] [3]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[4] [2]),
        .I4(Q[2]),
        .O(\count_value_i_reg[4]_0 [1]));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4]_0 ),
        .I2(\grdc.rd_data_count_i_reg[4] [4]),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\grdc.rd_data_count_i_reg[4] [3]),
        .I5(Q[3]),
        .O(\count_value_i_reg[4]_0 [2]));
  LUT6 #(
    .INIT(64'hF999FFF990009990)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(count_value_i[1]),
        .I4(Q[1]),
        .I5(\gwdc.wr_data_count_i[2]_i_2_n_0 ),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized0_53
   (D,
    Q,
    ram_empty_i0,
    leaving_empty0,
    \count_value_i_reg[0]_0 ,
    \count_value_i_reg[2]_0 ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ,
    ram_wr_en_pf,
    read_only,
    ram_empty_i,
    \gen_pntr_flags_cc.ram_empty_i_reg ,
    count_value_i,
    \count_value_i_reg[0]_1 ,
    wr_clk);
  output [1:0]D;
  output [4:0]Q;
  output ram_empty_i0;
  output leaving_empty0;
  output [0:0]\count_value_i_reg[0]_0 ;
  output \count_value_i_reg[2]_0 ;
  input [3:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ;
  input ram_wr_en_pf;
  input read_only;
  input ram_empty_i;
  input [3:0]\gen_pntr_flags_cc.ram_empty_i_reg ;
  input [1:0]count_value_i;
  input [0:0]\count_value_i_reg[0]_1 ;
  input wr_clk;

  wire [1:0]D;
  wire [4:0]Q;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [0:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[0]_1 ;
  wire \count_value_i_reg[2]_0 ;
  wire [3:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pntr_flags_cc.ram_empty_i_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ;
  wire going_empty1;
  wire leaving_empty0;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_wr_en_pf;
  wire read_only;
  wire wr_clk;

  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h8200000000008200)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4 
       (.I0(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [1]),
        .I2(Q[1]),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I4(Q[0]),
        .I5(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .O(leaving_empty0));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [3]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6 
       (.I0(Q[2]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [2]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h0FFF0088)) 
    \gen_pntr_flags_cc.ram_empty_i_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ),
        .I1(going_empty1),
        .I2(leaving_empty0),
        .I3(ram_wr_en_pf),
        .I4(ram_empty_i),
        .O(ram_empty_i0));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'h90)) 
    \gen_pntr_flags_cc.ram_empty_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ram_empty_i_reg [3]),
        .I2(\gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ),
        .O(going_empty1));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ram_empty_i_reg [0]),
        .I2(\gen_pntr_flags_cc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pntr_flags_cc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6966666669666966)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ),
        .I5(ram_wr_en_pf),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(read_only),
        .I2(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .I3(Q[1]),
        .I4(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(count_value_i[1]),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [1]),
        .I4(count_value_i[0]),
        .I5(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .O(\count_value_i_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gwdc.wr_data_count_i[4]_i_3 
       (.I0(Q[2]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [2]),
        .O(\count_value_i_reg[2]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized1
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[1]_1 ,
    \count_value_i_reg[0]_0 ,
    wr_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input [0:0]\count_value_i_reg[1]_1 ;
  input \count_value_i_reg[0]_0 ;
  input wr_clk;

  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire [0:0]\count_value_i_reg[1]_1 ;
  wire rd_en;
  wire wr_clk;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[1]_1 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized1_40
   (D,
    Q,
    \count_value_i_reg[1]_0 ,
    \count_value_i_reg[3]_0 ,
    ram_wr_en_pf,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ,
    \count_value_i_reg[1]_1 ,
    wr_clk);
  output [1:0]D;
  output [3:0]Q;
  output \count_value_i_reg[1]_0 ;
  output \count_value_i_reg[3]_0 ;
  input ram_wr_en_pf;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ;
  input [2:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  input [0:0]\count_value_i_reg[1]_1 ;
  input wr_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [0:0]\count_value_i_reg[1]_1 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ;
  wire ram_wr_en_pf;
  wire wr_clk;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[1]_1 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT4 #(
    .INIT(16'h9969)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[1]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [0]),
        .I2(ram_wr_en_pf),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF75108AE08AEF751)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[2]_i_1 
       (.I0(Q[0]),
        .I1(ram_wr_en_pf),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [0]),
        .I4(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(D[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_3 
       (.I0(Q[1]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [1]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized1_43
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[1]_1 ,
    \count_value_i_reg[0]_0 ,
    wr_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input [0:0]\count_value_i_reg[1]_1 ;
  input \count_value_i_reg[0]_0 ;
  input wr_clk;

  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire [0:0]\count_value_i_reg[1]_1 ;
  wire rd_en;
  wire wr_clk;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[1]_1 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized1_46
   (D,
    Q,
    \count_value_i_reg[1]_0 ,
    \count_value_i_reg[3]_0 ,
    ram_wr_en_pf,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ,
    \count_value_i_reg[1]_1 ,
    wr_clk);
  output [1:0]D;
  output [3:0]Q;
  output \count_value_i_reg[1]_0 ;
  output \count_value_i_reg[3]_0 ;
  input ram_wr_en_pf;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ;
  input [2:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  input [0:0]\count_value_i_reg[1]_1 ;
  input wr_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [0:0]\count_value_i_reg[1]_1 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ;
  wire ram_wr_en_pf;
  wire wr_clk;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[1]_1 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'h9969)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[1]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [0]),
        .I2(ram_wr_en_pf),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF75108AE08AEF751)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[2]_i_1 
       (.I0(Q[0]),
        .I1(ram_wr_en_pf),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [0]),
        .I4(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(D[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_3 
       (.I0(Q[1]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [1]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized1_51
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[1]_1 ,
    \count_value_i_reg[0]_0 ,
    wr_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input [0:0]\count_value_i_reg[1]_1 ;
  input \count_value_i_reg[0]_0 ;
  input wr_clk;

  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire [0:0]\count_value_i_reg[1]_1 ;
  wire rd_en;
  wire wr_clk;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[1]_1 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized1_54
   (D,
    Q,
    \count_value_i_reg[1]_0 ,
    \count_value_i_reg[3]_0 ,
    ram_wr_en_pf,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ,
    \count_value_i_reg[1]_1 ,
    wr_clk);
  output [1:0]D;
  output [3:0]Q;
  output \count_value_i_reg[1]_0 ;
  output \count_value_i_reg[3]_0 ;
  input ram_wr_en_pf;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ;
  input [2:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  input [0:0]\count_value_i_reg[1]_1 ;
  input wr_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [0:0]\count_value_i_reg[1]_1 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ;
  wire ram_wr_en_pf;
  wire wr_clk;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[1]_1 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'h9969)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[1]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [0]),
        .I2(ram_wr_en_pf),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF75108AE08AEF751)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[2]_i_1 
       (.I0(Q[0]),
        .I1(ram_wr_en_pf),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [0]),
        .I4(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(D[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_3 
       (.I0(Q[1]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [1]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized3
   (Q,
    E,
    \count_value_i_reg[3]_0 ,
    \count_value_i_reg[4]_0 ,
    \count_value_i_reg[4]_1 ,
    \count_value_i_reg[5]_0 ,
    rd_en,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \count_value_i_reg[5]_1 ,
    rd_clk);
  output [5:0]Q;
  output [0:0]E;
  output \count_value_i_reg[3]_0 ;
  output \count_value_i_reg[4]_0 ;
  input \count_value_i_reg[4]_1 ;
  input \count_value_i_reg[5]_0 ;
  input rd_en;
  input [1:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input \count_value_i_reg[5]_1 ;
  input rd_clk;

  wire [0:0]E;
  wire [5:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_2__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg[4]_1 ;
  wire \count_value_i_reg[5]_0 ;
  wire \count_value_i_reg[5]_1 ;
  wire [1:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire rd_clk;
  wire rd_en;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[4]_1 ),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \count_value_i[4]_i_1__3 
       (.I0(rd_en),
        .I1(\count_value_i_reg[5]_0 ),
        .O(E));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(\count_value_i[5]_i_2__0_n_0 ),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \count_value_i[5]_i_2__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(rd_en),
        .O(\count_value_i[5]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[5]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[5]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[5]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[5]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[5]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[5]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_3 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h9009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(Q[4]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[3]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized3_59
   (Q,
    O,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[5] ,
    E,
    wr_clk);
  output [5:0]Q;
  output [0:0]O;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [5:0]\gwdc.wr_data_count_i_reg[5] ;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]O;
  wire [5:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[5]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[5]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[5]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[5]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[5]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[5]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[5]_i_8_n_0 ;
  wire [5:0]\gwdc.wr_data_count_i_reg[5] ;
  wire \gwdc.wr_data_count_i_reg[5]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[5]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[5]_i_2_n_1 ;
  wire \gwdc.wr_data_count_i_reg[5]_i_2_n_2 ;
  wire \gwdc.wr_data_count_i_reg[5]_i_2_n_3 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;
  wire [3:1]\NLW_gwdc.wr_data_count_i_reg[5]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_gwdc.wr_data_count_i_reg[5]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_gwdc.wr_data_count_i_reg[5]_i_2_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(\count_value_i[5]_i_2_n_0 ),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[5]_i_2 
       (.I0(Q[0]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[1]),
        .O(\count_value_i[5]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_3 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[5] [5]),
        .O(\gwdc.wr_data_count_i[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_4 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[5] [4]),
        .O(\gwdc.wr_data_count_i[5]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_5 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[5] [3]),
        .O(\gwdc.wr_data_count_i[5]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_6 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[5] [2]),
        .O(\gwdc.wr_data_count_i[5]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_7 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[5] [1]),
        .O(\gwdc.wr_data_count_i[5]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_8 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[5] [0]),
        .O(\gwdc.wr_data_count_i[5]_i_8_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \gwdc.wr_data_count_i_reg[5]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[5]_i_2_n_0 ),
        .CO({\NLW_gwdc.wr_data_count_i_reg[5]_i_1_CO_UNCONNECTED [3:1],\gwdc.wr_data_count_i_reg[5]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,Q[4]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[5]_i_1_O_UNCONNECTED [3:2],O,\NLW_gwdc.wr_data_count_i_reg[5]_i_1_O_UNCONNECTED [0]}),
        .S({1'b0,1'b0,\gwdc.wr_data_count_i[5]_i_3_n_0 ,\gwdc.wr_data_count_i[5]_i_4_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \gwdc.wr_data_count_i_reg[5]_i_2 
       (.CI(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[5]_i_2_n_0 ,\gwdc.wr_data_count_i_reg[5]_i_2_n_1 ,\gwdc.wr_data_count_i_reg[5]_i_2_n_2 ,\gwdc.wr_data_count_i_reg[5]_i_2_n_3 }),
        .CYINIT(1'b1),
        .DI(Q[3:0]),
        .O(\NLW_gwdc.wr_data_count_i_reg[5]_i_2_O_UNCONNECTED [3:0]),
        .S({\gwdc.wr_data_count_i[5]_i_5_n_0 ,\gwdc.wr_data_count_i[5]_i_6_n_0 ,\gwdc.wr_data_count_i[5]_i_7_n_0 ,\gwdc.wr_data_count_i[5]_i_8_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized4
   (\gen_pf_ic_rc.ram_empty_i_reg ,
    empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    Q,
    rd_en,
    \gen_pf_ic_rc.ram_empty_i_reg_2 ,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output \gen_pf_ic_rc.ram_empty_i_reg ;
  output empty_i0;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input [4:0]Q;
  input rd_en;
  input \gen_pf_ic_rc.ram_empty_i_reg_2 ;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire empty_i0;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_2 ;
  wire rd_clk;
  wire rd_en;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hDFFFFFFF20000000)) 
    \count_value_i[4]_i_2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \count_value_i[4]_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_2 ),
        .I1(rd_en),
        .O(\gen_pf_ic_rc.ram_empty_i_reg ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hF8888888)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 ),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .O(empty_i0));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h0090)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(Q[4]),
        .I2(rd_en),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_2 ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'h9009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(Q[0]),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(Q[2]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(Q[3]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized4_60
   (\count_value_i_reg[2]_0 ,
    Q,
    D,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] ,
    E,
    wrst_busy,
    wr_clk);
  output \count_value_i_reg[2]_0 ;
  output [1:0]Q;
  output [4:0]D;
  input [4:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] ;
  input [0:0]E;
  input wrst_busy;
  input wr_clk;

  wire [4:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i_reg[2]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_3 ;
  wire [4:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] ;
  wire wr_clk;
  wire [3:1]wr_pntr_plus1_pf;
  wire wrst_busy;
  wire [3:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(wr_pntr_plus1_pf[1]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(wr_pntr_plus1_pf[1]),
        .I1(wr_pntr_plus1_pf[2]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(wr_pntr_plus1_pf[2]),
        .I1(wr_pntr_plus1_pf[1]),
        .I2(wr_pntr_plus1_pf[3]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(wr_pntr_plus1_pf[1]),
        .I1(wr_pntr_plus1_pf[2]),
        .I2(wr_pntr_plus1_pf[3]),
        .I3(Q[0]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(wr_pntr_plus1_pf[1]),
        .I1(Q[0]),
        .I2(wr_pntr_plus1_pf[3]),
        .I3(wr_pntr_plus1_pf[2]),
        .I4(Q[1]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_3 
       (.I0(wr_pntr_plus1_pf[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_4 
       (.I0(wr_pntr_plus1_pf[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_5 
       (.I0(wr_pntr_plus1_pf[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_2 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1 
       (.CI(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_3 }),
        .CYINIT(E),
        .DI({Q[0],wr_pntr_plus1_pf}),
        .O(D[3:0]),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_O_UNCONNECTED [3:1],D[4]}),
        .S({1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_2_n_0 }));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_3 
       (.I0(wr_pntr_plus1_pf[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [2]),
        .I2(wr_pntr_plus1_pf[2]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [1]),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [0]),
        .I5(wr_pntr_plus1_pf[1]),
        .O(\count_value_i_reg[2]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized5
   (\count_value_i_reg[2]_0 ,
    \count_value_i_reg[4]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[2]_0 ;
  output [1:0]\count_value_i_reg[4]_0 ;
  input [2:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i_reg[2]_0 ;
  wire [1:0]\count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire wr_clk;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg[4]_0 [0]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg[4]_0 [0]),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[1] ),
        .I4(\count_value_i_reg[4]_0 [1]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg[4]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(\count_value_i_reg[4]_0 [1]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_4 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(Q[2]),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i_reg[2]_0 ));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "6" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "32" *) (* FULL_RESET_VALUE = "0" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "3" *) (* PROG_FULL_THRESH = "9" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "0" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "1" *) 
(* READ_DATA_WIDTH = "34" *) (* READ_MODE = "std" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "34" *) (* WR_DATA_COUNT_WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_async
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [33:0]din;
  output full;
  output prog_full;
  output [0:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [33:0]dout;
  output empty;
  output prog_empty;
  output [0:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [33:0]din;
  wire [33:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [0:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [0:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "6" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "32" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "1088" *) 
  (* FIFO_WRITE_DEPTH = "32" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* FULL_RST_VAL = "1'b0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "3" *) 
  (* PE_THRESH_MAX = "29" *) 
  (* PE_THRESH_MIN = "3" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "29" *) 
  (* PF_THRESH_MIN = "9" *) 
  (* PROG_EMPTY_THRESH = "3" *) 
  (* PROG_FULL_THRESH = "9" *) 
  (* RD_DATA_COUNT_WIDTH = "1" *) 
  (* RD_DC_WIDTH_EXT = "6" *) 
  (* RD_LATENCY = "0" *) 
  (* RD_MODE = "0" *) 
  (* RD_PNTR_WIDTH = "5" *) 
  (* READ_DATA_WIDTH = "34" *) 
  (* READ_MODE = "0" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "34" *) 
  (* WR_DATA_COUNT_WIDTH = "1" *) 
  (* WR_DC_WIDTH_EXT = "6" *) 
  (* WR_DEPTH_LOG = "5" *) 
  (* WR_PNTR_WIDTH = "5" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_base__parameterized1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "2" *) (* COMMON_CLOCK = "1" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "512" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "0" *) (* FULL_RST_VAL = "1'b0" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "5" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "5" *) 
(* PROG_EMPTY_THRESH = "7" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "32" *) (* READ_MODE = "1" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "32" *) (* WR_DATA_COUNT_WIDTH = "4" *) 
(* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) (* WR_PNTR_WIDTH = "4" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "5" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_base
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [31:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [31:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire leaving_empty0;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_14_in;
  wire prog_empty;
  wire prog_empty_i1;
  wire prog_full;
  wire prog_full_i215_in;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_full_i0;
  wire ram_rd_en_pf_q;
  wire ram_wr_en_pf;
  wire ram_wr_en_pf_q;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire rdp_inst_n_6;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire read_only;
  wire read_only_q;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_3;
  wire sleep;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [3:0]wr_pntr_ext;
  wire wr_rst_busy;
  wire write_only;
  wire write_only_q;
  wire wrp_inst_n_10;
  wire wrp_inst_n_2;
  wire wrpp1_inst_n_2;
  wire wrpp1_inst_n_3;
  wire wrpp1_inst_n_4;
  wire wrpp1_inst_n_5;
  wire wrpp1_inst_n_6;
  wire wrpp1_inst_n_7;
  wire xpm_fifo_rst_inst_n_0;
  wire xpm_fifo_rst_inst_n_2;
  wire xpm_fifo_rst_inst_n_7;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [31:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(xpm_fifo_rst_inst_n_2));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(xpm_fifo_rst_inst_n_2));
  GND GND
       (.G(\<const0> ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(xpm_fifo_rst_inst_n_2));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn_41 \gen_fwft.rdpp1_inst 
       (.Q(curr_fwft_state),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (xpm_fifo_rst_inst_n_2),
        .ram_empty_i(ram_empty_i),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i0),
        .Q(full),
        .R(xpm_fifo_rst_inst_n_2));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pntr_flags_cc.ram_empty_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(xpm_fifo_rst_inst_n_2));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h00005455)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_3 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .I4(empty),
        .O(p_14_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ),
        .R(xpm_fifo_rst_inst_n_2));
  LUT4 #(
    .INIT(16'h1000)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_2 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ),
        .O(prog_empty_i1));
  FDRE #(
    .INIT(1'b1)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(xpm_fifo_rst_inst_n_7),
        .Q(prog_empty),
        .R(1'b0));
  FDRE \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(read_only),
        .Q(read_only_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(write_only),
        .Q(write_only_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(xpm_fifo_rst_inst_n_2));
  LUT4 #(
    .INIT(16'h1000)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[4]),
        .I3(diff_pntr_pf_q[1]),
        .O(prog_full_i215_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(xpm_fifo_rst_inst_n_0),
        .Q(prog_full),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.ram_rd_en_pf_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rdp_inst_n_6),
        .Q(ram_rd_en_pf_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.ram_wr_en_pf_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_wr_en_pf),
        .Q(ram_wr_en_pf_q),
        .R(xpm_fifo_rst_inst_n_2));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "32" *) 
  (* BYTE_WRITE_WIDTH_B = "32" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "512" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "32" *) 
  (* P_MIN_WIDTH_DATA_A = "32" *) 
  (* P_MIN_WIDTH_DATA_B = "32" *) 
  (* P_MIN_WIDTH_DATA_ECC = "32" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "32" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "32" *) 
  (* P_WIDTH_COL_WRITE_B = "32" *) 
  (* READ_DATA_WIDTH_A = "32" *) 
  (* READ_DATA_WIDTH_B = "32" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "32" *) 
  (* WRITE_DATA_WIDTH_B = "32" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "32" *) 
  (* rstb_loop_iter = "32" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_memory_base \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(1'b0),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [31:0]),
        .doutb(dout),
        .ena(ram_wr_en_pf),
        .enb(rdp_inst_n_6),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(xpm_fifo_rst_inst_n_2),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(wr_data_count[0]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(wr_data_count[1]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(wr_data_count[2]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(wr_data_count[3]),
        .R(xpm_fifo_rst_inst_n_2));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized0_42 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (rdp_inst_n_6),
        .Q(rd_pntr_ext),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (rdp_inst_n_9),
        .\count_value_i_reg[0]_1 (curr_fwft_state),
        .\count_value_i_reg[3]_0 (diff_pntr_pf_q0[4:3]),
        .\count_value_i_reg[4]_0 (\grdc.diff_wr_rd_pntr_rdc [4:2]),
        .\count_value_i_reg[4]_1 (xpm_fifo_rst_inst_n_2),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] (full),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] (rst_d1_inst_n_3),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] (wrpp1_inst_n_6),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ({wrpp1_inst_n_2,wrpp1_inst_n_3,wrpp1_inst_n_4,wrpp1_inst_n_5}),
        .\grdc.rd_data_count_i_reg[4] ({wrp_inst_n_2,wr_pntr_ext}),
        .\grdc.rd_data_count_i_reg[4]_0 (wrp_inst_n_10),
        .p_14_in(p_14_in),
        .ram_empty_i(ram_empty_i),
        .ram_wr_en_pf(ram_wr_en_pf),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized1_43 rdpp1_inst
       (.Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rdp_inst_n_6),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_1 (xpm_fifo_rst_inst_n_2),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_bit_44 rst_d1_inst
       (.Q(xpm_fifo_rst_inst_n_2),
        .d_out_reg_0(rst_d1_inst_n_3),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 (rdp_inst_n_6),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .write_only(write_only));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized0_45 wrp_inst
       (.D(diff_pntr_pe[1:0]),
        .Q({wrp_inst_n_2,wr_pntr_ext}),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (\grdc.diff_wr_rd_pntr_rdc [1]),
        .\count_value_i_reg[0]_1 (xpm_fifo_rst_inst_n_2),
        .\count_value_i_reg[2]_0 (wrp_inst_n_10),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 (rd_pntr_ext),
        .\gen_pntr_flags_cc.ram_empty_i_reg ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 (rdp_inst_n_6),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 (full),
        .leaving_empty0(leaving_empty0),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .ram_wr_en_pf(ram_wr_en_pf),
        .read_only(read_only),
        .wr_clk(wr_clk));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized1_46 wrpp1_inst
       (.D(diff_pntr_pf_q0[2:1]),
        .Q({wrpp1_inst_n_2,wrpp1_inst_n_3,wrpp1_inst_n_4,wrpp1_inst_n_5}),
        .\count_value_i_reg[1]_0 (wrpp1_inst_n_6),
        .\count_value_i_reg[1]_1 (xpm_fifo_rst_inst_n_2),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_7),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] (rdp_inst_n_6),
        .ram_wr_en_pf(ram_wr_en_pf),
        .wr_clk(wr_clk));
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_rst_47 xpm_fifo_rst_inst
       (.Q(xpm_fifo_rst_inst_n_2),
        .SR(\grdc.rd_data_count_i0 ),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg (wrpp1_inst_n_7),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 (rdp_inst_n_9),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 (rdp_inst_n_6),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 (full),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg (xpm_fifo_rst_inst_n_7),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg (xpm_fifo_rst_inst_n_0),
        .\grdc.rd_data_count_i_reg[1] (curr_fwft_state),
        .leaving_empty0(leaving_empty0),
        .prog_empty(prog_empty),
        .prog_empty_i1(prog_empty_i1),
        .prog_full(prog_full),
        .prog_full_i215_in(prog_full_i215_in),
        .ram_full_i0(ram_full_i0),
        .ram_rd_en_pf_q(ram_rd_en_pf_q),
        .ram_wr_en_pf(ram_wr_en_pf),
        .ram_wr_en_pf_q(ram_wr_en_pf_q),
        .rd_en(rd_en),
        .read_only(read_only),
        .read_only_q(read_only_q),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .write_only_q(write_only_q));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "2" *) (* COMMON_CLOCK = "1" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "560" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "0" *) (* FULL_RST_VAL = "1'b0" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "5" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "5" *) 
(* PROG_EMPTY_THRESH = "7" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "35" *) (* READ_MODE = "1" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "35" *) (* WR_DATA_COUNT_WIDTH = "4" *) 
(* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) (* WR_PNTR_WIDTH = "4" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_base__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [34:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [34:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [34:0]din;
  wire [34:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire leaving_empty0;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_14_in;
  wire prog_empty;
  wire prog_empty_i1;
  wire prog_full;
  wire prog_full_i215_in;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_full_i0;
  wire ram_rd_en_pf_q;
  wire ram_wr_en_pf;
  wire ram_wr_en_pf_q;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire rdp_inst_n_6;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire read_only;
  wire read_only_q;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_3;
  wire sleep;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [3:0]wr_pntr_ext;
  wire wr_rst_busy;
  wire write_only;
  wire write_only_q;
  wire wrp_inst_n_10;
  wire wrp_inst_n_2;
  wire wrpp1_inst_n_2;
  wire wrpp1_inst_n_3;
  wire wrpp1_inst_n_4;
  wire wrpp1_inst_n_5;
  wire wrpp1_inst_n_6;
  wire wrpp1_inst_n_7;
  wire xpm_fifo_rst_inst_n_0;
  wire xpm_fifo_rst_inst_n_2;
  wire xpm_fifo_rst_inst_n_7;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [34:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(xpm_fifo_rst_inst_n_2));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(xpm_fifo_rst_inst_n_2));
  GND GND
       (.G(\<const0> ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(xpm_fifo_rst_inst_n_2));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn \gen_fwft.rdpp1_inst 
       (.Q(curr_fwft_state),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (xpm_fifo_rst_inst_n_2),
        .ram_empty_i(ram_empty_i),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i0),
        .Q(full),
        .R(xpm_fifo_rst_inst_n_2));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pntr_flags_cc.ram_empty_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(xpm_fifo_rst_inst_n_2));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT5 #(
    .INIT(32'h00005455)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_3 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .I4(empty),
        .O(p_14_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ),
        .R(xpm_fifo_rst_inst_n_2));
  LUT4 #(
    .INIT(16'h1000)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_2 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ),
        .O(prog_empty_i1));
  FDRE #(
    .INIT(1'b1)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(xpm_fifo_rst_inst_n_7),
        .Q(prog_empty),
        .R(1'b0));
  FDRE \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(read_only),
        .Q(read_only_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(write_only),
        .Q(write_only_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(xpm_fifo_rst_inst_n_2));
  LUT4 #(
    .INIT(16'h1000)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[4]),
        .I3(diff_pntr_pf_q[1]),
        .O(prog_full_i215_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(xpm_fifo_rst_inst_n_0),
        .Q(prog_full),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.ram_rd_en_pf_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rdp_inst_n_6),
        .Q(ram_rd_en_pf_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.ram_wr_en_pf_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_wr_en_pf),
        .Q(ram_wr_en_pf_q),
        .R(xpm_fifo_rst_inst_n_2));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "35" *) 
  (* BYTE_WRITE_WIDTH_B = "35" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "560" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "35" *) 
  (* P_MIN_WIDTH_DATA_A = "35" *) 
  (* P_MIN_WIDTH_DATA_B = "35" *) 
  (* P_MIN_WIDTH_DATA_ECC = "35" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "35" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "35" *) 
  (* P_WIDTH_COL_WRITE_B = "35" *) 
  (* READ_DATA_WIDTH_A = "35" *) 
  (* READ_DATA_WIDTH_B = "35" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "35" *) 
  (* WRITE_DATA_WIDTH_B = "35" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "36" *) 
  (* rstb_loop_iter = "36" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_memory_base__parameterized0 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(1'b0),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [34:0]),
        .doutb(dout),
        .ena(ram_wr_en_pf),
        .enb(rdp_inst_n_6),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(xpm_fifo_rst_inst_n_2),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(wr_data_count[0]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(wr_data_count[1]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(wr_data_count[2]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(wr_data_count[3]),
        .R(xpm_fifo_rst_inst_n_2));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized0 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (rdp_inst_n_6),
        .Q(rd_pntr_ext),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (rdp_inst_n_9),
        .\count_value_i_reg[0]_1 (curr_fwft_state),
        .\count_value_i_reg[3]_0 (diff_pntr_pf_q0[4:3]),
        .\count_value_i_reg[4]_0 (\grdc.diff_wr_rd_pntr_rdc [4:2]),
        .\count_value_i_reg[4]_1 (xpm_fifo_rst_inst_n_2),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] (full),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] (rst_d1_inst_n_3),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] (wrpp1_inst_n_6),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ({wrpp1_inst_n_2,wrpp1_inst_n_3,wrpp1_inst_n_4,wrpp1_inst_n_5}),
        .\grdc.rd_data_count_i_reg[4] ({wrp_inst_n_2,wr_pntr_ext}),
        .\grdc.rd_data_count_i_reg[4]_0 (wrp_inst_n_10),
        .p_14_in(p_14_in),
        .ram_empty_i(ram_empty_i),
        .ram_wr_en_pf(ram_wr_en_pf),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized1 rdpp1_inst
       (.Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rdp_inst_n_6),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_1 (xpm_fifo_rst_inst_n_2),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_bit rst_d1_inst
       (.Q(xpm_fifo_rst_inst_n_2),
        .d_out_reg_0(rst_d1_inst_n_3),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 (rdp_inst_n_6),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .write_only(write_only));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized0_39 wrp_inst
       (.D(diff_pntr_pe[1:0]),
        .Q({wrp_inst_n_2,wr_pntr_ext}),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (\grdc.diff_wr_rd_pntr_rdc [1]),
        .\count_value_i_reg[0]_1 (xpm_fifo_rst_inst_n_2),
        .\count_value_i_reg[2]_0 (wrp_inst_n_10),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 (rd_pntr_ext),
        .\gen_pntr_flags_cc.ram_empty_i_reg ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 (rdp_inst_n_6),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 (full),
        .leaving_empty0(leaving_empty0),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .ram_wr_en_pf(ram_wr_en_pf),
        .read_only(read_only),
        .wr_clk(wr_clk));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized1_40 wrpp1_inst
       (.D(diff_pntr_pf_q0[2:1]),
        .Q({wrpp1_inst_n_2,wrpp1_inst_n_3,wrpp1_inst_n_4,wrpp1_inst_n_5}),
        .\count_value_i_reg[1]_0 (wrpp1_inst_n_6),
        .\count_value_i_reg[1]_1 (xpm_fifo_rst_inst_n_2),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_7),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] (rdp_inst_n_6),
        .ram_wr_en_pf(ram_wr_en_pf),
        .wr_clk(wr_clk));
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_rst xpm_fifo_rst_inst
       (.Q(xpm_fifo_rst_inst_n_2),
        .SR(\grdc.rd_data_count_i0 ),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg (wrpp1_inst_n_7),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 (rdp_inst_n_9),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 (rdp_inst_n_6),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 (full),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg (xpm_fifo_rst_inst_n_7),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg (xpm_fifo_rst_inst_n_0),
        .\grdc.rd_data_count_i_reg[1] (curr_fwft_state),
        .leaving_empty0(leaving_empty0),
        .prog_empty(prog_empty),
        .prog_empty_i1(prog_empty_i1),
        .prog_full(prog_full),
        .prog_full_i215_in(prog_full_i215_in),
        .ram_full_i0(ram_full_i0),
        .ram_rd_en_pf_q(ram_rd_en_pf_q),
        .ram_wr_en_pf(ram_wr_en_pf),
        .ram_wr_en_pf_q(ram_wr_en_pf_q),
        .rd_en(rd_en),
        .read_only(read_only),
        .read_only_q(read_only_q),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .write_only_q(write_only_q));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "6" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "32" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "1088" *) (* FIFO_WRITE_DEPTH = "32" *) 
(* FULL_RESET_VALUE = "0" *) (* FULL_RST_VAL = "1'b0" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "3" *) (* PE_THRESH_MAX = "29" *) (* PE_THRESH_MIN = "3" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "29" *) (* PF_THRESH_MIN = "9" *) 
(* PROG_EMPTY_THRESH = "3" *) (* PROG_FULL_THRESH = "9" *) (* RD_DATA_COUNT_WIDTH = "1" *) 
(* RD_DC_WIDTH_EXT = "6" *) (* RD_LATENCY = "0" *) (* RD_MODE = "0" *) 
(* RD_PNTR_WIDTH = "5" *) (* READ_DATA_WIDTH = "34" *) (* READ_MODE = "0" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "34" *) (* WR_DATA_COUNT_WIDTH = "1" *) 
(* WR_DC_WIDTH_EXT = "6" *) (* WR_DEPTH_LOG = "5" *) (* WR_PNTR_WIDTH = "5" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_base__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [33:0]din;
  output full;
  output full_n;
  output prog_full;
  output [0:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [33:0]dout;
  output empty;
  output prog_empty;
  output [0:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [4:2]diff_pntr_pe;
  wire [5:1]diff_pntr_pf_q;
  wire [5:1]diff_pntr_pf_q0;
  wire [33:0]din;
  wire [33:0]dout;
  wire empty;
  wire empty_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire [5:5]\grdc.diff_wr_rd_pntr_rdc0_out ;
  wire [5:5]\gwdc.diff_wr_rd_pntr1_out ;
  wire overflow;
  wire overflow_i0;
  wire p_1_in;
  wire prog_empty;
  wire prog_full;
  wire ram_full_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [0:0]rd_data_count;
  wire rd_en;
  wire [5:0]rd_pntr_ext;
  wire [4:0]rd_pntr_wr;
  wire [4:0]rd_pntr_wr_cdc;
  wire [5:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_7;
  wire rdp_inst_n_8;
  wire rdpp1_inst_n_0;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [0:0]wr_data_count;
  wire wr_en;
  wire [5:0]wr_pntr_ext;
  wire [5:4]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [4:0]wr_pntr_rd_cdc;
  wire [5:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_0;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [33:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "6" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "6" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_cdc_gray__parameterized0 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  (* DEST_SYNC_FF = "6" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_cdc_gray \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext[4:0]));
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_vec \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr),
        .\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg (wrpp1_inst_n_0),
        .\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 ({wrpp2_inst_n_1,wrpp2_inst_n_2}),
        .\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 (wr_pntr_plus1_pf),
        .ram_full_i0(ram_full_i0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_vec__parameterized0 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_vec_56 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 }),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] (empty),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] (rd_pntr_ext[3:0]),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4]_0 (rdp_inst_n_8),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[2]_0 (\gen_cdc_pntr.wpr_gray_reg_n_8 ),
        .\reg_out_i_reg[4]_0 (wr_pntr_rd_cdc));
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_vec__parameterized0_57 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .O(\grdc.diff_wr_rd_pntr_rdc0_out ),
        .Q(rd_pntr_ext),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "6" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "6" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_cdc_gray__parameterized0__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "6" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_cdc_gray__2 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[4:0]));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  LUT5 #(
    .INIT(32'h8888888B)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  LUT5 #(
    .INIT(32'hFFFEAAAA)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[5]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[1]),
        .I3(diff_pntr_pf_q[3]),
        .I4(diff_pntr_pf_q[4]),
        .O(p_1_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i0),
        .Q(full),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_i0),
        .Q(empty),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "5" *) 
  (* ADDR_WIDTH_B = "5" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "34" *) 
  (* BYTE_WRITE_WIDTH_B = "34" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "1088" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "32" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "34" *) 
  (* P_MIN_WIDTH_DATA_A = "34" *) 
  (* P_MIN_WIDTH_DATA_B = "34" *) 
  (* P_MIN_WIDTH_DATA_ECC = "34" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "34" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "5" *) 
  (* P_WIDTH_ADDR_READ_B = "5" *) 
  (* P_WIDTH_ADDR_WRITE_A = "5" *) 
  (* P_WIDTH_ADDR_WRITE_B = "5" *) 
  (* P_WIDTH_COL_WRITE_A = "34" *) 
  (* P_WIDTH_COL_WRITE_B = "34" *) 
  (* READ_DATA_WIDTH_A = "34" *) 
  (* READ_DATA_WIDTH_B = "34" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "0" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "34" *) 
  (* WRITE_DATA_WIDTH_B = "34" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "36" *) 
  (* rstb_loop_iter = "36" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_memory_base__parameterized1 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[4:0]),
        .addrb(rd_pntr_ext[4:0]),
        .clka(wr_clk),
        .clkb(1'b0),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [33:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(1'b0),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rstb(1'b0),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc0_out ),
        .Q(rd_data_count),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_data_count),
        .R(wrst_busy));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized3 rdp_inst
       (.E(ram_rd_en_i),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[3]_0 (rdp_inst_n_7),
        .\count_value_i_reg[4]_0 (rdp_inst_n_8),
        .\count_value_i_reg[4]_1 (rdpp1_inst_n_0),
        .\count_value_i_reg[5]_0 (empty),
        .\count_value_i_reg[5]_1 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 }),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized4 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 }),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .empty_i0(empty_i0),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdpp1_inst_n_0),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_7),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 (\gen_cdc_pntr.wpr_gray_reg_n_8 ),
        .\gen_pf_ic_rc.ram_empty_i_reg_2 (empty),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_bit_58 rst_d1_inst
       (.d_out_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .p_1_in(p_1_in),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized3_59 wrp_inst
       (.E(wr_pntr_plus1_pf_carry),
        .O(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[5] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized4_60 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[2]_0 (wrpp1_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] (rd_pntr_wr),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized5 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[2:0]),
        .\count_value_i_reg[2]_0 (wrpp2_inst_n_0),
        .\count_value_i_reg[4]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_rst__parameterized0 xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gof.overflow_i_reg (full),
        .\guf.underflow_i_reg (empty),
        .overflow_i0(overflow_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "2" *) (* COMMON_CLOCK = "1" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "48" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "0" *) (* FULL_RST_VAL = "1'b0" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "5" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "5" *) 
(* PROG_EMPTY_THRESH = "7" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "3" *) (* READ_MODE = "1" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "3" *) (* WR_DATA_COUNT_WIDTH = "4" *) 
(* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) (* WR_PNTR_WIDTH = "4" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "2" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_base__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [2:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [2:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire leaving_empty0;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_14_in;
  wire prog_empty;
  wire prog_empty_i1;
  wire prog_full;
  wire prog_full_i215_in;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_full_i0;
  wire ram_rd_en_pf_q;
  wire ram_wr_en_pf;
  wire ram_wr_en_pf_q;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire rdp_inst_n_6;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire read_only;
  wire read_only_q;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_3;
  wire sleep;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [3:0]wr_pntr_ext;
  wire wr_rst_busy;
  wire write_only;
  wire write_only_q;
  wire wrp_inst_n_10;
  wire wrp_inst_n_2;
  wire wrpp1_inst_n_2;
  wire wrpp1_inst_n_3;
  wire wrpp1_inst_n_4;
  wire wrpp1_inst_n_5;
  wire wrpp1_inst_n_6;
  wire wrpp1_inst_n_7;
  wire xpm_fifo_rst_inst_n_0;
  wire xpm_fifo_rst_inst_n_2;
  wire xpm_fifo_rst_inst_n_7;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [2:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(xpm_fifo_rst_inst_n_2));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(xpm_fifo_rst_inst_n_2));
  GND GND
       (.G(\<const0> ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(xpm_fifo_rst_inst_n_2));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn_49 \gen_fwft.rdpp1_inst 
       (.Q(curr_fwft_state),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (xpm_fifo_rst_inst_n_2),
        .ram_empty_i(ram_empty_i),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i0),
        .Q(full),
        .R(xpm_fifo_rst_inst_n_2));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pntr_flags_cc.ram_empty_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(xpm_fifo_rst_inst_n_2));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h00005455)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_3 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .I4(empty),
        .O(p_14_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ),
        .R(xpm_fifo_rst_inst_n_2));
  LUT4 #(
    .INIT(16'h1000)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_2 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ),
        .O(prog_empty_i1));
  FDRE #(
    .INIT(1'b1)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(xpm_fifo_rst_inst_n_7),
        .Q(prog_empty),
        .R(1'b0));
  FDRE \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(read_only),
        .Q(read_only_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(write_only),
        .Q(write_only_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(xpm_fifo_rst_inst_n_2));
  LUT4 #(
    .INIT(16'h1000)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[4]),
        .I3(diff_pntr_pf_q[1]),
        .O(prog_full_i215_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(xpm_fifo_rst_inst_n_0),
        .Q(prog_full),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.ram_rd_en_pf_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rdp_inst_n_6),
        .Q(ram_rd_en_pf_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.ram_wr_en_pf_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_wr_en_pf),
        .Q(ram_wr_en_pf_q),
        .R(xpm_fifo_rst_inst_n_2));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "3" *) 
  (* BYTE_WRITE_WIDTH_B = "3" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "48" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "3" *) 
  (* P_MIN_WIDTH_DATA_A = "3" *) 
  (* P_MIN_WIDTH_DATA_B = "3" *) 
  (* P_MIN_WIDTH_DATA_ECC = "3" *) 
  (* P_MIN_WIDTH_DATA_LDW = "3" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "5" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "3" *) 
  (* P_WIDTH_COL_WRITE_B = "3" *) 
  (* READ_DATA_WIDTH_A = "3" *) 
  (* READ_DATA_WIDTH_B = "3" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "3" *) 
  (* WRITE_DATA_WIDTH_B = "3" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "4" *) 
  (* rstb_loop_iter = "4" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_memory_base__parameterized2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(1'b0),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [2:0]),
        .doutb(dout),
        .ena(ram_wr_en_pf),
        .enb(rdp_inst_n_6),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(xpm_fifo_rst_inst_n_2),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(wr_data_count[0]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(wr_data_count[1]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(wr_data_count[2]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(wr_data_count[3]),
        .R(xpm_fifo_rst_inst_n_2));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized0_50 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (rdp_inst_n_6),
        .Q(rd_pntr_ext),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (rdp_inst_n_9),
        .\count_value_i_reg[0]_1 (curr_fwft_state),
        .\count_value_i_reg[3]_0 (diff_pntr_pf_q0[4:3]),
        .\count_value_i_reg[4]_0 (\grdc.diff_wr_rd_pntr_rdc [4:2]),
        .\count_value_i_reg[4]_1 (xpm_fifo_rst_inst_n_2),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] (full),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] (rst_d1_inst_n_3),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] (wrpp1_inst_n_6),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ({wrpp1_inst_n_2,wrpp1_inst_n_3,wrpp1_inst_n_4,wrpp1_inst_n_5}),
        .\grdc.rd_data_count_i_reg[4] ({wrp_inst_n_2,wr_pntr_ext}),
        .\grdc.rd_data_count_i_reg[4]_0 (wrp_inst_n_10),
        .p_14_in(p_14_in),
        .ram_empty_i(ram_empty_i),
        .ram_wr_en_pf(ram_wr_en_pf),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized1_51 rdpp1_inst
       (.Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rdp_inst_n_6),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_1 (xpm_fifo_rst_inst_n_2),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_bit_52 rst_d1_inst
       (.Q(xpm_fifo_rst_inst_n_2),
        .d_out_reg_0(rst_d1_inst_n_3),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 (rdp_inst_n_6),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .write_only(write_only));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized0_53 wrp_inst
       (.D(diff_pntr_pe[1:0]),
        .Q({wrp_inst_n_2,wr_pntr_ext}),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (\grdc.diff_wr_rd_pntr_rdc [1]),
        .\count_value_i_reg[0]_1 (xpm_fifo_rst_inst_n_2),
        .\count_value_i_reg[2]_0 (wrp_inst_n_10),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 (rd_pntr_ext),
        .\gen_pntr_flags_cc.ram_empty_i_reg ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 (rdp_inst_n_6),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 (full),
        .leaving_empty0(leaving_empty0),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .ram_wr_en_pf(ram_wr_en_pf),
        .read_only(read_only),
        .wr_clk(wr_clk));
  dfx_controller_setup_dfx_controller_0_0_xpm_counter_updn__parameterized1_54 wrpp1_inst
       (.D(diff_pntr_pf_q0[2:1]),
        .Q({wrpp1_inst_n_2,wrpp1_inst_n_3,wrpp1_inst_n_4,wrpp1_inst_n_5}),
        .\count_value_i_reg[1]_0 (wrpp1_inst_n_6),
        .\count_value_i_reg[1]_1 (xpm_fifo_rst_inst_n_2),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_7),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] (rdp_inst_n_6),
        .ram_wr_en_pf(ram_wr_en_pf),
        .wr_clk(wr_clk));
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_rst_55 xpm_fifo_rst_inst
       (.Q(xpm_fifo_rst_inst_n_2),
        .SR(\grdc.rd_data_count_i0 ),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg (wrpp1_inst_n_7),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 (rdp_inst_n_9),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 (rdp_inst_n_6),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 (full),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg (xpm_fifo_rst_inst_n_7),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg (xpm_fifo_rst_inst_n_0),
        .\grdc.rd_data_count_i_reg[1] (curr_fwft_state),
        .leaving_empty0(leaving_empty0),
        .prog_empty(prog_empty),
        .prog_empty_i1(prog_empty_i1),
        .prog_full(prog_full),
        .prog_full_i215_in(prog_full_i215_in),
        .ram_full_i0(ram_full_i0),
        .ram_rd_en_pf_q(ram_rd_en_pf_q),
        .ram_wr_en_pf(ram_wr_en_pf),
        .ram_wr_en_pf_q(ram_wr_en_pf_q),
        .rd_en(rd_en),
        .read_only(read_only),
        .read_only_q(read_only_q),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .write_only_q(write_only_q));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_bit
   (rst_d1,
    overflow_i0,
    write_only,
    d_out_reg_0,
    Q,
    wr_clk,
    \gof.overflow_i_reg ,
    wr_en,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 );
  output rst_d1;
  output overflow_i0;
  output write_only;
  output d_out_reg_0;
  input [0:0]Q;
  input wr_clk;
  input \gof.overflow_i_reg ;
  input wr_en;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ;

  wire [0:0]Q;
  wire d_out_reg_0;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire write_only;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(Q),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_4 
       (.I0(rst_d1),
        .I1(Q),
        .I2(wr_en),
        .I3(\gof.overflow_i_reg ),
        .O(d_out_reg_0));
  LUT5 #(
    .INIT(32'h04000404)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_i_1 
       (.I0(\gof.overflow_i_reg ),
        .I1(wr_en),
        .I2(rst_d1),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ),
        .O(write_only));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(Q),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_bit_44
   (rst_d1,
    overflow_i0,
    write_only,
    d_out_reg_0,
    Q,
    wr_clk,
    \gof.overflow_i_reg ,
    wr_en,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 );
  output rst_d1;
  output overflow_i0;
  output write_only;
  output d_out_reg_0;
  input [0:0]Q;
  input wr_clk;
  input \gof.overflow_i_reg ;
  input wr_en;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ;

  wire [0:0]Q;
  wire d_out_reg_0;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire write_only;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(Q),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_4 
       (.I0(rst_d1),
        .I1(Q),
        .I2(wr_en),
        .I3(\gof.overflow_i_reg ),
        .O(d_out_reg_0));
  LUT5 #(
    .INIT(32'h04000404)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_i_1 
       (.I0(\gof.overflow_i_reg ),
        .I1(wr_en),
        .I2(rst_d1),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ),
        .O(write_only));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(Q),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_bit_52
   (rst_d1,
    overflow_i0,
    write_only,
    d_out_reg_0,
    Q,
    wr_clk,
    \gof.overflow_i_reg ,
    wr_en,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 );
  output rst_d1;
  output overflow_i0;
  output write_only;
  output d_out_reg_0;
  input [0:0]Q;
  input wr_clk;
  input \gof.overflow_i_reg ;
  input wr_en;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ;

  wire [0:0]Q;
  wire d_out_reg_0;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire write_only;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(Q),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_4 
       (.I0(rst_d1),
        .I1(Q),
        .I2(wr_en),
        .I3(\gof.overflow_i_reg ),
        .O(d_out_reg_0));
  LUT5 #(
    .INIT(32'h04000404)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_i_1 
       (.I0(\gof.overflow_i_reg ),
        .I1(wr_en),
        .I2(rst_d1),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ),
        .O(write_only));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(Q),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_bit_58
   (rst_d1,
    d_out_reg_0,
    wrst_busy,
    wr_clk,
    prog_full,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    p_1_in,
    rst);
  output rst_d1;
  output d_out_reg_0;
  input wrst_busy;
  input wr_clk;
  input prog_full;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input p_1_in;
  input rst;

  wire d_out_reg_0;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire p_1_in;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000CFC04540)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(rst_d1),
        .I1(prog_full),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(p_1_in),
        .I4(rst),
        .I5(wrst_busy),
        .O(d_out_reg_0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_vec
   (ram_full_i0,
    Q,
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ,
    E,
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_0 ,
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 ,
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 ,
    wrst_busy,
    D,
    wr_clk);
  output ram_full_i0;
  output [4:0]Q;
  input \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ;
  input [0:0]E;
  input \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_0 ;
  input [1:0]\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 ;
  input [1:0]\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 ;
  input wrst_busy;
  input [4:0]D;
  input wr_clk;

  wire [4:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_0 ;
  wire [1:0]\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 ;
  wire [1:0]\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 ;
  wire ram_full_i0;
  wire wr_clk;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hF8888888)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ),
        .I2(E),
        .I3(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_0 ),
        .I4(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(ram_full_i0));
  LUT4 #(
    .INIT(16'h9009)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 [0]),
        .I2(Q[4]),
        .I3(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 [1]),
        .O(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_5 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 [0]),
        .I2(Q[4]),
        .I3(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 [1]),
        .O(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_vec_56
   (D,
    Q,
    \reg_out_i_reg[2]_0 ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4]_0 ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] ,
    rd_en,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[4]_0 ,
    rd_clk);
  output [2:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[2]_0 ;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] ;
  input \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4]_0 ;
  input \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] ;
  input rd_en;
  input \reg_out_i_reg[0]_0 ;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input rd_clk;

  wire [2:0]D;
  wire [4:0]Q;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4]_0 ;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire \reg_out_i_reg[2]_0 ;
  wire [4:0]\reg_out_i_reg[4]_0 ;

  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2_n_0 ),
        .I1(Q[2]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [2]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [2]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [3]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h4D00FF4DB2FF00B2)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_1 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [2]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [3]),
        .I4(Q[3]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4]_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h8ECF0C8E8ECF8ECF)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [0]),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] ),
        .I5(rd_en),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [2]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [1]),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [0]),
        .I5(Q[0]),
        .O(\reg_out_i_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_vec__parameterized0
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [5:0]Q;
  input wrst_busy;
  input [5:0]D;
  input wr_clk;

  wire [5:0]D;
  wire [5:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_reg_vec__parameterized0_57
   (O,
    Q,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output [0:0]O;
  input [5:0]Q;
  input \reg_out_i_reg[0]_0 ;
  input [5:0]D;
  input rd_clk;

  wire [5:0]D;
  wire [0:0]O;
  wire [5:0]Q;
  wire \grdc.rd_data_count_i[5]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[5]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[5]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[5]_i_6_n_0 ;
  wire \grdc.rd_data_count_i[5]_i_7_n_0 ;
  wire \grdc.rd_data_count_i[5]_i_8_n_0 ;
  wire \grdc.rd_data_count_i_reg[5]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[5]_i_2_n_0 ;
  wire \grdc.rd_data_count_i_reg[5]_i_2_n_1 ;
  wire \grdc.rd_data_count_i_reg[5]_i_2_n_2 ;
  wire \grdc.rd_data_count_i_reg[5]_i_2_n_3 ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire \reg_out_i_reg_n_0_[0] ;
  wire \reg_out_i_reg_n_0_[1] ;
  wire \reg_out_i_reg_n_0_[2] ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire \reg_out_i_reg_n_0_[5] ;
  wire [3:1]\NLW_grdc.rd_data_count_i_reg[5]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_grdc.rd_data_count_i_reg[5]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_grdc.rd_data_count_i_reg[5]_i_2_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_3 
       (.I0(\reg_out_i_reg_n_0_[5] ),
        .I1(Q[5]),
        .O(\grdc.rd_data_count_i[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_4 
       (.I0(\reg_out_i_reg_n_0_[4] ),
        .I1(Q[4]),
        .O(\grdc.rd_data_count_i[5]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_5 
       (.I0(\reg_out_i_reg_n_0_[3] ),
        .I1(Q[3]),
        .O(\grdc.rd_data_count_i[5]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_6 
       (.I0(\reg_out_i_reg_n_0_[2] ),
        .I1(Q[2]),
        .O(\grdc.rd_data_count_i[5]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_7 
       (.I0(\reg_out_i_reg_n_0_[1] ),
        .I1(Q[1]),
        .O(\grdc.rd_data_count_i[5]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_8 
       (.I0(\reg_out_i_reg_n_0_[0] ),
        .I1(Q[0]),
        .O(\grdc.rd_data_count_i[5]_i_8_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \grdc.rd_data_count_i_reg[5]_i_1 
       (.CI(\grdc.rd_data_count_i_reg[5]_i_2_n_0 ),
        .CO({\NLW_grdc.rd_data_count_i_reg[5]_i_1_CO_UNCONNECTED [3:1],\grdc.rd_data_count_i_reg[5]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\reg_out_i_reg_n_0_[4] }),
        .O({\NLW_grdc.rd_data_count_i_reg[5]_i_1_O_UNCONNECTED [3:2],O,\NLW_grdc.rd_data_count_i_reg[5]_i_1_O_UNCONNECTED [0]}),
        .S({1'b0,1'b0,\grdc.rd_data_count_i[5]_i_3_n_0 ,\grdc.rd_data_count_i[5]_i_4_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \grdc.rd_data_count_i_reg[5]_i_2 
       (.CI(1'b0),
        .CO({\grdc.rd_data_count_i_reg[5]_i_2_n_0 ,\grdc.rd_data_count_i_reg[5]_i_2_n_1 ,\grdc.rd_data_count_i_reg[5]_i_2_n_2 ,\grdc.rd_data_count_i_reg[5]_i_2_n_3 }),
        .CYINIT(1'b1),
        .DI({\reg_out_i_reg_n_0_[3] ,\reg_out_i_reg_n_0_[2] ,\reg_out_i_reg_n_0_[1] ,\reg_out_i_reg_n_0_[0] }),
        .O(\NLW_grdc.rd_data_count_i_reg[5]_i_2_O_UNCONNECTED [3:0]),
        .S({\grdc.rd_data_count_i[5]_i_5_n_0 ,\grdc.rd_data_count_i[5]_i_6_n_0 ,\grdc.rd_data_count_i[5]_i_7_n_0 ,\grdc.rd_data_count_i[5]_i_8_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg_n_0_[0] ),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg_n_0_[1] ),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg_n_0_[2] ),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg_n_0_[5] ),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_rst
   (\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ,
    read_only,
    Q,
    ram_full_i0,
    ram_wr_en_pf,
    wr_rst_busy,
    SR,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ,
    underflow_i0,
    prog_full,
    prog_full_i215_in,
    ram_wr_en_pf_q,
    ram_rd_en_pf_q,
    rst,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ,
    wr_en,
    rst_d1,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ,
    leaving_empty0,
    \grdc.rd_data_count_i_reg[1] ,
    write_only_q,
    prog_empty,
    prog_empty_i1,
    read_only_q,
    rd_en,
    wr_clk);
  output \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ;
  output read_only;
  output [0:0]Q;
  output ram_full_i0;
  output ram_wr_en_pf;
  output wr_rst_busy;
  output [0:0]SR;
  output \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  output underflow_i0;
  input prog_full;
  input prog_full_i215_in;
  input ram_wr_en_pf_q;
  input ram_rd_en_pf_q;
  input rst;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ;
  input wr_en;
  input rst_d1;
  input \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  input \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ;
  input leaving_empty0;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input write_only_q;
  input prog_empty;
  input prog_empty_i1;
  input read_only_q;
  input rd_en;
  input wr_clk;

  wire [0:0]Q;
  wire [0:0]SR;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ;
  wire [1:0]\gen_rst_cc.fifo_wr_rst_cc ;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire leaving_empty0;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire prog_empty;
  wire prog_empty_i1;
  wire prog_full;
  wire prog_full_i215_in;
  wire ram_full_i0;
  wire ram_rd_en_pf_q;
  wire ram_wr_en_pf;
  wire ram_wr_en_pf_q;
  wire rd_en;
  wire read_only;
  wire read_only_q;
  wire rst;
  wire rst_d1;
  wire rst_i;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire write_only_q;

  LUT6 #(
    .INIT(64'h00FFFFFF00008080)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_1 
       (.I0(ram_wr_en_pf),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ),
        .I2(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ),
        .I3(leaving_empty0),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ),
        .I5(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ),
        .O(ram_full_i0));
  LUT5 #(
    .INIT(32'hFFFFFC4C)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_1 
       (.I0(write_only_q),
        .I1(prog_empty),
        .I2(prog_empty_i1),
        .I3(read_only_q),
        .I4(Q),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ));
  LUT6 #(
    .INIT(64'h4444444444444044)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ),
        .I3(wr_en),
        .I4(Q),
        .I5(rst_d1),
        .O(read_only));
  LUT5 #(
    .INIT(32'h0000A2EA)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_1 
       (.I0(prog_full),
        .I1(prog_full_i215_in),
        .I2(ram_wr_en_pf_q),
        .I3(ram_rd_en_pf_q),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3_n_0 ),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hAE)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3 
       (.I0(Q),
        .I1(rst_d1),
        .I2(rst),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_cc.fifo_wr_rst_cc[2]_i_1 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\gen_rst_cc.fifo_wr_rst_cc [0]),
        .S(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_cc.fifo_wr_rst_cc [0]),
        .Q(\gen_rst_cc.fifo_wr_rst_cc [1]),
        .S(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_cc.fifo_wr_rst_cc [1]),
        .Q(Q),
        .S(rst_i));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ),
        .I2(Q),
        .I3(rst_d1),
        .O(ram_wr_en_pf));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(Q),
        .I1(\grdc.rd_data_count_i_reg[1] [0]),
        .I2(\grdc.rd_data_count_i_reg[1] [1]),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ),
        .I1(Q),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(Q),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_rst_47
   (\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ,
    read_only,
    Q,
    ram_full_i0,
    ram_wr_en_pf,
    wr_rst_busy,
    SR,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ,
    underflow_i0,
    prog_full,
    prog_full_i215_in,
    ram_wr_en_pf_q,
    ram_rd_en_pf_q,
    rst,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ,
    wr_en,
    rst_d1,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ,
    leaving_empty0,
    \grdc.rd_data_count_i_reg[1] ,
    write_only_q,
    prog_empty,
    prog_empty_i1,
    read_only_q,
    rd_en,
    wr_clk);
  output \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ;
  output read_only;
  output [0:0]Q;
  output ram_full_i0;
  output ram_wr_en_pf;
  output wr_rst_busy;
  output [0:0]SR;
  output \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  output underflow_i0;
  input prog_full;
  input prog_full_i215_in;
  input ram_wr_en_pf_q;
  input ram_rd_en_pf_q;
  input rst;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ;
  input wr_en;
  input rst_d1;
  input \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  input \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ;
  input leaving_empty0;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input write_only_q;
  input prog_empty;
  input prog_empty_i1;
  input read_only_q;
  input rd_en;
  input wr_clk;

  wire [0:0]Q;
  wire [0:0]SR;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ;
  wire [1:0]\gen_rst_cc.fifo_wr_rst_cc ;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire leaving_empty0;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire prog_empty;
  wire prog_empty_i1;
  wire prog_full;
  wire prog_full_i215_in;
  wire ram_full_i0;
  wire ram_rd_en_pf_q;
  wire ram_wr_en_pf;
  wire ram_wr_en_pf_q;
  wire rd_en;
  wire read_only;
  wire read_only_q;
  wire rst;
  wire rst_d1;
  wire rst_i;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire write_only_q;

  LUT6 #(
    .INIT(64'h00FFFFFF00008080)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_1 
       (.I0(ram_wr_en_pf),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ),
        .I2(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ),
        .I3(leaving_empty0),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ),
        .I5(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ),
        .O(ram_full_i0));
  LUT5 #(
    .INIT(32'hFFFFFC4C)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_1 
       (.I0(write_only_q),
        .I1(prog_empty),
        .I2(prog_empty_i1),
        .I3(read_only_q),
        .I4(Q),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ));
  LUT6 #(
    .INIT(64'h4444444444444044)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ),
        .I3(wr_en),
        .I4(Q),
        .I5(rst_d1),
        .O(read_only));
  LUT5 #(
    .INIT(32'h0000A2EA)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_1 
       (.I0(prog_full),
        .I1(prog_full_i215_in),
        .I2(ram_wr_en_pf_q),
        .I3(ram_rd_en_pf_q),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3_n_0 ),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hAE)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3 
       (.I0(Q),
        .I1(rst_d1),
        .I2(rst),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_cc.fifo_wr_rst_cc[2]_i_1 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\gen_rst_cc.fifo_wr_rst_cc [0]),
        .S(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_cc.fifo_wr_rst_cc [0]),
        .Q(\gen_rst_cc.fifo_wr_rst_cc [1]),
        .S(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_cc.fifo_wr_rst_cc [1]),
        .Q(Q),
        .S(rst_i));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ),
        .I2(Q),
        .I3(rst_d1),
        .O(ram_wr_en_pf));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(Q),
        .I1(\grdc.rd_data_count_i_reg[1] [0]),
        .I2(\grdc.rd_data_count_i_reg[1] [1]),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ),
        .I1(Q),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(Q),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_rst_55
   (\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ,
    read_only,
    Q,
    ram_full_i0,
    ram_wr_en_pf,
    wr_rst_busy,
    SR,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ,
    underflow_i0,
    prog_full,
    prog_full_i215_in,
    ram_wr_en_pf_q,
    ram_rd_en_pf_q,
    rst,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ,
    wr_en,
    rst_d1,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ,
    leaving_empty0,
    \grdc.rd_data_count_i_reg[1] ,
    write_only_q,
    prog_empty,
    prog_empty_i1,
    read_only_q,
    rd_en,
    wr_clk);
  output \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ;
  output read_only;
  output [0:0]Q;
  output ram_full_i0;
  output ram_wr_en_pf;
  output wr_rst_busy;
  output [0:0]SR;
  output \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  output underflow_i0;
  input prog_full;
  input prog_full_i215_in;
  input ram_wr_en_pf_q;
  input ram_rd_en_pf_q;
  input rst;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ;
  input wr_en;
  input rst_d1;
  input \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  input \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ;
  input leaving_empty0;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input write_only_q;
  input prog_empty;
  input prog_empty_i1;
  input read_only_q;
  input rd_en;
  input wr_clk;

  wire [0:0]Q;
  wire [0:0]SR;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ;
  wire [1:0]\gen_rst_cc.fifo_wr_rst_cc ;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire leaving_empty0;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire prog_empty;
  wire prog_empty_i1;
  wire prog_full;
  wire prog_full_i215_in;
  wire ram_full_i0;
  wire ram_rd_en_pf_q;
  wire ram_wr_en_pf;
  wire ram_wr_en_pf_q;
  wire rd_en;
  wire read_only;
  wire read_only_q;
  wire rst;
  wire rst_d1;
  wire rst_i;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire write_only_q;

  LUT6 #(
    .INIT(64'h00FFFFFF00008080)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_1 
       (.I0(ram_wr_en_pf),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ),
        .I2(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ),
        .I3(leaving_empty0),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ),
        .I5(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ),
        .O(ram_full_i0));
  LUT5 #(
    .INIT(32'hFFFFFC4C)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_1 
       (.I0(write_only_q),
        .I1(prog_empty),
        .I2(prog_empty_i1),
        .I3(read_only_q),
        .I4(Q),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ));
  LUT6 #(
    .INIT(64'h4444444444444044)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ),
        .I3(wr_en),
        .I4(Q),
        .I5(rst_d1),
        .O(read_only));
  LUT5 #(
    .INIT(32'h0000A2EA)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_1 
       (.I0(prog_full),
        .I1(prog_full_i215_in),
        .I2(ram_wr_en_pf_q),
        .I3(ram_rd_en_pf_q),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3_n_0 ),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hAE)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3 
       (.I0(Q),
        .I1(rst_d1),
        .I2(rst),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_cc.fifo_wr_rst_cc[2]_i_1 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\gen_rst_cc.fifo_wr_rst_cc [0]),
        .S(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_cc.fifo_wr_rst_cc [0]),
        .Q(\gen_rst_cc.fifo_wr_rst_cc [1]),
        .S(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_cc.fifo_wr_rst_cc [1]),
        .Q(Q),
        .S(rst_i));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ),
        .I2(Q),
        .I3(rst_d1),
        .O(ram_wr_en_pf));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(Q),
        .I1(\grdc.rd_data_count_i_reg[1] [0]),
        .I2(\grdc.rd_data_count_i_reg[1] [1]),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ),
        .I1(Q),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(Q),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_rst__parameterized0
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    overflow_i0,
    E,
    wr_rst_busy,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    \gof.overflow_i_reg ,
    rst_d1,
    wr_en,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output overflow_i0;
  output [0:0]E;
  output wr_rst_busy;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input \gof.overflow_i_reg ;
  input rst_d1;
  input wr_en;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_3_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire \__0/i__n_0 ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_2_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \gof.overflow_i_reg ;
  wire \guf.underflow_i_reg ;
  wire overflow_i0;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h555555555555FFD5)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\/i__n_0 ),
        .I1(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(p_0_in),
        .I5(rst),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF800F800FF00F800)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_3_n_0 ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I3(\/i__n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h1000100010000000)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(p_0_in),
        .I1(rst),
        .I2(\/i__n_0 ),
        .I3(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\/i__n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFF8FFFFFFF80000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_2_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "6" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_cdc_sync_rst \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAAAAE)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "6" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_cdc_sync_rst__2 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\gof.overflow_i_reg ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(\gof.overflow_i_reg ),
        .I1(wrst_busy),
        .I2(rst_d1),
        .I3(wr_en),
        .O(overflow_i0));
  LUT3 #(
    .INIT(8'hC8)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(rd_en),
        .I2(\guf.underflow_i_reg ),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "no_ecc" *) 
(* EN_ADV_FEATURE_SYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "0" *) (* ORIG_REF_NAME = "xpm_fifo_sync" *) 
(* PROG_EMPTY_THRESH = "7" *) (* PROG_FULL_THRESH = "11" *) (* P_COMMON_CLOCK = "1" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) (* READ_DATA_WIDTH = "32" *) 
(* READ_MODE = "fwft" *) (* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "32" *) (* WR_DATA_COUNT_WIDTH = "4" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_sync
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [31:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_en;
  output [31:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire NLW_xpm_fifo_base_inst_almost_empty_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_almost_full_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_data_valid_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_dbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_full_n_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_rd_rst_busy_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_sbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_wr_ack_UNCONNECTED;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_rst_busy = rd_rst_busy;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "2" *) 
  (* COMMON_CLOCK = "1" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "512" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* FULL_RST_VAL = "1'b0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "5" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "5" *) 
  (* PROG_EMPTY_THRESH = "7" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "32" *) 
  (* READ_MODE = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "32" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_base xpm_fifo_base_inst
       (.almost_empty(NLW_xpm_fifo_base_inst_almost_empty_UNCONNECTED),
        .almost_full(NLW_xpm_fifo_base_inst_almost_full_UNCONNECTED),
        .data_valid(NLW_xpm_fifo_base_inst_data_valid_UNCONNECTED),
        .dbiterr(NLW_xpm_fifo_base_inst_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(NLW_xpm_fifo_base_inst_full_n_UNCONNECTED),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(1'b0),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(NLW_xpm_fifo_base_inst_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .sbiterr(NLW_xpm_fifo_base_inst_sbiterr_UNCONNECTED),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(NLW_xpm_fifo_base_inst_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(rd_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "no_ecc" *) 
(* EN_ADV_FEATURE_SYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "0" *) (* ORIG_REF_NAME = "xpm_fifo_sync" *) 
(* PROG_EMPTY_THRESH = "7" *) (* PROG_FULL_THRESH = "11" *) (* P_COMMON_CLOCK = "1" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) (* READ_DATA_WIDTH = "35" *) 
(* READ_MODE = "fwft" *) (* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "35" *) (* WR_DATA_COUNT_WIDTH = "4" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_sync__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [34:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_en;
  output [34:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [34:0]din;
  wire [34:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire NLW_xpm_fifo_base_inst_almost_empty_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_almost_full_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_data_valid_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_dbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_full_n_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_rd_rst_busy_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_sbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_wr_ack_UNCONNECTED;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_rst_busy = rd_rst_busy;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "2" *) 
  (* COMMON_CLOCK = "1" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "560" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* FULL_RST_VAL = "1'b0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "5" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "5" *) 
  (* PROG_EMPTY_THRESH = "7" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "35" *) 
  (* READ_MODE = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "35" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_base__parameterized0 xpm_fifo_base_inst
       (.almost_empty(NLW_xpm_fifo_base_inst_almost_empty_UNCONNECTED),
        .almost_full(NLW_xpm_fifo_base_inst_almost_full_UNCONNECTED),
        .data_valid(NLW_xpm_fifo_base_inst_data_valid_UNCONNECTED),
        .dbiterr(NLW_xpm_fifo_base_inst_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(NLW_xpm_fifo_base_inst_full_n_UNCONNECTED),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(1'b0),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(NLW_xpm_fifo_base_inst_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .sbiterr(NLW_xpm_fifo_base_inst_sbiterr_UNCONNECTED),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(NLW_xpm_fifo_base_inst_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(rd_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "no_ecc" *) 
(* EN_ADV_FEATURE_SYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "0" *) (* ORIG_REF_NAME = "xpm_fifo_sync" *) 
(* PROG_EMPTY_THRESH = "7" *) (* PROG_FULL_THRESH = "11" *) (* P_COMMON_CLOCK = "1" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) (* READ_DATA_WIDTH = "3" *) 
(* READ_MODE = "fwft" *) (* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "3" *) (* WR_DATA_COUNT_WIDTH = "4" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_fifo_sync__parameterized3
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [2:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_en;
  output [2:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire NLW_xpm_fifo_base_inst_almost_empty_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_almost_full_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_data_valid_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_dbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_full_n_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_rd_rst_busy_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_sbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_wr_ack_UNCONNECTED;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_rst_busy = rd_rst_busy;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "2" *) 
  (* COMMON_CLOCK = "1" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "48" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* FULL_RST_VAL = "1'b0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "5" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "5" *) 
  (* PROG_EMPTY_THRESH = "7" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "3" *) 
  (* READ_MODE = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "3" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "2" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_base__parameterized2 xpm_fifo_base_inst
       (.almost_empty(NLW_xpm_fifo_base_inst_almost_empty_UNCONNECTED),
        .almost_full(NLW_xpm_fifo_base_inst_almost_full_UNCONNECTED),
        .data_valid(NLW_xpm_fifo_base_inst_data_valid_UNCONNECTED),
        .dbiterr(NLW_xpm_fifo_base_inst_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(NLW_xpm_fifo_base_inst_full_n_UNCONNECTED),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(1'b0),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(NLW_xpm_fifo_base_inst_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .sbiterr(NLW_xpm_fifo_base_inst_sbiterr_UNCONNECTED),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(NLW_xpm_fifo_base_inst_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(rd_rst_busy));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "32" *) (* BYTE_WRITE_WIDTH_B = "32" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "0" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "512" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "32" *) (* P_MIN_WIDTH_DATA_A = "32" *) (* P_MIN_WIDTH_DATA_B = "32" *) 
(* P_MIN_WIDTH_DATA_ECC = "32" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "32" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "32" *) (* P_WIDTH_COL_WRITE_B = "32" *) (* READ_DATA_WIDTH_A = "32" *) 
(* READ_DATA_WIDTH_B = "32" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "32" *) (* WRITE_DATA_WIDTH_B = "32" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "32" *) 
(* rstb_loop_iter = "32" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_memory_base
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [31:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [31:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [31:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [31:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire [31:0]dina;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire [31:0]\gen_rd_b.doutb_reg ;
  wire [31:0]\gen_rd_b.doutb_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_5_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_12_17_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_23_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_24_29_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_30_31_DOB_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_30_31_DOC_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_30_31_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_6_11_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[0] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [0]),
        .Q(\gen_rd_b.doutb_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[10] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [10]),
        .Q(\gen_rd_b.doutb_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[11] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [11]),
        .Q(\gen_rd_b.doutb_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[12] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [12]),
        .Q(\gen_rd_b.doutb_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[13] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [13]),
        .Q(\gen_rd_b.doutb_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[14] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [14]),
        .Q(\gen_rd_b.doutb_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[15] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [15]),
        .Q(\gen_rd_b.doutb_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[16] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [16]),
        .Q(\gen_rd_b.doutb_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[17] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [17]),
        .Q(\gen_rd_b.doutb_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[18] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [18]),
        .Q(\gen_rd_b.doutb_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[19] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [19]),
        .Q(\gen_rd_b.doutb_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[1] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [1]),
        .Q(\gen_rd_b.doutb_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[20] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [20]),
        .Q(\gen_rd_b.doutb_reg [20]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[21] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [21]),
        .Q(\gen_rd_b.doutb_reg [21]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[22] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [22]),
        .Q(\gen_rd_b.doutb_reg [22]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[23] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [23]),
        .Q(\gen_rd_b.doutb_reg [23]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[24] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [24]),
        .Q(\gen_rd_b.doutb_reg [24]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[25] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [25]),
        .Q(\gen_rd_b.doutb_reg [25]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[26] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [26]),
        .Q(\gen_rd_b.doutb_reg [26]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[27] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [27]),
        .Q(\gen_rd_b.doutb_reg [27]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[28] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [28]),
        .Q(\gen_rd_b.doutb_reg [28]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[29] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [29]),
        .Q(\gen_rd_b.doutb_reg [29]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[2] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [2]),
        .Q(\gen_rd_b.doutb_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[30] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [30]),
        .Q(\gen_rd_b.doutb_reg [30]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[31] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [31]),
        .Q(\gen_rd_b.doutb_reg [31]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[3] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [3]),
        .Q(\gen_rd_b.doutb_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[4] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [4]),
        .Q(\gen_rd_b.doutb_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[5] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [5]),
        .Q(\gen_rd_b.doutb_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[6] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [6]),
        .Q(\gen_rd_b.doutb_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[7] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [7]),
        .Q(\gen_rd_b.doutb_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[8] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [8]),
        .Q(\gen_rd_b.doutb_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[9] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [9]),
        .Q(\gen_rd_b.doutb_reg [9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][0] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][1] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][20] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [20]),
        .Q(doutb[20]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][21] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [21]),
        .Q(doutb[21]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][22] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [22]),
        .Q(doutb[22]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][23] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [23]),
        .Q(doutb[23]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][24] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [24]),
        .Q(doutb[24]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][25] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [25]),
        .Q(doutb[25]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][26] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [26]),
        .Q(doutb[26]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][27] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [27]),
        .Q(doutb[27]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][28] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [28]),
        .Q(doutb[28]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][29] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [29]),
        .Q(doutb[29]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][30] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [30]),
        .Q(doutb[30]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][31] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [31]),
        .Q(doutb[31]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][3] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "512" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "5" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_5 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [1:0]),
        .DOB(\gen_rd_b.doutb_reg0 [3:2]),
        .DOC(\gen_rd_b.doutb_reg0 [5:4]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_5_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "512" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "17" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_12_17 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[13:12]),
        .DIB(dina[15:14]),
        .DIC(dina[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [13:12]),
        .DOB(\gen_rd_b.doutb_reg0 [15:14]),
        .DOC(\gen_rd_b.doutb_reg0 [17:16]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_12_17_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "512" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "18" *) 
  (* ram_slice_end = "23" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_18_23 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[19:18]),
        .DIB(dina[21:20]),
        .DIC(dina[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [19:18]),
        .DOB(\gen_rd_b.doutb_reg0 [21:20]),
        .DOC(\gen_rd_b.doutb_reg0 [23:22]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_23_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "512" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "24" *) 
  (* ram_slice_end = "29" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_24_29 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[25:24]),
        .DIB(dina[27:26]),
        .DIC(dina[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [25:24]),
        .DOB(\gen_rd_b.doutb_reg0 [27:26]),
        .DOC(\gen_rd_b.doutb_reg0 [29:28]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_24_29_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "512" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "30" *) 
  (* ram_slice_end = "31" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_30_31 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[31:30]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [31:30]),
        .DOB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_30_31_DOB_UNCONNECTED [1:0]),
        .DOC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_30_31_DOC_UNCONNECTED [1:0]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_30_31_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "512" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "11" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_6_11 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[7:6]),
        .DIB(dina[9:8]),
        .DIC(dina[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [7:6]),
        .DOB(\gen_rd_b.doutb_reg0 [9:8]),
        .DOC(\gen_rd_b.doutb_reg0 [11:10]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_6_11_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "35" *) (* BYTE_WRITE_WIDTH_B = "35" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "0" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "560" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "35" *) (* P_MIN_WIDTH_DATA_A = "35" *) (* P_MIN_WIDTH_DATA_B = "35" *) 
(* P_MIN_WIDTH_DATA_ECC = "35" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "35" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "35" *) (* P_WIDTH_COL_WRITE_B = "35" *) (* READ_DATA_WIDTH_A = "35" *) 
(* READ_DATA_WIDTH_B = "35" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "35" *) (* WRITE_DATA_WIDTH_B = "35" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "36" *) 
(* rstb_loop_iter = "36" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_memory_base__parameterized0
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [34:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [34:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [34:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [34:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire [34:0]dina;
  wire [34:0]doutb;
  wire ena;
  wire enb;
  wire [34:0]\gen_rd_b.doutb_reg ;
  wire [34:0]\gen_rd_b.doutb_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_5_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_12_17_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_23_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_24_29_DOD_UNCONNECTED ;
  wire [1:1]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_30_34_DOC_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_30_34_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_6_11_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[0] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [0]),
        .Q(\gen_rd_b.doutb_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[10] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [10]),
        .Q(\gen_rd_b.doutb_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[11] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [11]),
        .Q(\gen_rd_b.doutb_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[12] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [12]),
        .Q(\gen_rd_b.doutb_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[13] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [13]),
        .Q(\gen_rd_b.doutb_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[14] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [14]),
        .Q(\gen_rd_b.doutb_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[15] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [15]),
        .Q(\gen_rd_b.doutb_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[16] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [16]),
        .Q(\gen_rd_b.doutb_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[17] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [17]),
        .Q(\gen_rd_b.doutb_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[18] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [18]),
        .Q(\gen_rd_b.doutb_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[19] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [19]),
        .Q(\gen_rd_b.doutb_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[1] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [1]),
        .Q(\gen_rd_b.doutb_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[20] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [20]),
        .Q(\gen_rd_b.doutb_reg [20]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[21] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [21]),
        .Q(\gen_rd_b.doutb_reg [21]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[22] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [22]),
        .Q(\gen_rd_b.doutb_reg [22]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[23] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [23]),
        .Q(\gen_rd_b.doutb_reg [23]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[24] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [24]),
        .Q(\gen_rd_b.doutb_reg [24]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[25] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [25]),
        .Q(\gen_rd_b.doutb_reg [25]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[26] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [26]),
        .Q(\gen_rd_b.doutb_reg [26]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[27] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [27]),
        .Q(\gen_rd_b.doutb_reg [27]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[28] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [28]),
        .Q(\gen_rd_b.doutb_reg [28]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[29] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [29]),
        .Q(\gen_rd_b.doutb_reg [29]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[2] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [2]),
        .Q(\gen_rd_b.doutb_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[30] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [30]),
        .Q(\gen_rd_b.doutb_reg [30]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[31] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [31]),
        .Q(\gen_rd_b.doutb_reg [31]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[32] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [32]),
        .Q(\gen_rd_b.doutb_reg [32]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[33] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [33]),
        .Q(\gen_rd_b.doutb_reg [33]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[34] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [34]),
        .Q(\gen_rd_b.doutb_reg [34]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[3] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [3]),
        .Q(\gen_rd_b.doutb_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[4] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [4]),
        .Q(\gen_rd_b.doutb_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[5] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [5]),
        .Q(\gen_rd_b.doutb_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[6] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [6]),
        .Q(\gen_rd_b.doutb_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[7] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [7]),
        .Q(\gen_rd_b.doutb_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[8] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [8]),
        .Q(\gen_rd_b.doutb_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[9] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [9]),
        .Q(\gen_rd_b.doutb_reg [9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][0] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][1] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][20] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [20]),
        .Q(doutb[20]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][21] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [21]),
        .Q(doutb[21]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][22] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [22]),
        .Q(doutb[22]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][23] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [23]),
        .Q(doutb[23]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][24] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [24]),
        .Q(doutb[24]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][25] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [25]),
        .Q(doutb[25]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][26] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [26]),
        .Q(doutb[26]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][27] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [27]),
        .Q(doutb[27]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][28] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [28]),
        .Q(doutb[28]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][29] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [29]),
        .Q(doutb[29]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][30] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [30]),
        .Q(doutb[30]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][31] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [31]),
        .Q(doutb[31]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][32] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [32]),
        .Q(doutb[32]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][33] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [33]),
        .Q(doutb[33]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][34] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [34]),
        .Q(doutb[34]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][3] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "560" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "5" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_5 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [1:0]),
        .DOB(\gen_rd_b.doutb_reg0 [3:2]),
        .DOC(\gen_rd_b.doutb_reg0 [5:4]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_5_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "560" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "17" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_12_17 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[13:12]),
        .DIB(dina[15:14]),
        .DIC(dina[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [13:12]),
        .DOB(\gen_rd_b.doutb_reg0 [15:14]),
        .DOC(\gen_rd_b.doutb_reg0 [17:16]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_12_17_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "560" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "18" *) 
  (* ram_slice_end = "23" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_18_23 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[19:18]),
        .DIB(dina[21:20]),
        .DIC(dina[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [19:18]),
        .DOB(\gen_rd_b.doutb_reg0 [21:20]),
        .DOC(\gen_rd_b.doutb_reg0 [23:22]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_23_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "560" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "24" *) 
  (* ram_slice_end = "29" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_24_29 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[25:24]),
        .DIB(dina[27:26]),
        .DIC(dina[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [25:24]),
        .DOB(\gen_rd_b.doutb_reg0 [27:26]),
        .DOC(\gen_rd_b.doutb_reg0 [29:28]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_24_29_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "560" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "30" *) 
  (* ram_slice_end = "34" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_30_34 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[31:30]),
        .DIB(dina[33:32]),
        .DIC({1'b0,dina[34]}),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [31:30]),
        .DOB(\gen_rd_b.doutb_reg0 [33:32]),
        .DOC({\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_30_34_DOC_UNCONNECTED [1],\gen_rd_b.doutb_reg0 [34]}),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_30_34_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "560" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "11" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_6_11 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[7:6]),
        .DIB(dina[9:8]),
        .DIC(dina[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [7:6]),
        .DOB(\gen_rd_b.doutb_reg0 [9:8]),
        .DOC(\gen_rd_b.doutb_reg0 [11:10]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_6_11_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ADDR_WIDTH_A = "5" *) (* ADDR_WIDTH_B = "5" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "34" *) (* BYTE_WRITE_WIDTH_B = "34" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "1088" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "32" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "34" *) (* P_MIN_WIDTH_DATA_A = "34" *) (* P_MIN_WIDTH_DATA_B = "34" *) 
(* P_MIN_WIDTH_DATA_ECC = "34" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "34" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "5" *) 
(* P_WIDTH_ADDR_READ_B = "5" *) (* P_WIDTH_ADDR_WRITE_A = "5" *) (* P_WIDTH_ADDR_WRITE_B = "5" *) 
(* P_WIDTH_COL_WRITE_A = "34" *) (* P_WIDTH_COL_WRITE_B = "34" *) (* READ_DATA_WIDTH_A = "34" *) 
(* READ_DATA_WIDTH_B = "34" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "0" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "1" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "34" *) (* WRITE_DATA_WIDTH_B = "34" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "36" *) 
(* rstb_loop_iter = "36" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_memory_base__parameterized1
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [4:0]addra;
  input [33:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [33:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [4:0]addrb;
  input [33:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [33:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [4:0]addra;
  wire [4:0]addrb;
  wire clka;
  wire [33:0]dina;
  wire [33:0]doutb;
  wire ena;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_0_5_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_12_17_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_18_23_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_24_29_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_30_33_DOC_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_30_33_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_6_11_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "1088" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "5" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_31_0_5 
       (.ADDRA(addrb),
        .ADDRB(addrb),
        .ADDRC(addrb),
        .ADDRD(addra),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(doutb[1:0]),
        .DOB(doutb[3:2]),
        .DOC(doutb[5:4]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_0_5_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "1088" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "17" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_31_12_17 
       (.ADDRA(addrb),
        .ADDRB(addrb),
        .ADDRC(addrb),
        .ADDRD(addra),
        .DIA(dina[13:12]),
        .DIB(dina[15:14]),
        .DIC(dina[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(doutb[13:12]),
        .DOB(doutb[15:14]),
        .DOC(doutb[17:16]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_12_17_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "1088" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "18" *) 
  (* ram_slice_end = "23" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_31_18_23 
       (.ADDRA(addrb),
        .ADDRB(addrb),
        .ADDRC(addrb),
        .ADDRD(addra),
        .DIA(dina[19:18]),
        .DIB(dina[21:20]),
        .DIC(dina[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(doutb[19:18]),
        .DOB(doutb[21:20]),
        .DOC(doutb[23:22]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_18_23_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "1088" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "24" *) 
  (* ram_slice_end = "29" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_31_24_29 
       (.ADDRA(addrb),
        .ADDRB(addrb),
        .ADDRC(addrb),
        .ADDRD(addra),
        .DIA(dina[25:24]),
        .DIB(dina[27:26]),
        .DIC(dina[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(doutb[25:24]),
        .DOB(doutb[27:26]),
        .DOC(doutb[29:28]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_24_29_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "1088" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "30" *) 
  (* ram_slice_end = "33" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_31_30_33 
       (.ADDRA(addrb),
        .ADDRB(addrb),
        .ADDRC(addrb),
        .ADDRD(addra),
        .DIA(dina[31:30]),
        .DIB(dina[33:32]),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(doutb[31:30]),
        .DOB(doutb[33:32]),
        .DOC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_30_33_DOC_UNCONNECTED [1:0]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_30_33_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "1088" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "11" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_31_6_11 
       (.ADDRA(addrb),
        .ADDRB(addrb),
        .ADDRC(addrb),
        .ADDRD(addra),
        .DIA(dina[7:6]),
        .DIB(dina[9:8]),
        .DIC(dina[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(doutb[7:6]),
        .DOB(doutb[9:8]),
        .DOC(doutb[11:10]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_6_11_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "3" *) (* BYTE_WRITE_WIDTH_B = "3" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "0" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "48" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "3" *) (* P_MIN_WIDTH_DATA_A = "3" *) (* P_MIN_WIDTH_DATA_B = "3" *) 
(* P_MIN_WIDTH_DATA_ECC = "3" *) (* P_MIN_WIDTH_DATA_LDW = "3" *) (* P_MIN_WIDTH_DATA_SHFT = "5" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "3" *) (* P_WIDTH_COL_WRITE_B = "3" *) (* READ_DATA_WIDTH_A = "3" *) 
(* READ_DATA_WIDTH_B = "3" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "3" *) (* WRITE_DATA_WIDTH_B = "3" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "4" *) 
(* rstb_loop_iter = "4" *) 
module dfx_controller_setup_dfx_controller_0_0_xpm_memory_base__parameterized2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [2:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [2:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [2:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [2:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire [2:0]dina;
  wire [2:0]doutb;
  wire ena;
  wire enb;
  wire [2:0]\gen_rd_b.doutb_reg ;
  wire [2:0]\gen_rd_b.doutb_reg0 ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][0]_i_1_n_0 ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][1]_i_1_n_0 ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][2]_i_1_n_0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:1]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_2_DOB_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_2_DOC_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_2_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[0] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [0]),
        .Q(\gen_rd_b.doutb_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[1] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [1]),
        .Q(\gen_rd_b.doutb_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[2] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [2]),
        .Q(\gen_rd_b.doutb_reg [2]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][0]_i_1 
       (.I0(\gen_rd_b.doutb_reg [0]),
        .I1(regceb),
        .I2(doutb[0]),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe[0][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][1]_i_1 
       (.I0(\gen_rd_b.doutb_reg [1]),
        .I1(regceb),
        .I2(doutb[1]),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe[0][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][2]_i_1 
       (.I0(\gen_rd_b.doutb_reg [2]),
        .I1(regceb),
        .I2(doutb[2]),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe[0][2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][0] 
       (.C(clka),
        .CE(1'b1),
        .D(\gen_rd_b.gen_doutb_pipe.doutb_pipe[0][0]_i_1_n_0 ),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][1] 
       (.C(clka),
        .CE(1'b1),
        .D(\gen_rd_b.gen_doutb_pipe.doutb_pipe[0][1]_i_1_n_0 ),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] 
       (.C(clka),
        .CE(1'b1),
        .D(\gen_rd_b.gen_doutb_pipe.doutb_pipe[0][2]_i_1_n_0 ),
        .Q(doutb[2]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "48" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_2 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB({1'b0,dina[2]}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [1:0]),
        .DOB({\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_2_DOB_UNCONNECTED [1],\gen_rd_b.doutb_reg0 [2]}),
        .DOC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_2_DOC_UNCONNECTED [1:0]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_2_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ORIG_REF_NAME = "axi_skid_buffer" *) 
module dfx_controller_setup_dfx_controller_0_0_axi_skid_buffer
   (SR,
    valid_reg1_reg_0,
    valid_reg1_reg_1,
    E,
    D,
    valid_reg_reg,
    clk,
    valid_reg0_reg_0,
    out,
    reset,
    sb2_s_axis_tvalid,
    valid_reg_reg_0,
    \data_reg0_reg[36]_0 ,
    \data_reg0_reg[36]_1 );
  output [0:0]SR;
  output valid_reg1_reg_0;
  output valid_reg1_reg_1;
  output [0:0]E;
  output [36:0]D;
  output valid_reg_reg;
  input clk;
  input valid_reg0_reg_0;
  input out;
  input reset;
  input sb2_s_axis_tvalid;
  input valid_reg_reg_0;
  input [0:0]\data_reg0_reg[36]_0 ;
  input [35:0]\data_reg0_reg[36]_1 ;

  wire [36:0]D;
  wire [0:0]E;
  wire [0:0]SR;
  wire clk;
  wire [36:0]data_reg0;
  wire [0:0]\data_reg0_reg[36]_0 ;
  wire [35:0]\data_reg0_reg[36]_1 ;
  wire [36:0]data_reg1;
  wire out;
  wire out_pointer;
  wire out_pointer_i_1_n_0;
  wire reset;
  wire sb2_s_axis_tvalid;
  wire valid_reg0;
  wire valid_reg0_i_1_n_0;
  wire valid_reg0_reg_0;
  wire valid_reg1_i_1_n_0;
  wire valid_reg1_reg_0;
  wire valid_reg1_reg_1;
  wire valid_reg_reg;
  wire valid_reg_reg_0;

  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[0] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [0]),
        .Q(data_reg0[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[10] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [10]),
        .Q(data_reg0[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[11] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [11]),
        .Q(data_reg0[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[12] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [12]),
        .Q(data_reg0[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[13] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [13]),
        .Q(data_reg0[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[14] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [14]),
        .Q(data_reg0[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[15] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [15]),
        .Q(data_reg0[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[16] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [16]),
        .Q(data_reg0[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[17] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [17]),
        .Q(data_reg0[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[18] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [18]),
        .Q(data_reg0[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[19] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [19]),
        .Q(data_reg0[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[1] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [1]),
        .Q(data_reg0[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[20] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [20]),
        .Q(data_reg0[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[21] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [21]),
        .Q(data_reg0[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[22] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [22]),
        .Q(data_reg0[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[23] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [23]),
        .Q(data_reg0[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[24] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [24]),
        .Q(data_reg0[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[25] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [25]),
        .Q(data_reg0[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[26] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [26]),
        .Q(data_reg0[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[27] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [27]),
        .Q(data_reg0[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[28] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [28]),
        .Q(data_reg0[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[29] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [29]),
        .Q(data_reg0[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[2] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [2]),
        .Q(data_reg0[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[30] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [30]),
        .Q(data_reg0[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[31] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [31]),
        .Q(data_reg0[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[32] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [32]),
        .Q(data_reg0[32]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[33] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [33]),
        .Q(data_reg0[33]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[34] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [34]),
        .Q(data_reg0[34]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[36] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [35]),
        .Q(data_reg0[36]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[3] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [3]),
        .Q(data_reg0[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[4] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [4]),
        .Q(data_reg0[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[5] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [5]),
        .Q(data_reg0[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[6] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [6]),
        .Q(data_reg0[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[7] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [7]),
        .Q(data_reg0[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[8] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [8]),
        .Q(data_reg0[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg0_reg[9] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(\data_reg0_reg[36]_1 [9]),
        .Q(data_reg0[9]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[0] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[0]),
        .Q(data_reg1[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[10] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[10]),
        .Q(data_reg1[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[11] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[11]),
        .Q(data_reg1[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[12] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[12]),
        .Q(data_reg1[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[13] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[13]),
        .Q(data_reg1[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[14] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[14]),
        .Q(data_reg1[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[15] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[15]),
        .Q(data_reg1[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[16] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[16]),
        .Q(data_reg1[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[17] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[17]),
        .Q(data_reg1[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[18] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[18]),
        .Q(data_reg1[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[19] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[19]),
        .Q(data_reg1[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[1] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[1]),
        .Q(data_reg1[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[20] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[20]),
        .Q(data_reg1[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[21] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[21]),
        .Q(data_reg1[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[22] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[22]),
        .Q(data_reg1[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[23] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[23]),
        .Q(data_reg1[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[24] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[24]),
        .Q(data_reg1[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[25] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[25]),
        .Q(data_reg1[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[26] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[26]),
        .Q(data_reg1[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[27] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[27]),
        .Q(data_reg1[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[28] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[28]),
        .Q(data_reg1[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[29] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[29]),
        .Q(data_reg1[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[2] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[2]),
        .Q(data_reg1[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[30] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[30]),
        .Q(data_reg1[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[31] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[31]),
        .Q(data_reg1[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[32] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[32]),
        .Q(data_reg1[32]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[33] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[33]),
        .Q(data_reg1[33]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[34] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[34]),
        .Q(data_reg1[34]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[36] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[36]),
        .Q(data_reg1[36]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[3] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[3]),
        .Q(data_reg1[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[4] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[4]),
        .Q(data_reg1[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[5] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[5]),
        .Q(data_reg1[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[6] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[6]),
        .Q(data_reg1[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[7] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[7]),
        .Q(data_reg1[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[8] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[8]),
        .Q(data_reg1[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg1_reg[9] 
       (.C(clk),
        .CE(\data_reg0_reg[36]_0 ),
        .D(data_reg0[9]),
        .Q(data_reg1[9]),
        .R(SR));
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[0]_i_1 
       (.I0(data_reg1[0]),
        .I1(out_pointer),
        .I2(data_reg0[0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[10]_i_1 
       (.I0(data_reg1[10]),
        .I1(out_pointer),
        .I2(data_reg0[10]),
        .O(D[10]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[11]_i_1 
       (.I0(data_reg1[11]),
        .I1(out_pointer),
        .I2(data_reg0[11]),
        .O(D[11]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[12]_i_1 
       (.I0(data_reg1[12]),
        .I1(out_pointer),
        .I2(data_reg0[12]),
        .O(D[12]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[13]_i_1 
       (.I0(data_reg1[13]),
        .I1(out_pointer),
        .I2(data_reg0[13]),
        .O(D[13]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[14]_i_1 
       (.I0(data_reg1[14]),
        .I1(out_pointer),
        .I2(data_reg0[14]),
        .O(D[14]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[15]_i_1 
       (.I0(data_reg1[15]),
        .I1(out_pointer),
        .I2(data_reg0[15]),
        .O(D[15]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[16]_i_1 
       (.I0(data_reg1[16]),
        .I1(out_pointer),
        .I2(data_reg0[16]),
        .O(D[16]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[17]_i_1 
       (.I0(data_reg1[17]),
        .I1(out_pointer),
        .I2(data_reg0[17]),
        .O(D[17]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[18]_i_1 
       (.I0(data_reg1[18]),
        .I1(out_pointer),
        .I2(data_reg0[18]),
        .O(D[18]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[19]_i_1 
       (.I0(data_reg1[19]),
        .I1(out_pointer),
        .I2(data_reg0[19]),
        .O(D[19]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[1]_i_1 
       (.I0(data_reg1[1]),
        .I1(out_pointer),
        .I2(data_reg0[1]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[20]_i_1 
       (.I0(data_reg1[20]),
        .I1(out_pointer),
        .I2(data_reg0[20]),
        .O(D[20]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[21]_i_1 
       (.I0(data_reg1[21]),
        .I1(out_pointer),
        .I2(data_reg0[21]),
        .O(D[21]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[22]_i_1 
       (.I0(data_reg1[22]),
        .I1(out_pointer),
        .I2(data_reg0[22]),
        .O(D[22]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[23]_i_1 
       (.I0(data_reg1[23]),
        .I1(out_pointer),
        .I2(data_reg0[23]),
        .O(D[23]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[24]_i_1 
       (.I0(data_reg1[24]),
        .I1(out_pointer),
        .I2(data_reg0[24]),
        .O(D[24]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[25]_i_1 
       (.I0(data_reg1[25]),
        .I1(out_pointer),
        .I2(data_reg0[25]),
        .O(D[25]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[26]_i_1 
       (.I0(data_reg1[26]),
        .I1(out_pointer),
        .I2(data_reg0[26]),
        .O(D[26]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[27]_i_1 
       (.I0(data_reg1[27]),
        .I1(out_pointer),
        .I2(data_reg0[27]),
        .O(D[27]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[28]_i_1 
       (.I0(data_reg1[28]),
        .I1(out_pointer),
        .I2(data_reg0[28]),
        .O(D[28]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[29]_i_1 
       (.I0(data_reg1[29]),
        .I1(out_pointer),
        .I2(data_reg0[29]),
        .O(D[29]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[2]_i_1 
       (.I0(data_reg1[2]),
        .I1(out_pointer),
        .I2(data_reg0[2]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[30]_i_1 
       (.I0(data_reg1[30]),
        .I1(out_pointer),
        .I2(data_reg0[30]),
        .O(D[30]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[31]_i_1 
       (.I0(data_reg1[31]),
        .I1(out_pointer),
        .I2(data_reg0[31]),
        .O(D[31]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[32]_i_1 
       (.I0(data_reg1[32]),
        .I1(out_pointer),
        .I2(data_reg0[32]),
        .O(D[32]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[33]_i_1 
       (.I0(data_reg1[33]),
        .I1(out_pointer),
        .I2(data_reg0[33]),
        .O(D[33]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[34]_i_1 
       (.I0(data_reg1[34]),
        .I1(out_pointer),
        .I2(data_reg0[34]),
        .O(D[34]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[36]_i_1 
       (.I0(data_reg1[36]),
        .I1(out_pointer),
        .I2(data_reg0[36]),
        .O(D[35]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \data_reg[38]_i_1 
       (.I0(valid_reg0),
        .I1(out_pointer),
        .I2(valid_reg1_reg_0),
        .I3(valid_reg0_reg_0),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT5 #(
    .INIT(32'h000ACC0A)) 
    \data_reg[38]_i_2 
       (.I0(valid_reg0),
        .I1(valid_reg1_reg_0),
        .I2(data_reg0[31]),
        .I3(out_pointer),
        .I4(data_reg1[31]),
        .O(D[36]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[3]_i_1 
       (.I0(data_reg1[3]),
        .I1(out_pointer),
        .I2(data_reg0[3]),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[4]_i_1 
       (.I0(data_reg1[4]),
        .I1(out_pointer),
        .I2(data_reg0[4]),
        .O(D[4]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[5]_i_1 
       (.I0(data_reg1[5]),
        .I1(out_pointer),
        .I2(data_reg0[5]),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[6]_i_1 
       (.I0(data_reg1[6]),
        .I1(out_pointer),
        .I2(data_reg0[6]),
        .O(D[6]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[7]_i_1 
       (.I0(data_reg1[7]),
        .I1(out_pointer),
        .I2(data_reg0[7]),
        .O(D[7]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[8]_i_1 
       (.I0(data_reg1[8]),
        .I1(out_pointer),
        .I2(data_reg0[8]),
        .O(D[8]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_reg[9]_i_1 
       (.I0(data_reg1[9]),
        .I1(out_pointer),
        .I2(data_reg0[9]),
        .O(D[9]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'hB)) 
    id_fifo_read_d1_i_2
       (.I0(valid_reg1_reg_0),
        .I1(out),
        .O(valid_reg1_reg_1));
  LUT1 #(
    .INIT(2'h1)) 
    \opt_has_pipe.i_pipe[3].pipe[3][0]_i_1 
       (.I0(reset),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT5 #(
    .INIT(32'hF4FF4000)) 
    out_pointer_i_1
       (.I0(valid_reg1_reg_0),
        .I1(out),
        .I2(valid_reg0_reg_0),
        .I3(valid_reg0),
        .I4(out_pointer),
        .O(out_pointer_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    out_pointer_reg
       (.C(clk),
        .CE(1'b1),
        .D(out_pointer_i_1_n_0),
        .Q(out_pointer),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT4 #(
    .INIT(16'hFE44)) 
    valid_reg0_i_1
       (.I0(valid_reg1_reg_0),
        .I1(out),
        .I2(valid_reg0_reg_0),
        .I3(valid_reg0),
        .O(valid_reg0_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    valid_reg0_reg
       (.C(clk),
        .CE(1'b1),
        .D(valid_reg0_i_1_n_0),
        .Q(valid_reg0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT5 #(
    .INIT(32'hDD800000)) 
    valid_reg1_i_1
       (.I0(valid_reg0),
        .I1(valid_reg0_reg_0),
        .I2(out),
        .I3(valid_reg1_reg_0),
        .I4(reset),
        .O(valid_reg1_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    valid_reg1_reg
       (.C(clk),
        .CE(1'b1),
        .D(valid_reg1_i_1_n_0),
        .Q(valid_reg1_reg_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFEACFC0)) 
    valid_reg_i_1
       (.I0(sb2_s_axis_tvalid),
        .I1(valid_reg1_reg_0),
        .I2(out_pointer),
        .I3(valid_reg0),
        .I4(valid_reg_reg_0),
        .O(valid_reg_reg));
endmodule

(* ORIG_REF_NAME = "axi_skid_buffer_2" *) 
module dfx_controller_setup_dfx_controller_0_0_axi_skid_buffer_2
   (sb2_s_axis_tvalid,
    \data_reg_reg[34]_0 ,
    bypass0,
    Q,
    D,
    \current_state_reg[1] ,
    din,
    \FSM_onehot_current_state_reg[4] ,
    E,
    CE,
    valid_reg_reg_0,
    \GEN_OPT_LVL_0.v_counter_reg[0] ,
    reset_0,
    \data_reg_reg[31]_0 ,
    \data_reg_reg[1]_0 ,
    \data_reg_reg[36]_0 ,
    \current_state_reg[1]_0 ,
    LOAD,
    SR,
    valid_reg_reg_1,
    clk,
    \rm_id_o_reg[0] ,
    current_state,
    counter_is_zero,
    \icap_o_preswap_reg[1] ,
    \i_no_async_controls.output_reg[11] ,
    bad_format_error_seen_reg,
    bad_format_error_seen_i_2_0,
    bad_format_error_seen_i_2_1,
    bad_format_error_seen_i_5_0,
    full,
    \GEN_OPT_LVL_0.counter_is_zero_reg ,
    \GEN_OPT_LVL_0.counter_is_zero_reg_0 ,
    reset,
    \GEN_OPT_LVL_0.v_counter_reg[1] ,
    \GEN_OPT_LVL_0.v_counter_reg[2] ,
    \current_state_reg[0] ,
    empty,
    \current_state[2]_i_2__0_0 ,
    dout,
    \rm_id_o_reg[0]_0 ,
    \rm_id_o_reg[0]_1 ,
    \data_reg_reg[38]_0 ,
    \data_reg_reg[38]_1 );
  output sb2_s_axis_tvalid;
  output \data_reg_reg[34]_0 ;
  output bypass0;
  output [34:0]Q;
  output [1:0]D;
  output \current_state_reg[1] ;
  output [33:0]din;
  output \FSM_onehot_current_state_reg[4] ;
  output [0:0]E;
  output CE;
  output valid_reg_reg_0;
  output \GEN_OPT_LVL_0.v_counter_reg[0] ;
  output [2:0]reset_0;
  output \data_reg_reg[31]_0 ;
  output \data_reg_reg[1]_0 ;
  output \data_reg_reg[36]_0 ;
  output \current_state_reg[1]_0 ;
  output LOAD;
  input [0:0]SR;
  input valid_reg_reg_1;
  input clk;
  input \rm_id_o_reg[0] ;
  input [2:0]current_state;
  input counter_is_zero;
  input [1:0]\icap_o_preswap_reg[1] ;
  input [2:0]\i_no_async_controls.output_reg[11] ;
  input bad_format_error_seen_reg;
  input bad_format_error_seen_i_2_0;
  input bad_format_error_seen_i_2_1;
  input [1:0]bad_format_error_seen_i_5_0;
  input full;
  input \GEN_OPT_LVL_0.counter_is_zero_reg ;
  input [2:0]\GEN_OPT_LVL_0.counter_is_zero_reg_0 ;
  input reset;
  input \GEN_OPT_LVL_0.v_counter_reg[1] ;
  input \GEN_OPT_LVL_0.v_counter_reg[2] ;
  input \current_state_reg[0] ;
  input empty;
  input \current_state[2]_i_2__0_0 ;
  input [31:0]dout;
  input \rm_id_o_reg[0]_0 ;
  input [0:0]\rm_id_o_reg[0]_1 ;
  input [0:0]\data_reg_reg[38]_0 ;
  input [36:0]\data_reg_reg[38]_1 ;

  wire CE;
  wire [1:0]D;
  wire [0:0]E;
  wire \FSM_onehot_current_state_reg[4] ;
  wire \GEN_OPT_LVL_0.counter_is_zero_reg ;
  wire [2:0]\GEN_OPT_LVL_0.counter_is_zero_reg_0 ;
  wire \GEN_OPT_LVL_0.v_counter[2]_i_2_n_0 ;
  wire \GEN_OPT_LVL_0.v_counter_reg[0] ;
  wire \GEN_OPT_LVL_0.v_counter_reg[1] ;
  wire \GEN_OPT_LVL_0.v_counter_reg[2] ;
  wire LOAD;
  wire [34:0]Q;
  wire [0:0]SR;
  wire bad_format_error_seen_i_10_n_0;
  wire bad_format_error_seen_i_11_n_0;
  wire bad_format_error_seen_i_12_n_0;
  wire bad_format_error_seen_i_13_n_0;
  wire bad_format_error_seen_i_2_0;
  wire bad_format_error_seen_i_2_1;
  wire bad_format_error_seen_i_4_n_0;
  wire [1:0]bad_format_error_seen_i_5_0;
  wire bad_format_error_seen_i_5_n_0;
  wire bad_format_error_seen_i_6_n_0;
  wire bad_format_error_seen_i_7_n_0;
  wire bad_format_error_seen_reg;
  wire bypass0;
  wire clk;
  wire counter_is_zero;
  wire [2:0]current_state;
  wire \current_state[0]_i_2__0_n_0 ;
  wire \current_state[0]_i_3__0_n_0 ;
  wire \current_state[0]_i_5_n_0 ;
  wire \current_state[1]_i_2__0_n_0 ;
  wire \current_state[2]_i_2__0_0 ;
  wire \current_state[2]_i_2__0_n_0 ;
  wire \current_state[2]_i_4__0_n_0 ;
  wire \current_state_reg[0] ;
  wire \current_state_reg[1] ;
  wire \current_state_reg[1]_0 ;
  wire \data_reg_reg[1]_0 ;
  wire \data_reg_reg[31]_0 ;
  wire \data_reg_reg[34]_0 ;
  wire \data_reg_reg[36]_0 ;
  wire [0:0]\data_reg_reg[38]_0 ;
  wire [36:0]\data_reg_reg[38]_1 ;
  wire [33:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire [2:0]\i_no_async_controls.output_reg[11] ;
  wire [1:0]\icap_o_preswap_reg[1] ;
  wire reset;
  wire [2:0]reset_0;
  wire \rm_id_o_reg[0] ;
  wire \rm_id_o_reg[0]_0 ;
  wire [0:0]\rm_id_o_reg[0]_1 ;
  wire [38:38]sb2_dout;
  wire sb2_rm_id;
  wire sb2_s_axis_tvalid;
  wire valid_reg_reg_0;
  wire valid_reg_reg_1;

  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_onehot_current_state[7]_i_5 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[2]),
        .O(\data_reg_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h00000014FFFFFFFF)) 
    \GEN_OPT_LVL_0.counter_is_zero_i_1 
       (.I0(\GEN_OPT_LVL_0.counter_is_zero_reg ),
        .I1(\GEN_OPT_LVL_0.v_counter[2]_i_2_n_0 ),
        .I2(\GEN_OPT_LVL_0.counter_is_zero_reg_0 [0]),
        .I3(\GEN_OPT_LVL_0.counter_is_zero_reg_0 [1]),
        .I4(\GEN_OPT_LVL_0.counter_is_zero_reg_0 [2]),
        .I5(reset),
        .O(\GEN_OPT_LVL_0.v_counter_reg[0] ));
  LUT6 #(
    .INIT(64'hFD0000000000FD00)) 
    \GEN_OPT_LVL_0.v_counter[0]_i_1 
       (.I0(current_state[1]),
        .I1(current_state[0]),
        .I2(current_state[2]),
        .I3(reset),
        .I4(\GEN_OPT_LVL_0.v_counter[2]_i_2_n_0 ),
        .I5(\GEN_OPT_LVL_0.counter_is_zero_reg_0 [0]),
        .O(reset_0[0]));
  LUT4 #(
    .INIT(16'hE100)) 
    \GEN_OPT_LVL_0.v_counter[1]_i_1 
       (.I0(\GEN_OPT_LVL_0.counter_is_zero_reg_0 [0]),
        .I1(\GEN_OPT_LVL_0.v_counter[2]_i_2_n_0 ),
        .I2(\GEN_OPT_LVL_0.counter_is_zero_reg_0 [1]),
        .I3(\GEN_OPT_LVL_0.v_counter_reg[1] ),
        .O(reset_0[1]));
  LUT6 #(
    .INIT(64'hAAAAAAAA88888882)) 
    \GEN_OPT_LVL_0.v_counter[2]_i_1 
       (.I0(reset),
        .I1(\GEN_OPT_LVL_0.counter_is_zero_reg_0 [2]),
        .I2(\GEN_OPT_LVL_0.counter_is_zero_reg_0 [1]),
        .I3(\GEN_OPT_LVL_0.counter_is_zero_reg_0 [0]),
        .I4(\GEN_OPT_LVL_0.v_counter[2]_i_2_n_0 ),
        .I5(\GEN_OPT_LVL_0.counter_is_zero_reg ),
        .O(reset_0[2]));
  LUT6 #(
    .INIT(64'hFFB0FFFFFFFFFFFF)) 
    \GEN_OPT_LVL_0.v_counter[2]_i_2 
       (.I0(\GEN_OPT_LVL_0.v_counter_reg[2] ),
        .I1(sb2_s_axis_tvalid),
        .I2(bad_format_error_seen_reg),
        .I3(current_state[2]),
        .I4(current_state[0]),
        .I5(current_state[1]),
        .O(\GEN_OPT_LVL_0.v_counter[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'hE)) 
    bad_format_error_seen_i_10
       (.I0(Q[27]),
        .I1(Q[30]),
        .O(bad_format_error_seen_i_10_n_0));
  LUT4 #(
    .INIT(16'h0010)) 
    bad_format_error_seen_i_11
       (.I0(Q[25]),
        .I1(Q[17]),
        .I2(Q[26]),
        .I3(Q[29]),
        .O(bad_format_error_seen_i_11_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    bad_format_error_seen_i_12
       (.I0(Q[23]),
        .I1(Q[18]),
        .I2(Q[22]),
        .I3(Q[20]),
        .O(bad_format_error_seen_i_12_n_0));
  LUT4 #(
    .INIT(16'hFFF7)) 
    bad_format_error_seen_i_13
       (.I0(Q[24]),
        .I1(Q[31]),
        .I2(Q[21]),
        .I3(Q[19]),
        .O(bad_format_error_seen_i_13_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFEF00EFEF)) 
    bad_format_error_seen_i_2
       (.I0(bad_format_error_seen_i_4_n_0),
        .I1(bad_format_error_seen_i_5_n_0),
        .I2(\i_no_async_controls.output_reg[11] [1]),
        .I3(bad_format_error_seen_i_6_n_0),
        .I4(\i_no_async_controls.output_reg[11] [0]),
        .I5(bad_format_error_seen_reg),
        .O(\FSM_onehot_current_state_reg[4] ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    bad_format_error_seen_i_4
       (.I0(Q[31]),
        .I1(\i_no_async_controls.output_reg[11] [1]),
        .I2(Q[29]),
        .I3(Q[28]),
        .I4(Q[27]),
        .I5(Q[30]),
        .O(bad_format_error_seen_i_4_n_0));
  LUT6 #(
    .INIT(64'hAE00AEAE00000000)) 
    bad_format_error_seen_i_5
       (.I0(bad_format_error_seen_i_7_n_0),
        .I1(bad_format_error_seen_i_2_0),
        .I2(bad_format_error_seen_i_2_1),
        .I3(bad_format_error_seen_i_5_0[1]),
        .I4(Q[30]),
        .I5(E),
        .O(bad_format_error_seen_i_5_n_0));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    bad_format_error_seen_i_6
       (.I0(bad_format_error_seen_i_10_n_0),
        .I1(Q[28]),
        .I2(Q[16]),
        .I3(bad_format_error_seen_i_11_n_0),
        .I4(bad_format_error_seen_i_12_n_0),
        .I5(bad_format_error_seen_i_13_n_0),
        .O(bad_format_error_seen_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    bad_format_error_seen_i_7
       (.I0(Q[30]),
        .I1(bad_format_error_seen_i_5_0[1]),
        .I2(Q[29]),
        .I3(bad_format_error_seen_i_5_0[0]),
        .O(bad_format_error_seen_i_7_n_0));
  LUT5 #(
    .INIT(32'hFFFFBA00)) 
    \current_state[0]_i_1__0 
       (.I0(current_state[0]),
        .I1(\rm_id_o_reg[0] ),
        .I2(Q[34]),
        .I3(\current_state[0]_i_2__0_n_0 ),
        .I4(\current_state[0]_i_3__0_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h00000000FDFF0000)) 
    \current_state[0]_i_2__0 
       (.I0(din[0]),
        .I1(\current_state_reg[0] ),
        .I2(\GEN_OPT_LVL_0.v_counter_reg[2] ),
        .I3(current_state[0]),
        .I4(current_state[2]),
        .I5(current_state[1]),
        .O(\current_state[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0057005700FF0000)) 
    \current_state[0]_i_3__0 
       (.I0(current_state[0]),
        .I1(counter_is_zero),
        .I2(Q[34]),
        .I3(current_state[2]),
        .I4(\current_state[0]_i_5_n_0 ),
        .I5(current_state[1]),
        .O(\current_state[0]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hBAAABABABABABABA)) 
    \current_state[0]_i_5 
       (.I0(current_state[0]),
        .I1(sb2_dout),
        .I2(sb2_s_axis_tvalid),
        .I3(current_state[2]),
        .I4(Q[34]),
        .I5(current_state[1]),
        .O(\current_state[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA0000A080)) 
    \current_state[1]_i_1__0 
       (.I0(\current_state[1]_i_2__0_n_0 ),
        .I1(\current_state_reg[1] ),
        .I2(sb2_s_axis_tvalid),
        .I3(sb2_dout),
        .I4(current_state[0]),
        .I5(current_state[1]),
        .O(bypass0));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT5 #(
    .INIT(32'h01555555)) 
    \current_state[1]_i_2__0 
       (.I0(current_state[2]),
        .I1(Q[34]),
        .I2(counter_is_zero),
        .I3(current_state[0]),
        .I4(current_state[1]),
        .O(\current_state[1]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \current_state[1]_i_3__0 
       (.I0(current_state[1]),
        .I1(Q[34]),
        .I2(current_state[2]),
        .O(\current_state_reg[1] ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAABAAAAA)) 
    \current_state[2]_i_1__0 
       (.I0(\current_state[2]_i_2__0_n_0 ),
        .I1(current_state[2]),
        .I2(current_state[0]),
        .I3(current_state[1]),
        .I4(Q[34]),
        .I5(\rm_id_o_reg[0] ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h003055000000FF00)) 
    \current_state[2]_i_2__0 
       (.I0(\current_state[2]_i_4__0_n_0 ),
        .I1(Q[34]),
        .I2(counter_is_zero),
        .I3(current_state[2]),
        .I4(current_state[1]),
        .I5(current_state[0]),
        .O(\current_state[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000008080808A)) 
    \current_state[2]_i_4__0 
       (.I0(din[0]),
        .I1(sb2_s_axis_tvalid),
        .I2(current_state[1]),
        .I3(empty),
        .I4(\current_state[2]_i_2__0_0 ),
        .I5(\GEN_OPT_LVL_0.v_counter_reg[2] ),
        .O(\current_state[2]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT4 #(
    .INIT(16'h41FF)) 
    \current_state[2]_i_7 
       (.I0(current_state[1]),
        .I1(current_state[0]),
        .I2(current_state[2]),
        .I3(sb2_s_axis_tvalid),
        .O(\current_state_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[0] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [0]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[10] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [10]),
        .Q(Q[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[11] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [11]),
        .Q(Q[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[12] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [12]),
        .Q(Q[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[13] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [13]),
        .Q(Q[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[14] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [14]),
        .Q(Q[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[15] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [15]),
        .Q(Q[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[16] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [16]),
        .Q(Q[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[17] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [17]),
        .Q(Q[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[18] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [18]),
        .Q(Q[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[19] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [19]),
        .Q(Q[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[1] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [1]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[20] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [20]),
        .Q(Q[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[21] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [21]),
        .Q(Q[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[22] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [22]),
        .Q(Q[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[23] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [23]),
        .Q(Q[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[24] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [24]),
        .Q(Q[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[25] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [25]),
        .Q(Q[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[26] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [26]),
        .Q(Q[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[27] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [27]),
        .Q(Q[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[28] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [28]),
        .Q(Q[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[29] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [29]),
        .Q(Q[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[2] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [2]),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[30] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [30]),
        .Q(Q[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[31] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [31]),
        .Q(Q[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[32] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [32]),
        .Q(Q[32]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[33] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [33]),
        .Q(Q[33]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[34] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [34]),
        .Q(Q[34]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[36] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [35]),
        .Q(sb2_rm_id),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[38] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [36]),
        .Q(sb2_dout),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[3] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [3]),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[4] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [4]),
        .Q(Q[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[5] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [5]),
        .Q(Q[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[6] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [6]),
        .Q(Q[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[7] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [7]),
        .Q(Q[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[8] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [8]),
        .Q(Q[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg_reg[9] 
       (.C(clk),
        .CE(\data_reg_reg[38]_0 ),
        .D(\data_reg_reg[38]_1 [9]),
        .Q(Q[9]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0202020222220222)) 
    handling_debug_bitstream_i_2
       (.I0(bypass0),
        .I1(\current_state[0]_i_3__0_n_0 ),
        .I2(\current_state[0]_i_2__0_n_0 ),
        .I3(Q[34]),
        .I4(\rm_id_o_reg[0] ),
        .I5(current_state[0]),
        .O(\data_reg_reg[34]_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_10
       (.I0(Q[23]),
        .I1(current_state[1]),
        .I2(dout[23]),
        .O(din[25]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_11
       (.I0(Q[22]),
        .I1(current_state[1]),
        .I2(dout[22]),
        .O(din[24]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_12
       (.I0(Q[21]),
        .I1(current_state[1]),
        .I2(dout[21]),
        .O(din[23]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_13
       (.I0(Q[20]),
        .I1(current_state[1]),
        .I2(dout[20]),
        .O(din[22]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_14
       (.I0(Q[19]),
        .I1(current_state[1]),
        .I2(dout[19]),
        .O(din[21]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_15
       (.I0(Q[18]),
        .I1(current_state[1]),
        .I2(dout[18]),
        .O(din[20]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_16
       (.I0(Q[17]),
        .I1(current_state[1]),
        .I2(dout[17]),
        .O(din[19]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_17
       (.I0(Q[16]),
        .I1(current_state[1]),
        .I2(dout[16]),
        .O(din[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_18
       (.I0(Q[15]),
        .I1(current_state[1]),
        .I2(dout[15]),
        .O(din[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_19
       (.I0(Q[14]),
        .I1(current_state[1]),
        .I2(dout[14]),
        .O(din[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_2
       (.I0(Q[31]),
        .I1(current_state[1]),
        .I2(dout[31]),
        .O(din[33]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_20
       (.I0(Q[13]),
        .I1(current_state[1]),
        .I2(dout[13]),
        .O(din[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_21
       (.I0(Q[12]),
        .I1(current_state[1]),
        .I2(dout[12]),
        .O(din[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_22
       (.I0(Q[11]),
        .I1(current_state[1]),
        .I2(dout[11]),
        .O(din[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_23
       (.I0(Q[10]),
        .I1(current_state[1]),
        .I2(dout[10]),
        .O(din[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_24
       (.I0(Q[9]),
        .I1(current_state[1]),
        .I2(dout[9]),
        .O(din[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_25
       (.I0(Q[8]),
        .I1(current_state[1]),
        .I2(dout[8]),
        .O(din[10]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_26
       (.I0(Q[7]),
        .I1(current_state[1]),
        .I2(dout[7]),
        .O(din[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_27
       (.I0(Q[6]),
        .I1(current_state[1]),
        .I2(dout[6]),
        .O(din[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_28
       (.I0(Q[5]),
        .I1(current_state[1]),
        .I2(dout[5]),
        .O(din[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_29
       (.I0(Q[4]),
        .I1(current_state[1]),
        .I2(dout[4]),
        .O(din[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_3
       (.I0(Q[30]),
        .I1(current_state[1]),
        .I2(dout[30]),
        .O(din[32]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_30
       (.I0(Q[3]),
        .I1(current_state[1]),
        .I2(dout[3]),
        .O(din[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_31
       (.I0(Q[2]),
        .I1(current_state[1]),
        .I2(dout[2]),
        .O(din[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_32
       (.I0(Q[1]),
        .I1(current_state[1]),
        .I2(dout[1]),
        .O(din[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_33
       (.I0(Q[0]),
        .I1(current_state[1]),
        .I2(dout[0]),
        .O(din[2]));
  LUT5 #(
    .INIT(32'hBAFFBA00)) 
    i_bs_fifo_i_34
       (.I0(Q[33]),
        .I1(current_state[2]),
        .I2(Q[34]),
        .I3(current_state[1]),
        .I4(\icap_o_preswap_reg[1] [0]),
        .O(din[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_35
       (.I0(Q[34]),
        .I1(current_state[1]),
        .I2(\icap_o_preswap_reg[1] [1]),
        .O(din[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_4
       (.I0(Q[29]),
        .I1(current_state[1]),
        .I2(dout[29]),
        .O(din[31]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_5
       (.I0(Q[28]),
        .I1(current_state[1]),
        .I2(dout[28]),
        .O(din[30]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_6
       (.I0(Q[27]),
        .I1(current_state[1]),
        .I2(dout[27]),
        .O(din[29]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_7
       (.I0(Q[26]),
        .I1(current_state[1]),
        .I2(dout[26]),
        .O(din[28]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_8
       (.I0(Q[25]),
        .I1(current_state[1]),
        .I2(dout[25]),
        .O(din[27]));
  LUT3 #(
    .INIT(8'hB8)) 
    i_bs_fifo_i_9
       (.I0(Q[24]),
        .I1(current_state[1]),
        .I2(dout[24]),
        .O(din[26]));
  LUT6 #(
    .INIT(64'h0404040404FF0404)) 
    i_synth_i_1__0
       (.I0(Q[26]),
        .I1(\i_no_async_controls.output_reg[11] [1]),
        .I2(Q[31]),
        .I3(valid_reg_reg_0),
        .I4(\i_no_async_controls.output_reg[11] [2]),
        .I5(full),
        .O(CE));
  LUT2 #(
    .INIT(4'h8)) 
    i_synth_i_2
       (.I0(Q[31]),
        .I1(\i_no_async_controls.output_reg[11] [1]),
        .O(E));
  LUT3 #(
    .INIT(8'h04)) 
    i_synth_i_2__1
       (.I0(Q[31]),
        .I1(\i_no_async_controls.output_reg[11] [1]),
        .I2(Q[26]),
        .O(\data_reg_reg[31]_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    i_synth_i_2__2
       (.I0(Q[31]),
        .I1(\i_no_async_controls.output_reg[11] [1]),
        .I2(Q[26]),
        .O(LOAD));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT4 #(
    .INIT(16'hFFD7)) 
    i_synth_i_3__0
       (.I0(sb2_s_axis_tvalid),
        .I1(current_state[2]),
        .I2(current_state[0]),
        .I3(current_state[1]),
        .O(valid_reg_reg_0));
  LUT6 #(
    .INIT(64'hBBBBBABB88888A88)) 
    \rm_id_o[0]_i_1 
       (.I0(sb2_rm_id),
        .I1(\data_reg_reg[34]_0 ),
        .I2(\rm_id_o_reg[0]_0 ),
        .I3(Q[32]),
        .I4(\rm_id_o_reg[0] ),
        .I5(\rm_id_o_reg[0]_1 ),
        .O(\data_reg_reg[36]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    valid_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(valid_reg_reg_1),
        .Q(sb2_s_axis_tvalid),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "c_counter_binary_v12_0_14" *) 
module dfx_controller_setup_dfx_controller_0_0_c_counter_binary_v12_0_14
   (Q,
    E,
    \FSM_onehot_current_state_reg[5] ,
    \FSM_onehot_current_state_reg[3] ,
    clk,
    SS,
    \i_no_async_controls.output_reg[5] ,
    \i_no_async_controls.output_reg[5]_0 ,
    \FSM_onehot_current_state_reg[0] ,
    counter_is_zero_same_run,
    \FSM_onehot_current_state_reg[0]_0 ,
    THRESH0,
    full,
    \i_no_async_controls.output_reg[5]_1 ,
    tlast_seen);
  output [4:0]Q;
  output [0:0]E;
  output \FSM_onehot_current_state_reg[5] ;
  output \FSM_onehot_current_state_reg[3] ;
  input clk;
  input [0:0]SS;
  input [5:0]\i_no_async_controls.output_reg[5] ;
  input [4:0]\i_no_async_controls.output_reg[5]_0 ;
  input \FSM_onehot_current_state_reg[0] ;
  input counter_is_zero_same_run;
  input \FSM_onehot_current_state_reg[0]_0 ;
  input THRESH0;
  input full;
  input \i_no_async_controls.output_reg[5]_1 ;
  input tlast_seen;

  wire [0:0]E;
  wire \FSM_onehot_current_state[7]_i_3_n_0 ;
  wire \FSM_onehot_current_state_reg[0] ;
  wire \FSM_onehot_current_state_reg[0]_0 ;
  wire \FSM_onehot_current_state_reg[3] ;
  wire \FSM_onehot_current_state_reg[5] ;
  wire [4:0]Q;
  wire [0:0]SS;
  wire THRESH0;
  wire ce2_out;
  wire clk;
  wire counter_is_one_table;
  wire counter_is_zero_same_run;
  wire full;
  wire [5:0]\i_no_async_controls.output_reg[5] ;
  wire [4:0]\i_no_async_controls.output_reg[5]_0 ;
  wire \i_no_async_controls.output_reg[5]_1 ;
  wire tlast_seen;

  LUT5 #(
    .INIT(32'hFFFFFF40)) 
    \FSM_onehot_current_state[7]_i_1 
       (.I0(\FSM_onehot_current_state_reg[0] ),
        .I1(counter_is_zero_same_run),
        .I2(\i_no_async_controls.output_reg[5] [4]),
        .I3(\FSM_onehot_current_state[7]_i_3_n_0 ),
        .I4(\FSM_onehot_current_state_reg[0]_0 ),
        .O(E));
  LUT6 #(
    .INIT(64'h080808080F080808)) 
    \FSM_onehot_current_state[7]_i_3 
       (.I0(\i_no_async_controls.output_reg[5] [5]),
        .I1(counter_is_one_table),
        .I2(\FSM_onehot_current_state_reg[5] ),
        .I3(\i_no_async_controls.output_reg[5] [3]),
        .I4(THRESH0),
        .I5(full),
        .O(\FSM_onehot_current_state[7]_i_3_n_0 ));
  (* C_AINIT_VAL = "0" *) 
  (* C_CE_OVERRIDES_SYNC = "0" *) 
  (* C_FB_LATENCY = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_SCLR = "1" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "0" *) 
  (* C_LATENCY = "1" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_WIDTH = "5" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* c_count_by = "1" *) 
  (* c_count_mode = "1" *) 
  (* c_count_to = "1" *) 
  (* c_has_load = "1" *) 
  (* c_has_thresh0 = "1" *) 
  (* c_load_low = "0" *) 
  (* c_restrict_count = "0" *) 
  (* c_thresh0_value = "1" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  dfx_controller_setup_dfx_controller_0_0_c_counter_binary_v12_0_14_viv i_synth
       (.CE(ce2_out),
        .CLK(clk),
        .L(\i_no_async_controls.output_reg[5]_0 ),
        .LOAD(\i_no_async_controls.output_reg[5] [0]),
        .Q(Q),
        .SCLR(SS),
        .SINIT(1'b0),
        .SSET(1'b0),
        .THRESH0(counter_is_one_table),
        .UP(1'b1));
  LUT4 #(
    .INIT(16'hAABA)) 
    i_synth_i_1__2
       (.I0(\i_no_async_controls.output_reg[5] [0]),
        .I1(\FSM_onehot_current_state_reg[5] ),
        .I2(\i_no_async_controls.output_reg[5] [5]),
        .I3(counter_is_one_table),
        .O(ce2_out));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEE0C)) 
    i_synth_i_2__0
       (.I0(\i_no_async_controls.output_reg[5] [3]),
        .I1(\i_no_async_controls.output_reg[5] [4]),
        .I2(counter_is_zero_same_run),
        .I3(full),
        .I4(\FSM_onehot_current_state_reg[3] ),
        .I5(\i_no_async_controls.output_reg[5]_1 ),
        .O(\FSM_onehot_current_state_reg[5] ));
  LUT3 #(
    .INIT(8'hEA)) 
    i_synth_i_3__1
       (.I0(\i_no_async_controls.output_reg[5] [2]),
        .I1(\i_no_async_controls.output_reg[5] [1]),
        .I2(tlast_seen),
        .O(\FSM_onehot_current_state_reg[3] ));
endmodule

(* ORIG_REF_NAME = "c_counter_binary_v12_0_14" *) 
module dfx_controller_setup_dfx_controller_0_0_c_counter_binary_v12_0_14__parameterized0
   (\FSM_onehot_current_state_reg[6] ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ,
    clk,
    SS,
    LOAD,
    \i_no_async_controls.output_reg[11] ,
    Q,
    counter_is_zero_same_run,
    reset,
    full,
    \GEN_OPT_LVL_1.same_run_counter_block.counter_is_zero_same_run_reg ,
    i_synth_i_3_0,
    tlast_sent);
  output \FSM_onehot_current_state_reg[6] ;
  output \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  input clk;
  input [0:0]SS;
  input LOAD;
  input [12:0]\i_no_async_controls.output_reg[11] ;
  input [4:0]Q;
  input counter_is_zero_same_run;
  input reset;
  input full;
  input \GEN_OPT_LVL_1.same_run_counter_block.counter_is_zero_same_run_reg ;
  input i_synth_i_3_0;
  input tlast_sent;

  wire \FSM_onehot_current_state_reg[6] ;
  wire \GEN_OPT_LVL_1.same_run_counter_block.counter_is_zero_same_run_reg ;
  wire LOAD;
  wire [4:0]Q;
  wire [0:0]SS;
  wire clk;
  wire counter_is_zero_same_run;
  wire full;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  wire [12:0]\i_no_async_controls.output_reg[11] ;
  wire i_synth_i_1__1_n_0;
  wire i_synth_i_3_0;
  wire i_synth_i_4_n_0;
  wire i_synth_n_0;
  wire reset;
  wire tlast_sent;
  wire [10:0]NLW_i_synth_Q_UNCONNECTED;

  LUT6 #(
    .INIT(64'h00000000FF400000)) 
    \GEN_OPT_LVL_1.same_run_counter_block.counter_is_zero_same_run_i_1 
       (.I0(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ),
        .I1(Q[4]),
        .I2(i_synth_n_0),
        .I3(counter_is_zero_same_run),
        .I4(reset),
        .I5(LOAD),
        .O(\FSM_onehot_current_state_reg[6] ));
  (* C_AINIT_VAL = "0" *) 
  (* C_CE_OVERRIDES_SYNC = "0" *) 
  (* C_FB_LATENCY = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "1" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "0" *) 
  (* C_LATENCY = "1" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "F" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_WIDTH = "11" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* c_count_by = "1" *) 
  (* c_count_mode = "1" *) 
  (* c_count_to = "1" *) 
  (* c_has_load = "1" *) 
  (* c_has_thresh0 = "1" *) 
  (* c_load_low = "0" *) 
  (* c_restrict_count = "0" *) 
  (* c_thresh0_value = "1" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  dfx_controller_setup_dfx_controller_0_0_c_counter_binary_v12_0_14_viv__parameterized1 i_synth
       (.CE(i_synth_i_1__1_n_0),
        .CLK(clk),
        .L(\i_no_async_controls.output_reg[11] [10:0]),
        .LOAD(LOAD),
        .Q(NLW_i_synth_Q_UNCONNECTED[10:0]),
        .SCLR(1'b0),
        .SINIT(SS),
        .SSET(1'b0),
        .THRESH0(i_synth_n_0),
        .UP(1'b1));
  LUT5 #(
    .INIT(32'h0808FF08)) 
    i_synth_i_1__1
       (.I0(\i_no_async_controls.output_reg[11] [11]),
        .I1(Q[2]),
        .I2(\i_no_async_controls.output_reg[11] [12]),
        .I3(Q[4]),
        .I4(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ),
        .O(i_synth_i_1__1_n_0));
  LUT4 #(
    .INIT(16'hBABB)) 
    i_synth_i_3
       (.I0(full),
        .I1(i_synth_i_4_n_0),
        .I2(\GEN_OPT_LVL_1.same_run_counter_block.counter_is_zero_same_run_reg ),
        .I3(Q[3]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ));
  LUT5 #(
    .INIT(32'hFFFF44F4)) 
    i_synth_i_4
       (.I0(i_synth_i_3_0),
        .I1(Q[4]),
        .I2(Q[0]),
        .I3(tlast_sent),
        .I4(Q[1]),
        .O(i_synth_i_4_n_0));
endmodule

(* ORIG_REF_NAME = "c_counter_binary_v12_0_14" *) 
module dfx_controller_setup_dfx_controller_0_0_c_counter_binary_v12_0_14__parameterized0_29
   (\FSM_onehot_current_state_reg[3] ,
    clk,
    SS,
    E,
    \i_no_async_controls.output_reg[11] ,
    Q,
    full,
    counter_is_zero_table_run,
    reset);
  output \FSM_onehot_current_state_reg[3] ;
  input clk;
  input [0:0]SS;
  input [0:0]E;
  input [11:0]\i_no_async_controls.output_reg[11] ;
  input [1:0]Q;
  input full;
  input counter_is_zero_table_run;
  input reset;

  wire [0:0]E;
  wire \FSM_onehot_current_state_reg[3] ;
  wire [1:0]Q;
  wire [0:0]SS;
  wire ce0_out;
  wire clk;
  wire counter_at_1;
  wire counter_is_zero_table_run;
  wire full;
  wire [11:0]\i_no_async_controls.output_reg[11] ;
  wire reset;
  wire [10:0]NLW_i_synth_Q_UNCONNECTED;

  LUT6 #(
    .INIT(64'h00000000FF200000)) 
    \GEN_OPT_LVL_1.table_run_counter_block.counter_is_zero_table_run_i_1 
       (.I0(Q[0]),
        .I1(full),
        .I2(counter_at_1),
        .I3(counter_is_zero_table_run),
        .I4(reset),
        .I5(E),
        .O(\FSM_onehot_current_state_reg[3] ));
  (* C_AINIT_VAL = "0" *) 
  (* C_CE_OVERRIDES_SYNC = "0" *) 
  (* C_FB_LATENCY = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "1" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "0" *) 
  (* C_LATENCY = "1" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "F" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_WIDTH = "11" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* c_count_by = "1" *) 
  (* c_count_mode = "1" *) 
  (* c_count_to = "1" *) 
  (* c_has_load = "1" *) 
  (* c_has_thresh0 = "1" *) 
  (* c_load_low = "0" *) 
  (* c_restrict_count = "0" *) 
  (* c_thresh0_value = "1" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  dfx_controller_setup_dfx_controller_0_0_c_counter_binary_v12_0_14_viv__parameterized1__1 i_synth
       (.CE(ce0_out),
        .CLK(clk),
        .L(\i_no_async_controls.output_reg[11] [10:0]),
        .LOAD(E),
        .Q(NLW_i_synth_Q_UNCONNECTED[10:0]),
        .SCLR(1'b0),
        .SINIT(SS),
        .SSET(1'b0),
        .THRESH0(counter_at_1),
        .UP(1'b1));
  LUT4 #(
    .INIT(16'h8F88)) 
    i_synth_i_1
       (.I0(Q[1]),
        .I1(\i_no_async_controls.output_reg[11] [11]),
        .I2(full),
        .I3(Q[0]),
        .O(ce0_out));
endmodule

(* ORIG_REF_NAME = "c_counter_binary_v12_0_14" *) 
module dfx_controller_setup_dfx_controller_0_0_c_counter_binary_v12_0_14__parameterized1
   (THRESH0,
    tlast_sent_reg,
    tlast_out_cmb,
    bad_size_error_seen_reg,
    clk,
    CE,
    SS,
    \i_no_async_controls.output_reg[11] ,
    bad_size_error_seen_reg_0,
    tlast_sent,
    tlast_sent_reg_0,
    reset,
    Q,
    bad_size_error_seen_reg_1,
    tlast_out_reg,
    tlast_out_reg_0,
    tlast_seen,
    counter_is_zero_table_run,
    bad_size_error_seen_reg_2,
    bad_size_error_seen_reg_3,
    bad_size_error_seen_reg_4);
  output THRESH0;
  output tlast_sent_reg;
  output tlast_out_cmb;
  output bad_size_error_seen_reg;
  input clk;
  input CE;
  input [0:0]SS;
  input \i_no_async_controls.output_reg[11] ;
  input [12:0]bad_size_error_seen_reg_0;
  input tlast_sent;
  input tlast_sent_reg_0;
  input reset;
  input [4:0]Q;
  input bad_size_error_seen_reg_1;
  input tlast_out_reg;
  input tlast_out_reg_0;
  input tlast_seen;
  input counter_is_zero_table_run;
  input bad_size_error_seen_reg_2;
  input bad_size_error_seen_reg_3;
  input bad_size_error_seen_reg_4;

  wire CE;
  wire [4:0]Q;
  wire [0:0]SS;
  wire THRESH0;
  wire bad_size_error_seen_i_2_n_0;
  wire bad_size_error_seen_reg;
  wire [12:0]bad_size_error_seen_reg_0;
  wire bad_size_error_seen_reg_1;
  wire bad_size_error_seen_reg_2;
  wire bad_size_error_seen_reg_3;
  wire bad_size_error_seen_reg_4;
  wire clk;
  wire counter_is_zero_table_run;
  wire \i_no_async_controls.output_reg[11] ;
  wire reset;
  wire tlast_out_cmb;
  wire tlast_out_i_2_n_0;
  wire tlast_out_i_4_n_0;
  wire tlast_out_reg;
  wire tlast_out_reg_0;
  wire tlast_seen;
  wire tlast_sent;
  wire tlast_sent_reg;
  wire tlast_sent_reg_0;
  wire [10:0]NLW_i_synth_Q_UNCONNECTED;

  LUT6 #(
    .INIT(64'h00000000AAAAAAEA)) 
    bad_size_error_seen_i_1
       (.I0(bad_size_error_seen_reg_2),
        .I1(bad_size_error_seen_reg_3),
        .I2(bad_size_error_seen_reg_0[12]),
        .I3(bad_size_error_seen_reg_1),
        .I4(bad_size_error_seen_i_2_n_0),
        .I5(bad_size_error_seen_reg_4),
        .O(bad_size_error_seen_reg));
  LUT6 #(
    .INIT(64'h000D000D0000000D)) 
    bad_size_error_seen_i_2
       (.I0(Q[3]),
        .I1(THRESH0),
        .I2(Q[0]),
        .I3(Q[4]),
        .I4(Q[2]),
        .I5(bad_size_error_seen_reg_0[11]),
        .O(bad_size_error_seen_i_2_n_0));
  (* C_AINIT_VAL = "0" *) 
  (* C_CE_OVERRIDES_SYNC = "0" *) 
  (* C_FB_LATENCY = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "1" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "0" *) 
  (* C_LATENCY = "1" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "F" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_WIDTH = "11" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* c_count_by = "1" *) 
  (* c_count_mode = "1" *) 
  (* c_count_to = "1" *) 
  (* c_has_load = "1" *) 
  (* c_has_thresh0 = "1" *) 
  (* c_load_low = "0" *) 
  (* c_restrict_count = "0" *) 
  (* c_thresh0_value = "0" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  dfx_controller_setup_dfx_controller_0_0_c_counter_binary_v12_0_14_viv__parameterized3 i_synth
       (.CE(CE),
        .CLK(clk),
        .L(bad_size_error_seen_reg_0[10:0]),
        .LOAD(\i_no_async_controls.output_reg[11] ),
        .Q(NLW_i_synth_Q_UNCONNECTED[10:0]),
        .SCLR(1'b0),
        .SINIT(SS),
        .SSET(1'b0),
        .THRESH0(THRESH0),
        .UP(1'b1));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT1 #(
    .INIT(2'h1)) 
    tlast_out_i_1
       (.I0(tlast_out_i_2_n_0),
        .O(tlast_out_cmb));
  LUT6 #(
    .INIT(64'h0003000B00030F0F)) 
    tlast_out_i_2
       (.I0(bad_size_error_seen_reg_1),
        .I1(tlast_out_reg),
        .I2(tlast_out_i_4_n_0),
        .I3(tlast_out_reg_0),
        .I4(tlast_seen),
        .I5(bad_size_error_seen_reg_0[12]),
        .O(tlast_out_i_2_n_0));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    tlast_out_i_4
       (.I0(Q[1]),
        .I1(tlast_seen),
        .I2(counter_is_zero_table_run),
        .I3(Q[3]),
        .I4(bad_size_error_seen_reg_0[12]),
        .I5(THRESH0),
        .O(tlast_out_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT5 #(
    .INIT(32'h0000AB00)) 
    tlast_sent_i_1
       (.I0(tlast_sent),
        .I1(tlast_sent_reg_0),
        .I2(tlast_out_i_2_n_0),
        .I3(reset),
        .I4(Q[0]),
        .O(tlast_sent_reg));
endmodule

(* ORIG_REF_NAME = "carry_chain" *) 
module dfx_controller_setup_dfx_controller_0_0_carry_chain
   (\CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_0 ,
    CARRYS_OUT,
    \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_1 ,
    \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_2 ,
    \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_3 ,
    trigger_selector_valid_out,
    fifo_not_full,
    current_state,
    clk);
  output \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_0 ;
  output [0:0]CARRYS_OUT;
  output \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_1 ;
  input \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_2 ;
  input \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_3 ;
  input trigger_selector_valid_out;
  input fifo_not_full;
  input [1:0]current_state;
  input clk;

  wire [0:0]CARRYS_OUT;
  wire \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_0 ;
  wire \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_1 ;
  wire \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_2 ;
  wire \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_3 ;
  wire O;
  wire all_zero;
  wire clk;
  wire [1:0]current_state;
  wire fifo_not_full;
  wire trigger_selector_valid_out;
  wire [3:1]\NLW_CHAIN_GEN[0].C_MUX.CARRY_MUX_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_CHAIN_GEN[0].C_MUX.CARRY_MUX_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_CHAIN_GEN[0].C_MUX.CARRY_MUX_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_CHAIN_GEN[0].C_MUX.CARRY_MUX_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD 
       (.C(clk),
        .CE(1'b1),
        .D(O),
        .Q(CARRYS_OUT),
        .R(1'b0));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \CHAIN_GEN[0].C_MUX.CARRY_MUX_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_CHAIN_GEN[0].C_MUX.CARRY_MUX_CARRY4_CO_UNCONNECTED [3:1],O}),
        .CYINIT(1'b1),
        .DI({\NLW_CHAIN_GEN[0].C_MUX.CARRY_MUX_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_CHAIN_GEN[0].C_MUX.CARRY_MUX_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_CHAIN_GEN[0].C_MUX.CARRY_MUX_CARRY4_S_UNCONNECTED [3:1],all_zero}));
  LUT2 #(
    .INIT(4'h1)) 
    \CHAIN_GEN[0].C_MUX.CARRY_MUX_i_1 
       (.I0(\CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_2 ),
        .I1(\CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_3 ),
        .O(all_zero));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT5 #(
    .INIT(32'h007FF000)) 
    \FSM_sequential_current_state[1]_i_1 
       (.I0(CARRYS_OUT),
        .I1(trigger_selector_valid_out),
        .I2(fifo_not_full),
        .I3(current_state[0]),
        .I4(current_state[1]),
        .O(\CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_1 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \b_trigger_id_to_one_hot.trigger_valid_prev_i_1 
       (.I0(CARRYS_OUT),
        .I1(trigger_selector_valid_out),
        .O(\CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_0 ));
endmodule

(* ORIG_REF_NAME = "decompress" *) 
module dfx_controller_setup_dfx_controller_0_0_decompress
   (SS,
    empty,
    decompress0_bad_format_error,
    bad_size_error_int,
    valid_reg1_reg,
    \rm_id_o_reg[0] ,
    \current_state_reg[1] ,
    din,
    valid_reg1_reg_0,
    reset_0,
    wr_en,
    clk,
    rd_en,
    out,
    reset,
    \GEN_OPT_LVL_0.v_counter_reg[2] ,
    E,
    D);
  output [0:0]SS;
  output empty;
  output decompress0_bad_format_error;
  output bad_size_error_int;
  output valid_reg1_reg;
  output [0:0]\rm_id_o_reg[0] ;
  output \current_state_reg[1] ;
  output [33:0]din;
  output valid_reg1_reg_0;
  output reset_0;
  output wr_en;
  input clk;
  input rd_en;
  input out;
  input reset;
  input \GEN_OPT_LVL_0.v_counter_reg[2] ;
  input [0:0]E;
  input [35:0]D;

  wire [35:0]D;
  wire [0:0]E;
  wire \GEN_OPT_LVL_0.v_counter_reg[2] ;
  wire [0:0]SS;
  wire bad_size_error_int;
  wire clk;
  wire \current_state_reg[1] ;
  wire decompress0_bad_format_error;
  wire [33:0]din;
  wire empty;
  wire out;
  wire rd_en;
  wire reset;
  wire reset_0;
  wire [0:0]\rm_id_o_reg[0] ;
  wire valid_reg1_reg;
  wire valid_reg1_reg_0;
  wire wr_en;

  dfx_controller_setup_dfx_controller_0_0_decompress_debug_sequence_collar \GEN_1.i_decompress_collar 
       (.D(D),
        .E(E),
        .\GEN_OPT_LVL_0.v_counter_reg[2]_0 (\GEN_OPT_LVL_0.v_counter_reg[2] ),
        .SR(SS),
        .bad_format_error_seen_reg(decompress0_bad_format_error),
        .bad_size_error_seen_reg(bad_size_error_int),
        .clk(clk),
        .\current_state_reg[1]_0 (\current_state_reg[1] ),
        .din(din),
        .empty(empty),
        .out(out),
        .rd_en(rd_en),
        .reset(reset),
        .reset_0(reset_0),
        .\rm_id_o_reg[0]_0 (\rm_id_o_reg[0] ),
        .valid_reg1_reg(valid_reg1_reg),
        .valid_reg1_reg_0(valid_reg1_reg_0),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "decompress_debug_sequence_collar" *) 
module dfx_controller_setup_dfx_controller_0_0_decompress_debug_sequence_collar
   (SR,
    empty,
    bad_format_error_seen_reg,
    bad_size_error_seen_reg,
    valid_reg1_reg,
    \rm_id_o_reg[0]_0 ,
    \current_state_reg[1]_0 ,
    din,
    valid_reg1_reg_0,
    reset_0,
    wr_en,
    clk,
    rd_en,
    out,
    reset,
    \GEN_OPT_LVL_0.v_counter_reg[2]_0 ,
    E,
    D);
  output [0:0]SR;
  output empty;
  output bad_format_error_seen_reg;
  output bad_size_error_seen_reg;
  output valid_reg1_reg;
  output [0:0]\rm_id_o_reg[0]_0 ;
  output \current_state_reg[1]_0 ;
  output [33:0]din;
  output valid_reg1_reg_0;
  output reset_0;
  output wr_en;
  input clk;
  input rd_en;
  input out;
  input reset;
  input \GEN_OPT_LVL_0.v_counter_reg[2]_0 ;
  input [0:0]E;
  input [35:0]D;

  wire [35:0]D;
  wire [0:0]E;
  wire \GEN_1.i_decompress_n_1 ;
  wire \GEN_1.i_decompress_n_42 ;
  wire \GEN_1.i_decompress_n_43 ;
  wire \GEN_1.i_decompress_n_46 ;
  wire \GEN_1.i_decompress_n_47 ;
  wire \GEN_1.i_decompress_n_50 ;
  wire \GEN_1.i_decompress_n_51 ;
  wire \GEN_1.i_decompress_n_52 ;
  wire \GEN_OPT_LVL_0.v_counter[1]_i_2_n_0 ;
  wire \GEN_OPT_LVL_0.v_counter[2]_i_3_n_0 ;
  wire \GEN_OPT_LVL_0.v_counter_reg[2]_0 ;
  wire [0:0]SR;
  wire bad_format_error_seen_reg;
  wire bad_size_error_seen_reg;
  wire \blk_skid_buffers.i_sb_1_n_41 ;
  wire \blk_skid_buffers.i_sb_2_n_1 ;
  wire \blk_skid_buffers.i_sb_2_n_22 ;
  wire \blk_skid_buffers.i_sb_2_n_23 ;
  wire \blk_skid_buffers.i_sb_2_n_24 ;
  wire \blk_skid_buffers.i_sb_2_n_25 ;
  wire \blk_skid_buffers.i_sb_2_n_26 ;
  wire \blk_skid_buffers.i_sb_2_n_75 ;
  wire \blk_skid_buffers.i_sb_2_n_78 ;
  wire \blk_skid_buffers.i_sb_2_n_79 ;
  wire \blk_skid_buffers.i_sb_2_n_84 ;
  wire \blk_skid_buffers.i_sb_2_n_85 ;
  wire \blk_skid_buffers.i_sb_2_n_86 ;
  wire \blk_skid_buffers.i_sb_2_n_87 ;
  wire bypass0;
  wire ce1_out;
  wire clk;
  wire [2:0]counter;
  wire counter_is_zero;
  wire [2:0]current_state;
  wire \current_state_reg[1]_0 ;
  wire [4:3]current_table_size_m1;
  wire [31:0]decompress_m_axis_tdata;
  wire decompress_m_axis_tlast;
  wire [1:1]decompress_m_axis_tuser;
  wire [33:0]din;
  wire empty;
  wire empty_0;
  wire full;
  wire handling_debug_bitstream;
  wire load_counter_for_table;
  wire [2:0]next_state;
  wire out;
  wire p_0_in32_in;
  wire rd_en;
  wire reset;
  wire reset_0;
  wire \rm_id_o[0]_i_2__0_n_0 ;
  wire [0:0]\rm_id_o_reg[0]_0 ;
  wire [36:0]sb1_dout;
  wire [38:38]sb2_din;
  wire [34:0]sb2_dout;
  wire sb2_s_axis_tvalid;
  wire [9:0]sel0;
  wire starting_difference_run;
  wire starting_table_run;
  wire [2:0]v_counter;
  wire valid_reg1_reg;
  wire valid_reg1_reg_0;
  wire wr_en;
  wire wr_en_1;

  dfx_controller_setup_dfx_controller_0_0_decompress_scheme_1 \GEN_1.i_decompress 
       (.CE(ce1_out),
        .E(starting_table_run),
        .\FSM_onehot_current_state_reg[4]_0 (\blk_skid_buffers.i_sb_2_n_84 ),
        .\FSM_onehot_current_state_reg[5]_0 (\GEN_1.i_decompress_n_42 ),
        .LOAD(\blk_skid_buffers.i_sb_2_n_87 ),
        .Q({p_0_in32_in,\GEN_1.i_decompress_n_1 ,load_counter_for_table}),
        .SS(SR),
        .bad_format_error_seen_reg_0(bad_format_error_seen_reg),
        .bad_format_error_seen_reg_1(\blk_skid_buffers.i_sb_2_n_75 ),
        .bad_size_error_seen_reg_0(bad_size_error_seen_reg),
        .bad_size_error_seen_reg_1({sb2_dout[34:26],sel0,\blk_skid_buffers.i_sb_2_n_22 ,\blk_skid_buffers.i_sb_2_n_23 ,\blk_skid_buffers.i_sb_2_n_24 ,\blk_skid_buffers.i_sb_2_n_25 ,\blk_skid_buffers.i_sb_2_n_26 ,sb2_dout[10:0]}),
        .clk(clk),
        .current_state(current_state[1]),
        .\current_state_reg[1] (\GEN_1.i_decompress_n_43 ),
        .\current_state_reg[1]_0 (\GEN_1.i_decompress_n_52 ),
        .\current_table_size_m1_reg[0]_0 (\GEN_1.i_decompress_n_50 ),
        .\current_table_size_m1_reg[2]_0 (\GEN_1.i_decompress_n_47 ),
        .\current_table_size_m1_reg[4]_0 (current_table_size_m1),
        .\data_reg_reg[34] (\GEN_1.i_decompress_n_51 ),
        .dout(decompress_m_axis_tdata),
        .empty(empty_0),
        .full(full),
        .\gen_fwft.empty_fwft_i_reg (empty),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] ({decompress_m_axis_tlast,decompress_m_axis_tuser}),
        .handling_debug_bitstream(handling_debug_bitstream),
        .handling_debug_bitstream_reg(\blk_skid_buffers.i_sb_2_n_1 ),
        .\i_no_async_controls.output_reg[11] (starting_difference_run),
        .rd_en(rd_en),
        .reset(reset),
        .reset_0(reset_0),
        .\rm_id_o_reg[0] (\blk_skid_buffers.i_sb_2_n_86 ),
        .\rm_id_o_reg[0]_0 (\GEN_OPT_LVL_0.v_counter_reg[2]_0 ),
        .sb2_s_axis_tvalid(sb2_s_axis_tvalid),
        .tlast_seen_reg_0(\blk_skid_buffers.i_sb_2_n_78 ),
        .valid_reg_reg(\GEN_1.i_decompress_n_46 ),
        .wr_en(wr_en));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_OPT_LVL_0.counter_is_zero_reg 
       (.C(clk),
        .CE(1'b1),
        .D(\blk_skid_buffers.i_sb_2_n_79 ),
        .Q(counter_is_zero),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'hA8AA)) 
    \GEN_OPT_LVL_0.v_counter[1]_i_2 
       (.I0(reset),
        .I1(current_state[2]),
        .I2(current_state[0]),
        .I3(current_state[1]),
        .O(\GEN_OPT_LVL_0.v_counter[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \GEN_OPT_LVL_0.v_counter[2]_i_3 
       (.I0(current_state[1]),
        .I1(current_state[0]),
        .I2(current_state[2]),
        .O(\GEN_OPT_LVL_0.v_counter[2]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_OPT_LVL_0.v_counter_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(v_counter[0]),
        .Q(counter[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_OPT_LVL_0.v_counter_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(v_counter[1]),
        .Q(counter[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_OPT_LVL_0.v_counter_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(v_counter[2]),
        .Q(counter[2]),
        .R(1'b0));
  dfx_controller_setup_dfx_controller_0_0_axi_skid_buffer \blk_skid_buffers.i_sb_1 
       (.D({sb2_din,sb1_dout[36],sb1_dout[34:0]}),
        .E(wr_en_1),
        .SR(SR),
        .clk(clk),
        .\data_reg0_reg[36]_0 (E),
        .\data_reg0_reg[36]_1 (D),
        .out(out),
        .reset(reset),
        .sb2_s_axis_tvalid(sb2_s_axis_tvalid),
        .valid_reg0_reg_0(\GEN_1.i_decompress_n_52 ),
        .valid_reg1_reg_0(valid_reg1_reg),
        .valid_reg1_reg_1(valid_reg1_reg_0),
        .valid_reg_reg(\blk_skid_buffers.i_sb_1_n_41 ),
        .valid_reg_reg_0(\GEN_1.i_decompress_n_43 ));
  dfx_controller_setup_dfx_controller_0_0_axi_skid_buffer_2 \blk_skid_buffers.i_sb_2 
       (.CE(ce1_out),
        .D({next_state[2],next_state[0]}),
        .E(starting_table_run),
        .\FSM_onehot_current_state_reg[4] (\blk_skid_buffers.i_sb_2_n_75 ),
        .\GEN_OPT_LVL_0.counter_is_zero_reg (\GEN_OPT_LVL_0.v_counter[2]_i_3_n_0 ),
        .\GEN_OPT_LVL_0.counter_is_zero_reg_0 (counter),
        .\GEN_OPT_LVL_0.v_counter_reg[0] (\blk_skid_buffers.i_sb_2_n_79 ),
        .\GEN_OPT_LVL_0.v_counter_reg[1] (\GEN_OPT_LVL_0.v_counter[1]_i_2_n_0 ),
        .\GEN_OPT_LVL_0.v_counter_reg[2] (\GEN_OPT_LVL_0.v_counter_reg[2]_0 ),
        .LOAD(\blk_skid_buffers.i_sb_2_n_87 ),
        .Q({sb2_dout[34:26],sel0,\blk_skid_buffers.i_sb_2_n_22 ,\blk_skid_buffers.i_sb_2_n_23 ,\blk_skid_buffers.i_sb_2_n_24 ,\blk_skid_buffers.i_sb_2_n_25 ,\blk_skid_buffers.i_sb_2_n_26 ,sb2_dout[10:0]}),
        .SR(SR),
        .bad_format_error_seen_i_2_0(\GEN_1.i_decompress_n_50 ),
        .bad_format_error_seen_i_2_1(\GEN_1.i_decompress_n_47 ),
        .bad_format_error_seen_i_5_0(current_table_size_m1),
        .bad_format_error_seen_reg(\GEN_1.i_decompress_n_42 ),
        .bypass0(bypass0),
        .clk(clk),
        .counter_is_zero(counter_is_zero),
        .current_state(current_state),
        .\current_state[2]_i_2__0_0 (empty_0),
        .\current_state_reg[0] (\GEN_1.i_decompress_n_46 ),
        .\current_state_reg[1] (\current_state_reg[1]_0 ),
        .\current_state_reg[1]_0 (\blk_skid_buffers.i_sb_2_n_86 ),
        .\data_reg_reg[1]_0 (\blk_skid_buffers.i_sb_2_n_84 ),
        .\data_reg_reg[31]_0 (starting_difference_run),
        .\data_reg_reg[34]_0 (\blk_skid_buffers.i_sb_2_n_1 ),
        .\data_reg_reg[36]_0 (\blk_skid_buffers.i_sb_2_n_85 ),
        .\data_reg_reg[38]_0 (wr_en_1),
        .\data_reg_reg[38]_1 ({sb2_din,sb1_dout[36],sb1_dout[34:0]}),
        .din(din),
        .dout(decompress_m_axis_tdata),
        .empty(empty),
        .full(full),
        .\i_no_async_controls.output_reg[11] ({p_0_in32_in,\GEN_1.i_decompress_n_1 ,load_counter_for_table}),
        .\icap_o_preswap_reg[1] ({decompress_m_axis_tlast,decompress_m_axis_tuser}),
        .reset(reset),
        .reset_0(v_counter),
        .\rm_id_o_reg[0] (\GEN_1.i_decompress_n_43 ),
        .\rm_id_o_reg[0]_0 (\rm_id_o[0]_i_2__0_n_0 ),
        .\rm_id_o_reg[0]_1 (\rm_id_o_reg[0]_0 ),
        .sb2_s_axis_tvalid(sb2_s_axis_tvalid),
        .valid_reg_reg_0(\blk_skid_buffers.i_sb_2_n_78 ),
        .valid_reg_reg_1(\blk_skid_buffers.i_sb_1_n_41 ));
  (* FSM_ENCODING = "one_hot" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_state_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(next_state[0]),
        .Q(current_state[0]),
        .R(SR));
  (* FSM_ENCODING = "one_hot" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_state_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(bypass0),
        .Q(current_state[1]),
        .R(SR));
  (* FSM_ENCODING = "one_hot" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_state_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(next_state[2]),
        .Q(current_state[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    handling_debug_bitstream_reg
       (.C(clk),
        .CE(1'b1),
        .D(\GEN_1.i_decompress_n_51 ),
        .Q(handling_debug_bitstream),
        .R(SR));
  LUT3 #(
    .INIT(8'hFB)) 
    \rm_id_o[0]_i_2__0 
       (.I0(current_state[2]),
        .I1(current_state[0]),
        .I2(current_state[1]),
        .O(\rm_id_o[0]_i_2__0_n_0 ));
  FDRE \rm_id_o_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\blk_skid_buffers.i_sb_2_n_85 ),
        .Q(\rm_id_o_reg[0]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "decompress_scheme_1" *) 
module dfx_controller_setup_dfx_controller_0_0_decompress_scheme_1
   (Q,
    full,
    dout,
    empty,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] ,
    \gen_fwft.empty_fwft_i_reg ,
    bad_format_error_seen_reg_0,
    bad_size_error_seen_reg_0,
    \FSM_onehot_current_state_reg[5]_0 ,
    \current_state_reg[1] ,
    reset_0,
    wr_en,
    valid_reg_reg,
    \current_table_size_m1_reg[2]_0 ,
    \current_table_size_m1_reg[4]_0 ,
    \current_table_size_m1_reg[0]_0 ,
    \data_reg_reg[34] ,
    \current_state_reg[1]_0 ,
    clk,
    SS,
    bad_size_error_seen_reg_1,
    E,
    LOAD,
    CE,
    \i_no_async_controls.output_reg[11] ,
    rd_en,
    reset,
    tlast_seen_reg_0,
    \rm_id_o_reg[0] ,
    current_state,
    \rm_id_o_reg[0]_0 ,
    \FSM_onehot_current_state_reg[4]_0 ,
    handling_debug_bitstream,
    sb2_s_axis_tvalid,
    handling_debug_bitstream_reg,
    bad_format_error_seen_reg_1);
  output [2:0]Q;
  output full;
  output [31:0]dout;
  output empty;
  output [1:0]\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] ;
  output \gen_fwft.empty_fwft_i_reg ;
  output bad_format_error_seen_reg_0;
  output bad_size_error_seen_reg_0;
  output \FSM_onehot_current_state_reg[5]_0 ;
  output \current_state_reg[1] ;
  output reset_0;
  output wr_en;
  output valid_reg_reg;
  output \current_table_size_m1_reg[2]_0 ;
  output [1:0]\current_table_size_m1_reg[4]_0 ;
  output \current_table_size_m1_reg[0]_0 ;
  output \data_reg_reg[34] ;
  output \current_state_reg[1]_0 ;
  input clk;
  input [0:0]SS;
  input [34:0]bad_size_error_seen_reg_1;
  input [0:0]E;
  input LOAD;
  input CE;
  input \i_no_async_controls.output_reg[11] ;
  input rd_en;
  input reset;
  input tlast_seen_reg_0;
  input \rm_id_o_reg[0] ;
  input [0:0]current_state;
  input \rm_id_o_reg[0]_0 ;
  input \FSM_onehot_current_state_reg[4]_0 ;
  input handling_debug_bitstream;
  input sb2_s_axis_tvalid;
  input handling_debug_bitstream_reg;
  input bad_format_error_seen_reg_1;

  wire CE;
  wire [0:0]E;
  wire \FSM_onehot_current_state[0]_i_1_n_0 ;
  wire \FSM_onehot_current_state[1]_i_1_n_0 ;
  wire \FSM_onehot_current_state[2]_i_1_n_0 ;
  wire \FSM_onehot_current_state[2]_i_2_n_0 ;
  wire \FSM_onehot_current_state[3]_i_1_n_0 ;
  wire \FSM_onehot_current_state[4]_i_1_n_0 ;
  wire \FSM_onehot_current_state[4]_i_2_n_0 ;
  wire \FSM_onehot_current_state[4]_i_3_n_0 ;
  wire \FSM_onehot_current_state[4]_i_4_n_0 ;
  wire \FSM_onehot_current_state[5]_i_1_n_0 ;
  wire \FSM_onehot_current_state[6]_i_1_n_0 ;
  wire \FSM_onehot_current_state[7]_i_2_n_0 ;
  wire \FSM_onehot_current_state[7]_i_4_n_0 ;
  wire \FSM_onehot_current_state[7]_i_6_n_0 ;
  wire \FSM_onehot_current_state[7]_i_7_n_0 ;
  wire \FSM_onehot_current_state_reg[4]_0 ;
  wire \FSM_onehot_current_state_reg[5]_0 ;
  wire \FSM_onehot_current_state_reg_n_0_[0] ;
  wire \GEN_OPT_LVL_1.difference_run_counter_block.counter_n_1 ;
  wire \GEN_OPT_LVL_1.difference_run_counter_block.counter_n_3 ;
  wire \GEN_OPT_LVL_1.same_run_counter_block.counter_n_0 ;
  wire \GEN_OPT_LVL_1.same_run_counter_block.counter_n_1 ;
  wire \GEN_OPT_LVL_1.table_counter_block.counter_n_5 ;
  wire \GEN_OPT_LVL_1.table_counter_block.counter_n_7 ;
  wire \GEN_OPT_LVL_1.table_run_counter_block.counter_n_0 ;
  wire LOAD;
  wire [2:0]Q;
  wire [0:0]SS;
  wire [4:0]addr;
  wire bad_format_error_seen_i_1_n_0;
  wire bad_format_error_seen_i_3_n_0;
  wire bad_format_error_seen_reg_0;
  wire bad_format_error_seen_reg_1;
  wire bad_size_error_seen_reg_0;
  wire [34:0]bad_size_error_seen_reg_1;
  wire clk;
  wire counter_is_zero_difference_run;
  wire counter_is_zero_same_run;
  wire counter_is_zero_table_run;
  wire [4:0]counter_table;
  wire [0:0]current_state;
  wire \current_state[2]_i_5_n_0 ;
  wire \current_state[2]_i_6_n_0 ;
  wire \current_state_reg[1] ;
  wire \current_state_reg[1]_0 ;
  wire [2:0]current_table_size_m1;
  wire \current_table_size_m1_reg[0]_0 ;
  wire \current_table_size_m1_reg[2]_0 ;
  wire [1:0]\current_table_size_m1_reg[4]_0 ;
  wire \data_reg_reg[34] ;
  wire [0:0]decompress_m_axis_tuser;
  wire [31:0]dout;
  wire empty;
  wire error_seen;
  wire fetch_error_seen;
  wire fetch_error_seen_i_1_n_0;
  wire fetch_error_seen_i_2__0_n_0;
  wire fetch_error_seen_i_3_n_0;
  wire first_word_sent;
  wire first_word_sent_i_1_n_0;
  wire full;
  wire \gen_fwft.empty_fwft_i_reg ;
  wire [1:0]\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] ;
  wire handling_debug_bitstream;
  wire handling_debug_bitstream_reg;
  wire \i_no_async_controls.output_reg[11] ;
  wire look_up_table;
  wire p_0_in;
  wire p_0_in1_in;
  wire p_0_in42_in;
  wire p_53_in;
  wire rd_en;
  wire reset;
  wire reset_0;
  wire \rm_id_o_reg[0] ;
  wire \rm_id_o_reg[0]_0 ;
  wire sb2_s_axis_tvalid;
  wire [31:0]tdata_out;
  wire [31:0]tdata_out0;
  wire [31:0]tdata_out_d1;
  wire tlast_out;
  wire tlast_out_cmb;
  wire tlast_out_i_3_n_0;
  wire tlast_out_i_5_n_0;
  wire tlast_seen;
  wire tlast_seen_i_1_n_0;
  wire tlast_seen_reg_0;
  wire tlast_sent;
  wire tuser_out_reg0;
  wire tvalid_out_d1;
  wire valid_reg_reg;
  wire wr_en;
  wire [0:0]xpm_flags_fifo_din;
  wire xpm_flags_fifo_full;
  wire \NLW_blk_output_fifos.data_out_fifo_almost_empty_UNCONNECTED ;
  wire \NLW_blk_output_fifos.data_out_fifo_almost_full_UNCONNECTED ;
  wire \NLW_blk_output_fifos.data_out_fifo_data_valid_UNCONNECTED ;
  wire \NLW_blk_output_fifos.data_out_fifo_dbiterr_UNCONNECTED ;
  wire \NLW_blk_output_fifos.data_out_fifo_overflow_UNCONNECTED ;
  wire \NLW_blk_output_fifos.data_out_fifo_prog_empty_UNCONNECTED ;
  wire \NLW_blk_output_fifos.data_out_fifo_prog_full_UNCONNECTED ;
  wire \NLW_blk_output_fifos.data_out_fifo_rd_rst_busy_UNCONNECTED ;
  wire \NLW_blk_output_fifos.data_out_fifo_sbiterr_UNCONNECTED ;
  wire \NLW_blk_output_fifos.data_out_fifo_underflow_UNCONNECTED ;
  wire \NLW_blk_output_fifos.data_out_fifo_wr_ack_UNCONNECTED ;
  wire \NLW_blk_output_fifos.data_out_fifo_wr_rst_busy_UNCONNECTED ;
  wire [3:0]\NLW_blk_output_fifos.data_out_fifo_rd_data_count_UNCONNECTED ;
  wire [3:0]\NLW_blk_output_fifos.data_out_fifo_wr_data_count_UNCONNECTED ;
  wire \NLW_blk_output_fifos.flags_out_fifo_almost_empty_UNCONNECTED ;
  wire \NLW_blk_output_fifos.flags_out_fifo_almost_full_UNCONNECTED ;
  wire \NLW_blk_output_fifos.flags_out_fifo_data_valid_UNCONNECTED ;
  wire \NLW_blk_output_fifos.flags_out_fifo_dbiterr_UNCONNECTED ;
  wire \NLW_blk_output_fifos.flags_out_fifo_overflow_UNCONNECTED ;
  wire \NLW_blk_output_fifos.flags_out_fifo_prog_empty_UNCONNECTED ;
  wire \NLW_blk_output_fifos.flags_out_fifo_prog_full_UNCONNECTED ;
  wire \NLW_blk_output_fifos.flags_out_fifo_rd_rst_busy_UNCONNECTED ;
  wire \NLW_blk_output_fifos.flags_out_fifo_sbiterr_UNCONNECTED ;
  wire \NLW_blk_output_fifos.flags_out_fifo_underflow_UNCONNECTED ;
  wire \NLW_blk_output_fifos.flags_out_fifo_wr_ack_UNCONNECTED ;
  wire \NLW_blk_output_fifos.flags_out_fifo_wr_rst_busy_UNCONNECTED ;
  wire [34:3]\NLW_blk_output_fifos.flags_out_fifo_dout_UNCONNECTED ;
  wire [3:0]\NLW_blk_output_fifos.flags_out_fifo_rd_data_count_UNCONNECTED ;
  wire [3:0]\NLW_blk_output_fifos.flags_out_fifo_wr_data_count_UNCONNECTED ;
  wire [1:0]NLW_look_up_table_reg_0_31_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_look_up_table_reg_0_31_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_look_up_table_reg_0_31_18_23_DOD_UNCONNECTED;
  wire [1:0]NLW_look_up_table_reg_0_31_24_29_DOD_UNCONNECTED;
  wire [1:0]NLW_look_up_table_reg_0_31_30_31_DOB_UNCONNECTED;
  wire [1:0]NLW_look_up_table_reg_0_31_30_31_DOC_UNCONNECTED;
  wire [1:0]NLW_look_up_table_reg_0_31_30_31_DOD_UNCONNECTED;
  wire [1:0]NLW_look_up_table_reg_0_31_6_11_DOD_UNCONNECTED;

  LUT6 #(
    .INIT(64'hAA88AA0088880800)) 
    \FSM_onehot_current_state[0]_i_1 
       (.I0(\FSM_onehot_current_state[4]_i_2_n_0 ),
        .I1(p_0_in1_in),
        .I2(\FSM_onehot_current_state_reg[5]_0 ),
        .I3(bad_size_error_seen_reg_1[34]),
        .I4(tlast_seen),
        .I5(Q[2]),
        .O(\FSM_onehot_current_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF80)) 
    \FSM_onehot_current_state[1]_i_1 
       (.I0(p_0_in),
        .I1(tlast_seen),
        .I2(\FSM_onehot_current_state[4]_i_2_n_0 ),
        .I3(\FSM_onehot_current_state_reg_n_0_[0] ),
        .I4(p_0_in42_in),
        .O(\FSM_onehot_current_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5555555455555555)) 
    \FSM_onehot_current_state[2]_i_1 
       (.I0(\FSM_onehot_current_state[4]_i_2_n_0 ),
        .I1(p_0_in),
        .I2(Q[2]),
        .I3(p_0_in1_in),
        .I4(Q[1]),
        .I5(\FSM_onehot_current_state[2]_i_2_n_0 ),
        .O(\FSM_onehot_current_state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_current_state[2]_i_2 
       (.I0(Q[0]),
        .I1(look_up_table),
        .O(\FSM_onehot_current_state[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000008)) 
    \FSM_onehot_current_state[3]_i_1 
       (.I0(Q[1]),
        .I1(bad_size_error_seen_reg_1[31]),
        .I2(bad_format_error_seen_reg_0),
        .I3(bad_size_error_seen_reg_0),
        .I4(fetch_error_seen),
        .O(\FSM_onehot_current_state[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAA20AA20AA20)) 
    \FSM_onehot_current_state[4]_i_1 
       (.I0(\FSM_onehot_current_state[4]_i_2_n_0 ),
        .I1(\FSM_onehot_current_state_reg[4]_0 ),
        .I2(Q[0]),
        .I3(\FSM_onehot_current_state[4]_i_3_n_0 ),
        .I4(p_0_in1_in),
        .I5(\FSM_onehot_current_state[4]_i_4_n_0 ),
        .O(\FSM_onehot_current_state[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \FSM_onehot_current_state[4]_i_2 
       (.I0(fetch_error_seen),
        .I1(bad_size_error_seen_reg_0),
        .I2(bad_format_error_seen_reg_0),
        .O(\FSM_onehot_current_state[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF44F4)) 
    \FSM_onehot_current_state[4]_i_3 
       (.I0(bad_size_error_seen_reg_1[34]),
        .I1(Q[2]),
        .I2(p_0_in),
        .I3(tlast_seen),
        .I4(look_up_table),
        .O(\FSM_onehot_current_state[4]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h51)) 
    \FSM_onehot_current_state[4]_i_4 
       (.I0(tlast_seen),
        .I1(bad_size_error_seen_reg_1[34]),
        .I2(\FSM_onehot_current_state_reg[5]_0 ),
        .O(\FSM_onehot_current_state[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \FSM_onehot_current_state[5]_i_1 
       (.I0(bad_format_error_seen_reg_0),
        .I1(bad_size_error_seen_reg_0),
        .I2(fetch_error_seen),
        .I3(bad_size_error_seen_reg_1[26]),
        .I4(Q[1]),
        .I5(bad_size_error_seen_reg_1[31]),
        .O(\FSM_onehot_current_state[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \FSM_onehot_current_state[6]_i_1 
       (.I0(bad_size_error_seen_reg_1[26]),
        .I1(Q[1]),
        .I2(bad_size_error_seen_reg_1[31]),
        .I3(bad_format_error_seen_reg_0),
        .I4(bad_size_error_seen_reg_0),
        .I5(fetch_error_seen),
        .O(\FSM_onehot_current_state[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT5 #(
    .INIT(32'h00020000)) 
    \FSM_onehot_current_state[7]_i_2 
       (.I0(\FSM_onehot_current_state_reg[4]_0 ),
        .I1(fetch_error_seen),
        .I2(bad_size_error_seen_reg_0),
        .I3(bad_format_error_seen_reg_0),
        .I4(Q[0]),
        .O(\FSM_onehot_current_state[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFCFCFFFE)) 
    \FSM_onehot_current_state[7]_i_4 
       (.I0(Q[0]),
        .I1(\FSM_onehot_current_state[2]_i_1_n_0 ),
        .I2(\FSM_onehot_current_state[7]_i_6_n_0 ),
        .I3(Q[1]),
        .I4(\FSM_onehot_current_state_reg[5]_0 ),
        .O(\FSM_onehot_current_state[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF808080)) 
    \FSM_onehot_current_state[7]_i_6 
       (.I0(tlast_seen),
        .I1(p_0_in42_in),
        .I2(tlast_sent),
        .I3(counter_is_zero_table_run),
        .I4(\FSM_onehot_current_state[7]_i_7_n_0 ),
        .I5(\FSM_onehot_current_state_reg_n_0_[0] ),
        .O(\FSM_onehot_current_state[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_current_state[7]_i_7 
       (.I0(p_0_in),
        .I1(full),
        .O(\FSM_onehot_current_state[7]_i_7_n_0 ));
  (* FSM_ENCODED_STATES = "st_load_table:10000000,st_table_run:00001000,st_same_run:01000000,st_difference_run:00100000,st_wait_for_error_flags:00000001,st_error:00000100,st_control_word:00010000,st_wait_for_data:00000010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_current_state_reg[0] 
       (.C(clk),
        .CE(\GEN_OPT_LVL_1.table_counter_block.counter_n_5 ),
        .D(\FSM_onehot_current_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_current_state_reg_n_0_[0] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "st_load_table:10000000,st_table_run:00001000,st_same_run:01000000,st_difference_run:00100000,st_wait_for_error_flags:00000001,st_error:00000100,st_control_word:00010000,st_wait_for_data:00000010" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_current_state_reg[1] 
       (.C(clk),
        .CE(\GEN_OPT_LVL_1.table_counter_block.counter_n_5 ),
        .D(\FSM_onehot_current_state[1]_i_1_n_0 ),
        .Q(Q[0]),
        .S(SS));
  (* FSM_ENCODED_STATES = "st_load_table:10000000,st_table_run:00001000,st_same_run:01000000,st_difference_run:00100000,st_wait_for_error_flags:00000001,st_error:00000100,st_control_word:00010000,st_wait_for_data:00000010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_current_state_reg[2] 
       (.C(clk),
        .CE(\GEN_OPT_LVL_1.table_counter_block.counter_n_5 ),
        .D(\FSM_onehot_current_state[2]_i_1_n_0 ),
        .Q(p_0_in42_in),
        .R(SS));
  (* FSM_ENCODED_STATES = "st_load_table:10000000,st_table_run:00001000,st_same_run:01000000,st_difference_run:00100000,st_wait_for_error_flags:00000001,st_error:00000100,st_control_word:00010000,st_wait_for_data:00000010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_current_state_reg[3] 
       (.C(clk),
        .CE(\GEN_OPT_LVL_1.table_counter_block.counter_n_5 ),
        .D(\FSM_onehot_current_state[3]_i_1_n_0 ),
        .Q(p_0_in),
        .R(SS));
  (* FSM_ENCODED_STATES = "st_load_table:10000000,st_table_run:00001000,st_same_run:01000000,st_difference_run:00100000,st_wait_for_error_flags:00000001,st_error:00000100,st_control_word:00010000,st_wait_for_data:00000010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_current_state_reg[4] 
       (.C(clk),
        .CE(\GEN_OPT_LVL_1.table_counter_block.counter_n_5 ),
        .D(\FSM_onehot_current_state[4]_i_1_n_0 ),
        .Q(Q[1]),
        .R(SS));
  (* FSM_ENCODED_STATES = "st_load_table:10000000,st_table_run:00001000,st_same_run:01000000,st_difference_run:00100000,st_wait_for_error_flags:00000001,st_error:00000100,st_control_word:00010000,st_wait_for_data:00000010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_current_state_reg[5] 
       (.C(clk),
        .CE(\GEN_OPT_LVL_1.table_counter_block.counter_n_5 ),
        .D(\FSM_onehot_current_state[5]_i_1_n_0 ),
        .Q(Q[2]),
        .R(SS));
  (* FSM_ENCODED_STATES = "st_load_table:10000000,st_table_run:00001000,st_same_run:01000000,st_difference_run:00100000,st_wait_for_error_flags:00000001,st_error:00000100,st_control_word:00010000,st_wait_for_data:00000010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_current_state_reg[6] 
       (.C(clk),
        .CE(\GEN_OPT_LVL_1.table_counter_block.counter_n_5 ),
        .D(\FSM_onehot_current_state[6]_i_1_n_0 ),
        .Q(p_0_in1_in),
        .R(SS));
  (* FSM_ENCODED_STATES = "st_load_table:10000000,st_table_run:00001000,st_same_run:01000000,st_difference_run:00100000,st_wait_for_error_flags:00000001,st_error:00000100,st_control_word:00010000,st_wait_for_data:00000010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_current_state_reg[7] 
       (.C(clk),
        .CE(\GEN_OPT_LVL_1.table_counter_block.counter_n_5 ),
        .D(\FSM_onehot_current_state[7]_i_2_n_0 ),
        .Q(look_up_table),
        .R(SS));
  dfx_controller_setup_dfx_controller_0_0_c_counter_binary_v12_0_14__parameterized1 \GEN_OPT_LVL_1.difference_run_counter_block.counter 
       (.CE(CE),
        .Q({look_up_table,Q[2:1],p_0_in,Q[0]}),
        .SS(SS),
        .THRESH0(counter_is_zero_difference_run),
        .bad_size_error_seen_reg(\GEN_OPT_LVL_1.difference_run_counter_block.counter_n_3 ),
        .bad_size_error_seen_reg_0({bad_size_error_seen_reg_1[34],bad_size_error_seen_reg_1[31],bad_size_error_seen_reg_1[10:0]}),
        .bad_size_error_seen_reg_1(\FSM_onehot_current_state_reg[5]_0 ),
        .bad_size_error_seen_reg_2(bad_size_error_seen_reg_0),
        .bad_size_error_seen_reg_3(fetch_error_seen_i_2__0_n_0),
        .bad_size_error_seen_reg_4(bad_format_error_seen_i_3_n_0),
        .clk(clk),
        .counter_is_zero_table_run(counter_is_zero_table_run),
        .\i_no_async_controls.output_reg[11] (\i_no_async_controls.output_reg[11] ),
        .reset(reset),
        .tlast_out_cmb(tlast_out_cmb),
        .tlast_out_reg(tlast_out_i_3_n_0),
        .tlast_out_reg_0(tlast_out_i_5_n_0),
        .tlast_seen(tlast_seen),
        .tlast_sent(tlast_sent),
        .tlast_sent_reg(\GEN_OPT_LVL_1.difference_run_counter_block.counter_n_1 ),
        .tlast_sent_reg_0(\GEN_OPT_LVL_1.same_run_counter_block.counter_n_1 ));
  dfx_controller_setup_dfx_controller_0_0_c_counter_binary_v12_0_14__parameterized0 \GEN_OPT_LVL_1.same_run_counter_block.counter 
       (.\FSM_onehot_current_state_reg[6] (\GEN_OPT_LVL_1.same_run_counter_block.counter_n_0 ),
        .\GEN_OPT_LVL_1.same_run_counter_block.counter_is_zero_same_run_reg (\FSM_onehot_current_state_reg[5]_0 ),
        .LOAD(LOAD),
        .Q({p_0_in1_in,Q[2:1],p_0_in,p_0_in42_in}),
        .SS(SS),
        .clk(clk),
        .counter_is_zero_same_run(counter_is_zero_same_run),
        .full(full),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg (\GEN_OPT_LVL_1.same_run_counter_block.counter_n_1 ),
        .\i_no_async_controls.output_reg[11] ({bad_size_error_seen_reg_1[31],bad_size_error_seen_reg_1[26],bad_size_error_seen_reg_1[10:0]}),
        .i_synth_i_3_0(tlast_seen_reg_0),
        .reset(reset),
        .tlast_sent(tlast_sent));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_OPT_LVL_1.same_run_counter_block.counter_is_zero_same_run_reg 
       (.C(clk),
        .CE(1'b1),
        .D(\GEN_OPT_LVL_1.same_run_counter_block.counter_n_0 ),
        .Q(counter_is_zero_same_run),
        .R(1'b0));
  dfx_controller_setup_dfx_controller_0_0_c_counter_binary_v12_0_14 \GEN_OPT_LVL_1.table_counter_block.counter 
       (.E(\GEN_OPT_LVL_1.table_counter_block.counter_n_5 ),
        .\FSM_onehot_current_state_reg[0] (\GEN_OPT_LVL_1.same_run_counter_block.counter_n_1 ),
        .\FSM_onehot_current_state_reg[0]_0 (\FSM_onehot_current_state[7]_i_4_n_0 ),
        .\FSM_onehot_current_state_reg[3] (\GEN_OPT_LVL_1.table_counter_block.counter_n_7 ),
        .\FSM_onehot_current_state_reg[5] (\FSM_onehot_current_state_reg[5]_0 ),
        .Q(counter_table),
        .SS(SS),
        .THRESH0(counter_is_zero_difference_run),
        .clk(clk),
        .counter_is_zero_same_run(counter_is_zero_same_run),
        .full(full),
        .\i_no_async_controls.output_reg[5] ({look_up_table,p_0_in1_in,Q[2],p_0_in,p_0_in42_in,Q[0]}),
        .\i_no_async_controls.output_reg[5]_0 (bad_size_error_seen_reg_1[4:0]),
        .\i_no_async_controls.output_reg[5]_1 (tlast_seen_reg_0),
        .tlast_seen(tlast_seen));
  dfx_controller_setup_dfx_controller_0_0_c_counter_binary_v12_0_14__parameterized0_29 \GEN_OPT_LVL_1.table_run_counter_block.counter 
       (.E(E),
        .\FSM_onehot_current_state_reg[3] (\GEN_OPT_LVL_1.table_run_counter_block.counter_n_0 ),
        .Q({Q[1],p_0_in}),
        .SS(SS),
        .clk(clk),
        .counter_is_zero_table_run(counter_is_zero_table_run),
        .full(full),
        .\i_no_async_controls.output_reg[11] ({bad_size_error_seen_reg_1[31],bad_size_error_seen_reg_1[10:0]}),
        .reset(reset));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_OPT_LVL_1.table_run_counter_block.counter_is_zero_table_run_reg 
       (.C(clk),
        .CE(1'b1),
        .D(\GEN_OPT_LVL_1.table_run_counter_block.counter_n_0 ),
        .Q(counter_is_zero_table_run),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[0] 
       (.C(clk),
        .CE(E),
        .D(bad_size_error_seen_reg_1[26]),
        .Q(addr[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[1] 
       (.C(clk),
        .CE(E),
        .D(bad_size_error_seen_reg_1[27]),
        .Q(addr[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[2] 
       (.C(clk),
        .CE(E),
        .D(bad_size_error_seen_reg_1[28]),
        .Q(addr[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[3] 
       (.C(clk),
        .CE(E),
        .D(bad_size_error_seen_reg_1[29]),
        .Q(addr[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[4] 
       (.C(clk),
        .CE(E),
        .D(bad_size_error_seen_reg_1[30]),
        .Q(addr[4]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h00AE)) 
    bad_format_error_seen_i_1
       (.I0(bad_format_error_seen_reg_0),
        .I1(fetch_error_seen_i_2__0_n_0),
        .I2(bad_format_error_seen_reg_1),
        .I3(bad_format_error_seen_i_3_n_0),
        .O(bad_format_error_seen_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT4 #(
    .INIT(16'h40FF)) 
    bad_format_error_seen_i_3
       (.I0(xpm_flags_fifo_full),
        .I1(tvalid_out_d1),
        .I2(tlast_out),
        .I3(reset),
        .O(bad_format_error_seen_i_3_n_0));
  LUT6 #(
    .INIT(64'hB0FBB0FBFFFFB0FB)) 
    bad_format_error_seen_i_8
       (.I0(current_table_size_m1[0]),
        .I1(bad_size_error_seen_reg_1[26]),
        .I2(current_table_size_m1[1]),
        .I3(bad_size_error_seen_reg_1[27]),
        .I4(current_table_size_m1[2]),
        .I5(bad_size_error_seen_reg_1[28]),
        .O(\current_table_size_m1_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    bad_format_error_seen_i_9
       (.I0(current_table_size_m1[2]),
        .I1(bad_size_error_seen_reg_1[28]),
        .I2(\current_table_size_m1_reg[4]_0 [0]),
        .I3(bad_size_error_seen_reg_1[29]),
        .O(\current_table_size_m1_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    bad_format_error_seen_reg
       (.C(clk),
        .CE(1'b1),
        .D(bad_format_error_seen_i_1_n_0),
        .Q(bad_format_error_seen_reg_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    bad_size_error_seen_reg
       (.C(clk),
        .CE(1'b1),
        .D(\GEN_OPT_LVL_1.difference_run_counter_block.counter_n_3 ),
        .Q(bad_size_error_seen_reg_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8800000080808080)) 
    \blk_id_fifo.xpm_fifo_sync_inst_i_1 
       (.I0(wr_en),
        .I1(reset),
        .I2(decompress_m_axis_tuser),
        .I3(current_state),
        .I4(bad_size_error_seen_reg_1[32]),
        .I5(handling_debug_bitstream),
        .O(reset_0));
  (* CASCADE_HEIGHT = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_SYNC = "16'b0000011100000111" *) 
  (* FIFO_MEMORY_TYPE = "distributed" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PROG_EMPTY_THRESH = "7" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* P_COMMON_CLOCK = "1" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "1" *) 
  (* P_READ_MODE = "1" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "32" *) 
  (* READ_MODE = "fwft" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "32" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* XPM_MODULE = "TRUE" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_sync \blk_output_fifos.data_out_fifo 
       (.almost_empty(\NLW_blk_output_fifos.data_out_fifo_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_blk_output_fifos.data_out_fifo_almost_full_UNCONNECTED ),
        .data_valid(\NLW_blk_output_fifos.data_out_fifo_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_blk_output_fifos.data_out_fifo_dbiterr_UNCONNECTED ),
        .din(tdata_out),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(\NLW_blk_output_fifos.data_out_fifo_overflow_UNCONNECTED ),
        .prog_empty(\NLW_blk_output_fifos.data_out_fifo_prog_empty_UNCONNECTED ),
        .prog_full(\NLW_blk_output_fifos.data_out_fifo_prog_full_UNCONNECTED ),
        .rd_data_count(\NLW_blk_output_fifos.data_out_fifo_rd_data_count_UNCONNECTED [3:0]),
        .rd_en(rd_en),
        .rd_rst_busy(\NLW_blk_output_fifos.data_out_fifo_rd_rst_busy_UNCONNECTED ),
        .rst(SS),
        .sbiterr(\NLW_blk_output_fifos.data_out_fifo_sbiterr_UNCONNECTED ),
        .sleep(1'b0),
        .underflow(\NLW_blk_output_fifos.data_out_fifo_underflow_UNCONNECTED ),
        .wr_ack(\NLW_blk_output_fifos.data_out_fifo_wr_ack_UNCONNECTED ),
        .wr_clk(clk),
        .wr_data_count(\NLW_blk_output_fifos.data_out_fifo_wr_data_count_UNCONNECTED [3:0]),
        .wr_en(p_53_in),
        .wr_rst_busy(\NLW_blk_output_fifos.data_out_fifo_wr_rst_busy_UNCONNECTED ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \blk_output_fifos.data_out_fifo_i_1 
       (.I0(\GEN_OPT_LVL_1.same_run_counter_block.counter_n_1 ),
        .O(p_53_in));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_10 
       (.I0(tdata_out0[23]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[23]),
        .O(tdata_out[23]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_11 
       (.I0(tdata_out0[22]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[22]),
        .O(tdata_out[22]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_12 
       (.I0(tdata_out0[21]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[21]),
        .O(tdata_out[21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_13 
       (.I0(tdata_out0[20]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[20]),
        .O(tdata_out[20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_14 
       (.I0(tdata_out0[19]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[19]),
        .O(tdata_out[19]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_15 
       (.I0(tdata_out0[18]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[18]),
        .O(tdata_out[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_16 
       (.I0(tdata_out0[17]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[17]),
        .O(tdata_out[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_17 
       (.I0(tdata_out0[16]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[16]),
        .O(tdata_out[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_18 
       (.I0(tdata_out0[15]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[15]),
        .O(tdata_out[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_19 
       (.I0(tdata_out0[14]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[14]),
        .O(tdata_out[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_2 
       (.I0(tdata_out0[31]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[31]),
        .O(tdata_out[31]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_20 
       (.I0(tdata_out0[13]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[13]),
        .O(tdata_out[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_21 
       (.I0(tdata_out0[12]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[12]),
        .O(tdata_out[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_22 
       (.I0(tdata_out0[11]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[11]),
        .O(tdata_out[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_23 
       (.I0(tdata_out0[10]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[10]),
        .O(tdata_out[10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_24 
       (.I0(tdata_out0[9]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[9]),
        .O(tdata_out[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_25 
       (.I0(tdata_out0[8]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[8]),
        .O(tdata_out[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_26 
       (.I0(tdata_out0[7]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[7]),
        .O(tdata_out[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_27 
       (.I0(tdata_out0[6]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[6]),
        .O(tdata_out[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_28 
       (.I0(tdata_out0[5]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[5]),
        .O(tdata_out[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_29 
       (.I0(tdata_out0[4]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[4]),
        .O(tdata_out[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_3 
       (.I0(tdata_out0[30]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[30]),
        .O(tdata_out[30]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_30 
       (.I0(tdata_out0[3]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[3]),
        .O(tdata_out[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_31 
       (.I0(tdata_out0[2]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[2]),
        .O(tdata_out[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_32 
       (.I0(tdata_out0[1]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[1]),
        .O(tdata_out[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_33 
       (.I0(tdata_out0[0]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[0]),
        .O(tdata_out[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_4 
       (.I0(tdata_out0[29]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[29]),
        .O(tdata_out[29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_5 
       (.I0(tdata_out0[28]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[28]),
        .O(tdata_out[28]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_6 
       (.I0(tdata_out0[27]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[27]),
        .O(tdata_out[27]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_7 
       (.I0(tdata_out0[26]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[26]),
        .O(tdata_out[26]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_8 
       (.I0(tdata_out0[25]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[25]),
        .O(tdata_out[25]));
  LUT3 #(
    .INIT(8'hB8)) 
    \blk_output_fifos.data_out_fifo_i_9 
       (.I0(tdata_out0[24]),
        .I1(p_0_in),
        .I2(bad_size_error_seen_reg_1[24]),
        .O(tdata_out[24]));
  (* CASCADE_HEIGHT = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_SYNC = "16'b0000011100000111" *) 
  (* FIFO_MEMORY_TYPE = "distributed" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PROG_EMPTY_THRESH = "7" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* P_COMMON_CLOCK = "1" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "1" *) 
  (* P_READ_MODE = "1" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "35" *) 
  (* READ_MODE = "fwft" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "35" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* XPM_MODULE = "TRUE" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_sync__parameterized1 \blk_output_fifos.flags_out_fifo 
       (.almost_empty(\NLW_blk_output_fifos.flags_out_fifo_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_blk_output_fifos.flags_out_fifo_almost_full_UNCONNECTED ),
        .data_valid(\NLW_blk_output_fifos.flags_out_fifo_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_blk_output_fifos.flags_out_fifo_dbiterr_UNCONNECTED ),
        .din({tdata_out_d1,tlast_out,error_seen,xpm_flags_fifo_din}),
        .dout({\NLW_blk_output_fifos.flags_out_fifo_dout_UNCONNECTED [34:3],\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] ,decompress_m_axis_tuser}),
        .empty(\gen_fwft.empty_fwft_i_reg ),
        .full(xpm_flags_fifo_full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(\NLW_blk_output_fifos.flags_out_fifo_overflow_UNCONNECTED ),
        .prog_empty(\NLW_blk_output_fifos.flags_out_fifo_prog_empty_UNCONNECTED ),
        .prog_full(\NLW_blk_output_fifos.flags_out_fifo_prog_full_UNCONNECTED ),
        .rd_data_count(\NLW_blk_output_fifos.flags_out_fifo_rd_data_count_UNCONNECTED [3:0]),
        .rd_en(rd_en),
        .rd_rst_busy(\NLW_blk_output_fifos.flags_out_fifo_rd_rst_busy_UNCONNECTED ),
        .rst(SS),
        .sbiterr(\NLW_blk_output_fifos.flags_out_fifo_sbiterr_UNCONNECTED ),
        .sleep(1'b0),
        .underflow(\NLW_blk_output_fifos.flags_out_fifo_underflow_UNCONNECTED ),
        .wr_ack(\NLW_blk_output_fifos.flags_out_fifo_wr_ack_UNCONNECTED ),
        .wr_clk(clk),
        .wr_data_count(\NLW_blk_output_fifos.flags_out_fifo_wr_data_count_UNCONNECTED [3:0]),
        .wr_en(tvalid_out_d1),
        .wr_rst_busy(\NLW_blk_output_fifos.flags_out_fifo_wr_rst_busy_UNCONNECTED ));
  LUT3 #(
    .INIT(8'hFE)) 
    \blk_output_fifos.flags_out_fifo_i_1 
       (.I0(bad_format_error_seen_reg_0),
        .I1(bad_size_error_seen_reg_0),
        .I2(fetch_error_seen),
        .O(error_seen));
  FDRE \blk_output_fifos.tdata_out_d1_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[0]),
        .Q(tdata_out_d1[0]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[10]),
        .Q(tdata_out_d1[10]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[11]),
        .Q(tdata_out_d1[11]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[12]),
        .Q(tdata_out_d1[12]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[13]),
        .Q(tdata_out_d1[13]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[14]),
        .Q(tdata_out_d1[14]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[15]),
        .Q(tdata_out_d1[15]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[16]),
        .Q(tdata_out_d1[16]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[17]),
        .Q(tdata_out_d1[17]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[18]),
        .Q(tdata_out_d1[18]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[19]),
        .Q(tdata_out_d1[19]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[1]),
        .Q(tdata_out_d1[1]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[20]),
        .Q(tdata_out_d1[20]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[21]),
        .Q(tdata_out_d1[21]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[22]),
        .Q(tdata_out_d1[22]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[23]),
        .Q(tdata_out_d1[23]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[24]),
        .Q(tdata_out_d1[24]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[25]),
        .Q(tdata_out_d1[25]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[26]),
        .Q(tdata_out_d1[26]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[27]),
        .Q(tdata_out_d1[27]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[28]),
        .Q(tdata_out_d1[28]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[29]),
        .Q(tdata_out_d1[29]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[2]),
        .Q(tdata_out_d1[2]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[30]),
        .Q(tdata_out_d1[30]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[31]),
        .Q(tdata_out_d1[31]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[3]),
        .Q(tdata_out_d1[3]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[4]),
        .Q(tdata_out_d1[4]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[5]),
        .Q(tdata_out_d1[5]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[6]),
        .Q(tdata_out_d1[6]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[7]),
        .Q(tdata_out_d1[7]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[8]),
        .Q(tdata_out_d1[8]),
        .R(1'b0));
  FDRE \blk_output_fifos.tdata_out_d1_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(tdata_out[9]),
        .Q(tdata_out_d1[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \blk_output_fifos.tvalid_out_d1_reg 
       (.C(clk),
        .CE(1'b1),
        .D(p_53_in),
        .Q(tvalid_out_d1),
        .R(SS));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT4 #(
    .INIT(16'h7774)) 
    \current_state[0]_i_4 
       (.I0(sb2_s_axis_tvalid),
        .I1(current_state),
        .I2(\gen_fwft.empty_fwft_i_reg ),
        .I3(empty),
        .O(valid_reg_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFEFF00FFFE)) 
    \current_state[2]_i_3__0 
       (.I0(\current_state[2]_i_5_n_0 ),
        .I1(\GEN_OPT_LVL_1.table_counter_block.counter_n_7 ),
        .I2(\current_state[2]_i_6_n_0 ),
        .I3(\rm_id_o_reg[0] ),
        .I4(current_state),
        .I5(\rm_id_o_reg[0]_0 ),
        .O(\current_state_reg[1] ));
  LUT2 #(
    .INIT(4'h2)) 
    \current_state[2]_i_5 
       (.I0(p_0_in1_in),
        .I1(counter_is_zero_same_run),
        .O(\current_state[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'hAA80)) 
    \current_state[2]_i_6 
       (.I0(full),
        .I1(counter_is_zero_same_run),
        .I2(p_0_in1_in),
        .I3(Q[2]),
        .O(\current_state[2]_i_6_n_0 ));
  FDRE \current_table_size_m1_reg[0] 
       (.C(clk),
        .CE(Q[0]),
        .D(bad_size_error_seen_reg_1[0]),
        .Q(current_table_size_m1[0]),
        .R(SS));
  FDRE \current_table_size_m1_reg[1] 
       (.C(clk),
        .CE(Q[0]),
        .D(bad_size_error_seen_reg_1[1]),
        .Q(current_table_size_m1[1]),
        .R(SS));
  FDRE \current_table_size_m1_reg[2] 
       (.C(clk),
        .CE(Q[0]),
        .D(bad_size_error_seen_reg_1[2]),
        .Q(current_table_size_m1[2]),
        .R(SS));
  FDRE \current_table_size_m1_reg[3] 
       (.C(clk),
        .CE(Q[0]),
        .D(bad_size_error_seen_reg_1[3]),
        .Q(\current_table_size_m1_reg[4]_0 [0]),
        .R(SS));
  FDRE \current_table_size_m1_reg[4] 
       (.C(clk),
        .CE(Q[0]),
        .D(bad_size_error_seen_reg_1[4]),
        .Q(\current_table_size_m1_reg[4]_0 [1]),
        .R(SS));
  LUT4 #(
    .INIT(16'hB000)) 
    \data_reg[38]_i_3 
       (.I0(\rm_id_o_reg[0]_0 ),
        .I1(current_state),
        .I2(\FSM_onehot_current_state_reg[5]_0 ),
        .I3(sb2_s_axis_tvalid),
        .O(\current_state_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT5 #(
    .INIT(32'h44440444)) 
    fetch_error_seen_i_1
       (.I0(fetch_error_seen_i_2__0_n_0),
        .I1(reset),
        .I2(tlast_out),
        .I3(tvalid_out_d1),
        .I4(xpm_flags_fifo_full),
        .O(fetch_error_seen_i_1_n_0));
  LUT5 #(
    .INIT(32'h55551151)) 
    fetch_error_seen_i_2__0
       (.I0(fetch_error_seen),
        .I1(bad_size_error_seen_reg_1[33]),
        .I2(fetch_error_seen_i_3_n_0),
        .I3(p_0_in1_in),
        .I4(tlast_seen_reg_0),
        .O(fetch_error_seen_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    fetch_error_seen_i_3
       (.I0(Q[2]),
        .I1(tlast_out_i_5_n_0),
        .I2(full),
        .I3(tlast_seen),
        .I4(p_0_in42_in),
        .I5(p_0_in),
        .O(fetch_error_seen_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    fetch_error_seen_reg
       (.C(clk),
        .CE(1'b1),
        .D(fetch_error_seen_i_1_n_0),
        .Q(fetch_error_seen),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'h53)) 
    first_word_sent_i_1
       (.I0(Q[0]),
        .I1(\GEN_OPT_LVL_1.same_run_counter_block.counter_n_1 ),
        .I2(first_word_sent),
        .O(first_word_sent_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    first_word_sent_reg
       (.C(clk),
        .CE(1'b1),
        .D(first_word_sent_i_1_n_0),
        .Q(first_word_sent),
        .R(SS));
  LUT6 #(
    .INIT(64'hFFFF757FFFFF0000)) 
    handling_debug_bitstream_i_1
       (.I0(wr_en),
        .I1(bad_size_error_seen_reg_1[34]),
        .I2(current_state),
        .I3(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] [1]),
        .I4(handling_debug_bitstream_reg),
        .I5(handling_debug_bitstream),
        .O(\data_reg_reg[34] ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT5 #(
    .INIT(32'h55010001)) 
    i_bs_fifo_i_1
       (.I0(\rm_id_o_reg[0]_0 ),
        .I1(empty),
        .I2(\gen_fwft.empty_fwft_i_reg ),
        .I3(current_state),
        .I4(sb2_s_axis_tvalid),
        .O(wr_en));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "1024" *) 
  (* RTL_RAM_NAME = "i_decompress_0/GEN_1.i_decompress_collar/GEN_1.i_decompress/look_up_table" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "5" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    look_up_table_reg_0_31_0_5
       (.ADDRA(addr),
        .ADDRB(addr),
        .ADDRC(addr),
        .ADDRD(counter_table),
        .DIA(bad_size_error_seen_reg_1[1:0]),
        .DIB(bad_size_error_seen_reg_1[3:2]),
        .DIC(bad_size_error_seen_reg_1[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(tdata_out0[1:0]),
        .DOB(tdata_out0[3:2]),
        .DOC(tdata_out0[5:4]),
        .DOD(NLW_look_up_table_reg_0_31_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(look_up_table));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "1024" *) 
  (* RTL_RAM_NAME = "i_decompress_0/GEN_1.i_decompress_collar/GEN_1.i_decompress/look_up_table" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "17" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    look_up_table_reg_0_31_12_17
       (.ADDRA(addr),
        .ADDRB(addr),
        .ADDRC(addr),
        .ADDRD(counter_table),
        .DIA(bad_size_error_seen_reg_1[13:12]),
        .DIB(bad_size_error_seen_reg_1[15:14]),
        .DIC(bad_size_error_seen_reg_1[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(tdata_out0[13:12]),
        .DOB(tdata_out0[15:14]),
        .DOC(tdata_out0[17:16]),
        .DOD(NLW_look_up_table_reg_0_31_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(look_up_table));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "1024" *) 
  (* RTL_RAM_NAME = "i_decompress_0/GEN_1.i_decompress_collar/GEN_1.i_decompress/look_up_table" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "18" *) 
  (* ram_slice_end = "23" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    look_up_table_reg_0_31_18_23
       (.ADDRA(addr),
        .ADDRB(addr),
        .ADDRC(addr),
        .ADDRD(counter_table),
        .DIA(bad_size_error_seen_reg_1[19:18]),
        .DIB(bad_size_error_seen_reg_1[21:20]),
        .DIC(bad_size_error_seen_reg_1[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(tdata_out0[19:18]),
        .DOB(tdata_out0[21:20]),
        .DOC(tdata_out0[23:22]),
        .DOD(NLW_look_up_table_reg_0_31_18_23_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(look_up_table));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "1024" *) 
  (* RTL_RAM_NAME = "i_decompress_0/GEN_1.i_decompress_collar/GEN_1.i_decompress/look_up_table" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "24" *) 
  (* ram_slice_end = "29" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    look_up_table_reg_0_31_24_29
       (.ADDRA(addr),
        .ADDRB(addr),
        .ADDRC(addr),
        .ADDRD(counter_table),
        .DIA(bad_size_error_seen_reg_1[25:24]),
        .DIB(bad_size_error_seen_reg_1[27:26]),
        .DIC(bad_size_error_seen_reg_1[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(tdata_out0[25:24]),
        .DOB(tdata_out0[27:26]),
        .DOC(tdata_out0[29:28]),
        .DOD(NLW_look_up_table_reg_0_31_24_29_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(look_up_table));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "1024" *) 
  (* RTL_RAM_NAME = "i_decompress_0/GEN_1.i_decompress_collar/GEN_1.i_decompress/look_up_table" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "30" *) 
  (* ram_slice_end = "31" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    look_up_table_reg_0_31_30_31
       (.ADDRA(addr),
        .ADDRB(addr),
        .ADDRC(addr),
        .ADDRD(counter_table),
        .DIA(bad_size_error_seen_reg_1[31:30]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(tdata_out0[31:30]),
        .DOB(NLW_look_up_table_reg_0_31_30_31_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_look_up_table_reg_0_31_30_31_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_look_up_table_reg_0_31_30_31_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(look_up_table));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "1024" *) 
  (* RTL_RAM_NAME = "i_decompress_0/GEN_1.i_decompress_collar/GEN_1.i_decompress/look_up_table" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "11" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    look_up_table_reg_0_31_6_11
       (.ADDRA(addr),
        .ADDRB(addr),
        .ADDRC(addr),
        .ADDRD(counter_table),
        .DIA(bad_size_error_seen_reg_1[7:6]),
        .DIB(bad_size_error_seen_reg_1[9:8]),
        .DIC(bad_size_error_seen_reg_1[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(tdata_out0[7:6]),
        .DOB(tdata_out0[9:8]),
        .DOC(tdata_out0[11:10]),
        .DOD(NLW_look_up_table_reg_0_31_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(look_up_table));
  LUT2 #(
    .INIT(4'h2)) 
    tlast_out_i_3
       (.I0(p_0_in42_in),
        .I1(tlast_sent),
        .O(tlast_out_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h8)) 
    tlast_out_i_5
       (.I0(counter_is_zero_same_run),
        .I1(p_0_in1_in),
        .O(tlast_out_i_5_n_0));
  FDRE tlast_out_reg
       (.C(clk),
        .CE(1'b1),
        .D(tlast_out_cmb),
        .Q(tlast_out),
        .R(SS));
  LUT6 #(
    .INIT(64'hFFDD0F0000000000)) 
    tlast_seen_i_1
       (.I0(Q[0]),
        .I1(tlast_seen_reg_0),
        .I2(\FSM_onehot_current_state_reg[5]_0 ),
        .I3(bad_size_error_seen_reg_1[34]),
        .I4(tlast_seen),
        .I5(reset),
        .O(tlast_seen_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tlast_seen_reg
       (.C(clk),
        .CE(1'b1),
        .D(tlast_seen_i_1_n_0),
        .Q(tlast_seen),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    tlast_sent_reg
       (.C(clk),
        .CE(1'b1),
        .D(\GEN_OPT_LVL_1.difference_run_counter_block.counter_n_1 ),
        .Q(tlast_sent),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \tuser_out[0]_i_1 
       (.I0(first_word_sent),
        .I1(\GEN_OPT_LVL_1.same_run_counter_block.counter_n_1 ),
        .O(tuser_out_reg0));
  FDRE \tuser_out_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(tuser_out_reg0),
        .Q(xpm_flags_fifo_din),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized1
   (vsm_VS_0_event_error,
    \current_state_reg[3] ,
    decompress_bad_size_error_flag_reg,
    \current_state_reg[2] ,
    SS,
    clk,
    \opt_has_pipe.first_q_reg[0] ,
    cp_error_flag,
    cp0_vs_id,
    p_4_in,
    Q,
    SR,
    decompress_bad_format_error_flag,
    p_3_in,
    \opt_has_pipe.first_q_reg[0]_0 );
  output vsm_VS_0_event_error;
  output \current_state_reg[3] ;
  output decompress_bad_size_error_flag_reg;
  output \current_state_reg[2] ;
  input [0:0]SS;
  input clk;
  input \opt_has_pipe.first_q_reg[0] ;
  input cp_error_flag;
  input cp0_vs_id;
  input p_4_in;
  input [3:0]Q;
  input [0:0]SR;
  input decompress_bad_format_error_flag;
  input p_3_in;
  input \opt_has_pipe.first_q_reg[0]_0 ;

  wire [3:0]Q;
  wire [0:0]SR;
  wire [0:0]SS;
  wire clk;
  wire cp0_vs_id;
  wire cp_error_flag;
  wire \current_state_reg[2] ;
  wire \current_state_reg[3] ;
  wire decompress_bad_format_error_flag;
  wire decompress_bad_size_error_flag_reg;
  wire \opt_has_pipe.first_q_reg[0] ;
  wire \opt_has_pipe.first_q_reg[0]_0 ;
  wire p_3_in;
  wire p_4_in;
  wire vsm_VS_0_event_error;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized3 i_pipe
       (.Q(Q),
        .SR(SR),
        .SS(SS),
        .clk(clk),
        .cp0_vs_id(cp0_vs_id),
        .cp_error_flag(cp_error_flag),
        .\current_state_reg[2] (\current_state_reg[2] ),
        .\current_state_reg[3] (\current_state_reg[3] ),
        .decompress_bad_format_error_flag(decompress_bad_format_error_flag),
        .decompress_bad_size_error_flag_reg(decompress_bad_size_error_flag_reg),
        .\opt_has_pipe.first_q_reg[0]_0 (\opt_has_pipe.first_q_reg[0] ),
        .\opt_has_pipe.first_q_reg[0]_1 (\opt_has_pipe.first_q_reg[0]_0 ),
        .p_3_in(p_3_in),
        .p_4_in(p_4_in),
        .vsm_VS_0_event_error(vsm_VS_0_event_error));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized10
   (rm_info_valid_vec,
    E,
    D,
    SS,
    rm_id_valid,
    clk,
    Q,
    bs_info_valid_vec,
    \reset_duration_reg[7] ,
    \reset_duration_reg[5] ,
    \reset_duration_reg[7]_0 ,
    \reset_duration_reg[5]_0 ,
    \reset_duration_reg[3] ,
    \reset_duration_reg[4] ,
    \reset_duration_reg[5]_1 ,
    \reset_duration_reg[7]_1 ,
    \reset_duration_reg[7]_2 );
  output rm_info_valid_vec;
  output [0:0]E;
  output [5:0]D;
  input [0:0]SS;
  input rm_id_valid;
  input clk;
  input [3:0]Q;
  input bs_info_valid_vec;
  input [5:0]\reset_duration_reg[7] ;
  input \reset_duration_reg[5] ;
  input [3:0]\reset_duration_reg[7]_0 ;
  input [2:0]\reset_duration_reg[5]_0 ;
  input \reset_duration_reg[3] ;
  input \reset_duration_reg[4] ;
  input \reset_duration_reg[5]_1 ;
  input \reset_duration_reg[7]_1 ;
  input \reset_duration_reg[7]_2 ;

  wire [5:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire [0:0]SS;
  wire bs_info_valid_vec;
  wire clk;
  wire \reset_duration_reg[3] ;
  wire \reset_duration_reg[4] ;
  wire \reset_duration_reg[5] ;
  wire [2:0]\reset_duration_reg[5]_0 ;
  wire \reset_duration_reg[5]_1 ;
  wire [5:0]\reset_duration_reg[7] ;
  wire [3:0]\reset_duration_reg[7]_0 ;
  wire \reset_duration_reg[7]_1 ;
  wire \reset_duration_reg[7]_2 ;
  wire rm_id_valid;
  wire rm_info_valid_vec;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized17_23 i_pipe
       (.D(D),
        .E(E),
        .Q(Q),
        .SS(SS),
        .bs_info_valid_vec(bs_info_valid_vec),
        .clk(clk),
        .\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 (rm_info_valid_vec),
        .\reset_duration_reg[3] (\reset_duration_reg[3] ),
        .\reset_duration_reg[4] (\reset_duration_reg[4] ),
        .\reset_duration_reg[5] (\reset_duration_reg[5] ),
        .\reset_duration_reg[5]_0 (\reset_duration_reg[5]_0 ),
        .\reset_duration_reg[5]_1 (\reset_duration_reg[5]_1 ),
        .\reset_duration_reg[7] (\reset_duration_reg[7] ),
        .\reset_duration_reg[7]_0 (\reset_duration_reg[7]_0 ),
        .\reset_duration_reg[7]_1 (\reset_duration_reg[7]_1 ),
        .\reset_duration_reg[7]_2 (\reset_duration_reg[7]_2 ),
        .rm_id_valid(rm_id_valid));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized10_8
   (bs_info_valid_vec,
    D,
    rm_reset_i4,
    \reset_duration_reg[6] ,
    E,
    \current_state_reg[0] ,
    SS,
    rm_info_valid_vec,
    clk,
    Q,
    \current_state_reg[1] ,
    \current_state_reg[0]_0 ,
    \current_state_reg[1]_0 ,
    \current_state_reg[3] ,
    reset,
    vsm_VS_0_rm_shutdown_ack,
    \reset_duration_reg[6]_0 ,
    \reset_duration_reg[6]_1 ,
    \reset_duration_reg[6]_2 ,
    \reset_duration_reg[6]_3 ,
    \current_state_reg[3]_0 ,
    \current_state_reg[2] ,
    \current_state_reg[3]_1 ,
    rm_reset_i_reg,
    vsm_VS_0_rm_reset);
  output bs_info_valid_vec;
  output [3:0]D;
  output rm_reset_i4;
  output [1:0]\reset_duration_reg[6] ;
  output [0:0]E;
  output \current_state_reg[0] ;
  input [0:0]SS;
  input rm_info_valid_vec;
  input clk;
  input [3:0]Q;
  input \current_state_reg[1] ;
  input \current_state_reg[0]_0 ;
  input \current_state_reg[1]_0 ;
  input \current_state_reg[3] ;
  input reset;
  input vsm_VS_0_rm_shutdown_ack;
  input [1:0]\reset_duration_reg[6]_0 ;
  input [3:0]\reset_duration_reg[6]_1 ;
  input \reset_duration_reg[6]_2 ;
  input \reset_duration_reg[6]_3 ;
  input \current_state_reg[3]_0 ;
  input \current_state_reg[2] ;
  input \current_state_reg[3]_1 ;
  input rm_reset_i_reg;
  input vsm_VS_0_rm_reset;

  wire [3:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire [0:0]SS;
  wire bs_info_valid_vec;
  wire clk;
  wire \current_state_reg[0] ;
  wire \current_state_reg[0]_0 ;
  wire \current_state_reg[1] ;
  wire \current_state_reg[1]_0 ;
  wire \current_state_reg[2] ;
  wire \current_state_reg[3] ;
  wire \current_state_reg[3]_0 ;
  wire \current_state_reg[3]_1 ;
  wire reset;
  wire [1:0]\reset_duration_reg[6] ;
  wire [1:0]\reset_duration_reg[6]_0 ;
  wire [3:0]\reset_duration_reg[6]_1 ;
  wire \reset_duration_reg[6]_2 ;
  wire \reset_duration_reg[6]_3 ;
  wire rm_info_valid_vec;
  wire rm_reset_i4;
  wire rm_reset_i_reg;
  wire vsm_VS_0_rm_reset;
  wire vsm_VS_0_rm_shutdown_ack;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized17 i_pipe
       (.D(D),
        .E(E),
        .Q(Q),
        .SS(SS),
        .clk(clk),
        .\current_state_reg[0] (\current_state_reg[0] ),
        .\current_state_reg[0]_0 (\current_state_reg[0]_0 ),
        .\current_state_reg[1] (\current_state_reg[1] ),
        .\current_state_reg[1]_0 (\current_state_reg[1]_0 ),
        .\current_state_reg[2] (\current_state_reg[2] ),
        .\current_state_reg[3] (\current_state_reg[3] ),
        .\current_state_reg[3]_0 (\current_state_reg[3]_0 ),
        .\current_state_reg[3]_1 (\current_state_reg[3]_1 ),
        .\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 (bs_info_valid_vec),
        .reset(reset),
        .\reset_duration_reg[6] (\reset_duration_reg[6] ),
        .\reset_duration_reg[6]_0 (\reset_duration_reg[6]_0 ),
        .\reset_duration_reg[6]_1 (\reset_duration_reg[6]_1 ),
        .\reset_duration_reg[6]_2 (\reset_duration_reg[6]_2 ),
        .\reset_duration_reg[6]_3 (\reset_duration_reg[6]_3 ),
        .rm_info_valid_vec(rm_info_valid_vec),
        .rm_reset_i4(rm_reset_i4),
        .rm_reset_i_reg(rm_reset_i_reg),
        .vsm_VS_0_rm_reset(vsm_VS_0_rm_reset),
        .vsm_VS_0_rm_shutdown_ack(vsm_VS_0_rm_shutdown_ack));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized2
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_27 i_pipe
       (.SS(SS),
        .clk(clk));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_0
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_26 i_pipe
       (.SS(SS),
        .clk(clk));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_1
   (out,
    SS,
    rm_info_valid_vec,
    clk);
  output out;
  input [0:0]SS;
  input rm_info_valid_vec;
  input clk;

  wire [0:0]SS;
  wire clk;
  wire out;
  wire rm_info_valid_vec;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_25 i_pipe
       (.SS(SS),
        .clk(clk),
        .out(out),
        .rm_info_valid_vec(rm_info_valid_vec));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_10
   (out,
    SS,
    clk,
    Q);
  output out;
  input [0:0]SS;
  input clk;
  input [3:0]Q;

  wire [3:0]Q;
  wire [0:0]SS;
  wire clk;
  wire out;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_16 i_pipe
       (.Q(Q),
        .SS(SS),
        .clk(clk),
        .out(out));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_11
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_15 i_pipe
       (.SS(SS),
        .clk(clk));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_12
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_14 i_pipe
       (.SS(SS),
        .clk(clk));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_13
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5 i_pipe
       (.SS(SS),
        .clk(clk));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_2
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_24 i_pipe
       (.SS(SS),
        .clk(clk));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_3
   (decompress_bad_size_error_flag_reg,
    rm_id_valid,
    decompress_bad_format_error_flag_reg,
    fetch_error_flag_reg,
    bad_config_error_i_reg,
    cp_error_flag_reg,
    SS,
    out,
    clk,
    SR,
    bad_size_error_int,
    decompress_bad_size_error_flag_reg_0,
    decompress_bad_size_error_flag_reg_1,
    decompress_bad_format_error_flag,
    fetch_error_flag_reg_0,
    Q,
    decompress0_bad_format_error,
    fetch_error_flag_reg_1,
    D,
    p_0_in,
    bad_config_error_flag_reg,
    cp_error_flag,
    cp0_vs_id,
    p_3_in,
    \opt_has_pipe.first_q_reg[0] );
  output decompress_bad_size_error_flag_reg;
  output rm_id_valid;
  output decompress_bad_format_error_flag_reg;
  output fetch_error_flag_reg;
  output bad_config_error_i_reg;
  output cp_error_flag_reg;
  input [0:0]SS;
  input out;
  input clk;
  input [0:0]SR;
  input bad_size_error_int;
  input decompress_bad_size_error_flag_reg_0;
  input decompress_bad_size_error_flag_reg_1;
  input decompress_bad_format_error_flag;
  input fetch_error_flag_reg_0;
  input [3:0]Q;
  input decompress0_bad_format_error;
  input fetch_error_flag_reg_1;
  input [0:0]D;
  input p_0_in;
  input bad_config_error_flag_reg;
  input cp_error_flag;
  input cp0_vs_id;
  input p_3_in;
  input \opt_has_pipe.first_q_reg[0] ;

  wire [0:0]D;
  wire [3:0]Q;
  wire [0:0]SR;
  wire [0:0]SS;
  wire bad_config_error_flag_reg;
  wire bad_config_error_i_reg;
  wire bad_size_error_int;
  wire clk;
  wire cp0_vs_id;
  wire cp_error_flag;
  wire cp_error_flag_reg;
  wire decompress0_bad_format_error;
  wire decompress_bad_format_error_flag;
  wire decompress_bad_format_error_flag_reg;
  wire decompress_bad_size_error_flag_reg;
  wire decompress_bad_size_error_flag_reg_0;
  wire decompress_bad_size_error_flag_reg_1;
  wire fetch_error_flag_reg;
  wire fetch_error_flag_reg_0;
  wire fetch_error_flag_reg_1;
  wire \opt_has_pipe.first_q_reg[0] ;
  wire out;
  wire p_0_in;
  wire p_3_in;
  wire rm_id_valid;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_22 i_pipe
       (.D(D),
        .Q(Q),
        .SR(SR),
        .SS(SS),
        .bad_config_error_flag_reg(bad_config_error_flag_reg),
        .bad_config_error_i_reg(bad_config_error_i_reg),
        .bad_size_error_int(bad_size_error_int),
        .clk(clk),
        .cp0_vs_id(cp0_vs_id),
        .cp_error_flag(cp_error_flag),
        .cp_error_flag_reg(cp_error_flag_reg),
        .decompress0_bad_format_error(decompress0_bad_format_error),
        .decompress_bad_format_error_flag(decompress_bad_format_error_flag),
        .decompress_bad_format_error_flag_reg(decompress_bad_format_error_flag_reg),
        .decompress_bad_size_error_flag_reg(decompress_bad_size_error_flag_reg),
        .decompress_bad_size_error_flag_reg_0(decompress_bad_size_error_flag_reg_0),
        .decompress_bad_size_error_flag_reg_1(decompress_bad_size_error_flag_reg_1),
        .fetch_error_flag_reg(fetch_error_flag_reg),
        .fetch_error_flag_reg_0(fetch_error_flag_reg_0),
        .fetch_error_flag_reg_1(fetch_error_flag_reg_1),
        .\opt_has_pipe.first_q_reg[0]_0 (rm_id_valid),
        .\opt_has_pipe.first_q_reg[0]_1 (\opt_has_pipe.first_q_reg[0] ),
        .out(out),
        .p_0_in(p_0_in),
        .p_3_in(p_3_in));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_4
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_21 i_pipe
       (.SS(SS),
        .clk(clk));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_5
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_20 i_pipe
       (.SS(SS),
        .clk(clk));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_6
   (SS,
    rm_id_valid,
    clk);
  input [0:0]SS;
  input rm_id_valid;
  input clk;

  wire [0:0]SS;
  wire clk;
  wire rm_id_valid;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_19 i_pipe
       (.SS(SS),
        .clk(clk),
        .rm_id_valid(rm_id_valid));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_7
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_18 i_pipe
       (.SS(SS),
        .clk(clk));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_9
   (out,
    SS,
    clk,
    Q);
  output out;
  input [0:0]SS;
  input clk;
  input [3:0]Q;

  wire [3:0]Q;
  wire [0:0]SS;
  wire clk;
  wire out;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_17 i_pipe
       (.Q(Q),
        .SS(SS),
        .clk(clk),
        .out(out));
endmodule

(* ORIG_REF_NAME = "delay" *) 
module dfx_controller_setup_dfx_controller_0_0_delay__parameterized9
   (\opt_has_pipe.first_q_reg[0] ,
    fifo_write,
    trigger_id_one_hot_valid0,
    \opt_has_pipe.first_q_reg[0]_0 ,
    SS,
    \opt_has_pipe.first_q_reg[0]_1 ,
    clk,
    CARRY_OUT,
    trigger_valid_prev,
    fifo_not_full,
    current_state);
  output \opt_has_pipe.first_q_reg[0] ;
  output fifo_write;
  output trigger_id_one_hot_valid0;
  output \opt_has_pipe.first_q_reg[0]_0 ;
  input [0:0]SS;
  input \opt_has_pipe.first_q_reg[0]_1 ;
  input clk;
  input CARRY_OUT;
  input trigger_valid_prev;
  input fifo_not_full;
  input [1:0]current_state;

  wire CARRY_OUT;
  wire [0:0]SS;
  wire clk;
  wire [1:0]current_state;
  wire fifo_not_full;
  wire fifo_write;
  wire \opt_has_pipe.first_q_reg[0] ;
  wire \opt_has_pipe.first_q_reg[0]_0 ;
  wire \opt_has_pipe.first_q_reg[0]_1 ;
  wire trigger_id_one_hot_valid0;
  wire trigger_valid_prev;

  dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized15 i_pipe
       (.CARRY_OUT(CARRY_OUT),
        .SS(SS),
        .clk(clk),
        .current_state(current_state),
        .fifo_not_full(fifo_not_full),
        .fifo_write(fifo_write),
        .\opt_has_pipe.first_q_reg[0]_0 (\opt_has_pipe.first_q_reg[0] ),
        .\opt_has_pipe.first_q_reg[0]_1 (\opt_has_pipe.first_q_reg[0]_0 ),
        .\opt_has_pipe.first_q_reg[0]_2 (\opt_has_pipe.first_q_reg[0]_1 ),
        .trigger_id_one_hot_valid0(trigger_id_one_hot_valid0),
        .trigger_valid_prev(trigger_valid_prev));
endmodule

(* C_NUM_VIRTUAL_SOCKETS = "1" *) (* C_RESET_ACTIVE_LEVEL = "1'b0" *) (* C_XDEVICEFAMILY = "artix7" *) 
(* ORIG_REF_NAME = "dfx_controller_dfx_controller_setup_dfx_controller_0_0" *) (* downgradeipidentifiedwarnings = "yes" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dfx_controller_setup_dfx_controller_0_0
   (clk,
    reset,
    vsm_VS_0_hw_triggers,
    vsm_VS_0_rm_shutdown_req,
    vsm_VS_0_rm_shutdown_ack,
    vsm_VS_0_rm_decouple,
    vsm_VS_0_rm_reset,
    vsm_VS_0_m_axis_status_tvalid,
    vsm_VS_0_m_axis_status_tdata,
    vsm_VS_0_event_error,
    icap_clk,
    icap_reset,
    icap_i,
    icap_o,
    icap_csib,
    icap_rdwrb,
    m_axi_mem_araddr,
    m_axi_mem_arlen,
    m_axi_mem_arsize,
    m_axi_mem_arburst,
    m_axi_mem_arprot,
    m_axi_mem_arcache,
    m_axi_mem_aruser,
    m_axi_mem_arvalid,
    m_axi_mem_arready,
    m_axi_mem_rdata,
    m_axi_mem_rresp,
    m_axi_mem_rlast,
    m_axi_mem_rvalid,
    m_axi_mem_rready);
  input clk;
  input reset;
  input [1:0]vsm_VS_0_hw_triggers;
  output vsm_VS_0_rm_shutdown_req;
  input vsm_VS_0_rm_shutdown_ack;
  output vsm_VS_0_rm_decouple;
  output vsm_VS_0_rm_reset;
  output vsm_VS_0_m_axis_status_tvalid;
  output [31:0]vsm_VS_0_m_axis_status_tdata;
  output vsm_VS_0_event_error;
  input icap_clk;
  input icap_reset;
  input [31:0]icap_i;
  output [31:0]icap_o;
  output icap_csib;
  output icap_rdwrb;
  output [31:0]m_axi_mem_araddr;
  output [7:0]m_axi_mem_arlen;
  output [2:0]m_axi_mem_arsize;
  output [1:0]m_axi_mem_arburst;
  output [2:0]m_axi_mem_arprot;
  output [3:0]m_axi_mem_arcache;
  output [3:0]m_axi_mem_aruser;
  output m_axi_mem_arvalid;
  input m_axi_mem_arready;
  input [31:0]m_axi_mem_rdata;
  input [1:0]m_axi_mem_rresp;
  input m_axi_mem_rlast;
  input m_axi_mem_rvalid;
  output m_axi_mem_rready;

  wire \<const0> ;
  wire \<const1> ;
  wire \GEN_1.i_decompress_collar/GEN_1.i_decompress/xpm_data_fifo_read ;
  wire \GEN_1.i_decompress_collar/bad_size_error_int ;
  wire \GEN_1.i_decompress_collar/blk_skid_buffers.i_sb_1/wr_en9_out ;
  wire clk;
  wire cp0_vs_id;
  wire [31:0]decompress0_2_cp0_axis_bs_tdata;
  wire decompress0_2_cp0_axis_bs_tlast;
  wire [1:1]decompress0_2_cp0_axis_bs_tuser;
  wire decompress0_bad_format_error;
  wire decompress0_rm_id_o;
  wire [31:0]fetch0_2_decompress0_axis_bs_tdata;
  wire fetch0_2_decompress0_axis_bs_tlast;
  wire [0:0]fetch0_2_decompress0_axis_bs_tuser;
  wire fetch0_2_decompress0_axis_bs_tvalid;
  wire fetch0_rm_id_o;
  wire fifo_write;
  wire i_cp0_n_5;
  wire i_cp0_n_6;
  wire i_decompress_0_n_1;
  wire i_decompress_0_n_4;
  wire i_decompress_0_n_41;
  wire i_decompress_0_n_6;
  wire icap_clk;
  wire icap_csib;
  wire [31:0]icap_i;
  wire [31:0]icap_o;
  wire icap_reset;
  wire [31:0]m_axi_mem_araddr;
  wire [0:0]\^m_axi_mem_arburst ;
  wire [7:0]m_axi_mem_arlen;
  wire m_axi_mem_arready;
  wire [1:1]\^m_axi_mem_arsize ;
  wire m_axi_mem_arvalid;
  wire [31:0]m_axi_mem_rdata;
  wire m_axi_mem_rlast;
  wire m_axi_mem_rready;
  wire [1:0]m_axi_mem_rresp;
  wire m_axi_mem_rvalid;
  wire p_0_in;
  wire p_1_in;
  wire p_3_in;
  wire p_4_in;
  wire ready_for_hw_trigger;
  wire reset;
  wire reset_ah;
  wire vsm_VS_0_event_error;
  wire [2:2]vsm_VS_0_fetch_size;
  wire [1:0]vsm_VS_0_hw_triggers;
  wire [8:0]\^vsm_VS_0_m_axis_status_tdata ;
  wire vsm_VS_0_rm_decouple;
  wire vsm_VS_0_rm_reset;
  wire vsm_VS_0_rm_shutdown_ack;
  wire vsm_VS_0_rm_shutdown_req;
  wire write_bs_fifo;

  assign icap_rdwrb = \<const0> ;
  assign m_axi_mem_arburst[1] = \<const0> ;
  assign m_axi_mem_arburst[0] = \^m_axi_mem_arburst [0];
  assign m_axi_mem_arcache[3] = \<const0> ;
  assign m_axi_mem_arcache[2] = \<const0> ;
  assign m_axi_mem_arcache[1] = \<const1> ;
  assign m_axi_mem_arcache[0] = \<const1> ;
  assign m_axi_mem_arprot[2] = \<const0> ;
  assign m_axi_mem_arprot[1] = \<const0> ;
  assign m_axi_mem_arprot[0] = \<const0> ;
  assign m_axi_mem_arsize[2] = \<const0> ;
  assign m_axi_mem_arsize[1] = \^m_axi_mem_arsize [1];
  assign m_axi_mem_arsize[0] = \<const0> ;
  assign m_axi_mem_aruser[3] = \<const0> ;
  assign m_axi_mem_aruser[2] = \<const0> ;
  assign m_axi_mem_aruser[1] = \<const0> ;
  assign m_axi_mem_aruser[0] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[31] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[30] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[29] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[28] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[27] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[26] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[25] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[24] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[23] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[22] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[21] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[20] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[19] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[18] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[17] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[16] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[15] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[14] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[13] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[12] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[11] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[10] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[9] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[8] = \^vsm_VS_0_m_axis_status_tdata [8];
  assign vsm_VS_0_m_axis_status_tdata[7] = \<const0> ;
  assign vsm_VS_0_m_axis_status_tdata[6:0] = \^vsm_VS_0_m_axis_status_tdata [6:0];
  assign vsm_VS_0_m_axis_status_tvalid = \<const1> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dfx_controller_setup_dfx_controller_0_0_icap_if_0 i_cp0
       (.SS(reset_ah),
        .cc_done_reg_0(i_cp0_n_6),
        .clk(clk),
        .cp0_vs_id(cp0_vs_id),
        .din({decompress0_2_cp0_axis_bs_tdata,decompress0_2_cp0_axis_bs_tuser,decompress0_2_cp0_axis_bs_tlast}),
        .empty(i_decompress_0_n_1),
        .\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg (i_cp0_n_5),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg (fifo_write),
        .\gen_rd_b.doutb_reg_reg[1] (decompress0_rm_id_o),
        .icap_clk(icap_clk),
        .icap_csib(icap_csib),
        .icap_i(icap_i[7:6]),
        .icap_o(icap_o),
        .icap_reset(icap_reset),
        .p_3_in(p_3_in),
        .p_4_in(p_4_in),
        .rd_en(\GEN_1.i_decompress_collar/GEN_1.i_decompress/xpm_data_fifo_read ),
        .reset(reset),
        .wr_en(write_bs_fifo));
  dfx_controller_setup_dfx_controller_0_0_decompress i_decompress_0
       (.D({fetch0_rm_id_o,fetch0_2_decompress0_axis_bs_tlast,p_1_in,fetch0_2_decompress0_axis_bs_tuser,fetch0_2_decompress0_axis_bs_tdata}),
        .E(\GEN_1.i_decompress_collar/blk_skid_buffers.i_sb_1/wr_en9_out ),
        .\GEN_OPT_LVL_0.v_counter_reg[2] (i_cp0_n_5),
        .SS(reset_ah),
        .bad_size_error_int(\GEN_1.i_decompress_collar/bad_size_error_int ),
        .clk(clk),
        .\current_state_reg[1] (i_decompress_0_n_6),
        .decompress0_bad_format_error(decompress0_bad_format_error),
        .din({decompress0_2_cp0_axis_bs_tdata,decompress0_2_cp0_axis_bs_tuser,decompress0_2_cp0_axis_bs_tlast}),
        .empty(i_decompress_0_n_1),
        .out(fetch0_2_decompress0_axis_bs_tvalid),
        .rd_en(\GEN_1.i_decompress_collar/GEN_1.i_decompress/xpm_data_fifo_read ),
        .reset(reset),
        .reset_0(fifo_write),
        .\rm_id_o_reg[0] (decompress0_rm_id_o),
        .valid_reg1_reg(i_decompress_0_n_4),
        .valid_reg1_reg_0(i_decompress_0_n_41),
        .wr_en(write_bs_fifo));
  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dfx_controller_setup_dfx_controller_0_0_fetch i_fetch0
       (.D({fetch0_rm_id_o,fetch0_2_decompress0_axis_bs_tlast,p_1_in,fetch0_2_decompress0_axis_bs_tuser,fetch0_2_decompress0_axis_bs_tdata}),
        .E(\GEN_1.i_decompress_collar/blk_skid_buffers.i_sb_1/wr_en9_out ),
        .SS(reset_ah),
        .clk(clk),
        .id_fifo_read_d1_reg_0(i_decompress_0_n_41),
        .m_axi_mem_araddr(m_axi_mem_araddr),
        .m_axi_mem_arburst(\^m_axi_mem_arburst ),
        .m_axi_mem_arlen(m_axi_mem_arlen),
        .m_axi_mem_arready(m_axi_mem_arready),
        .m_axi_mem_arsize(\^m_axi_mem_arsize ),
        .m_axi_mem_arvalid(m_axi_mem_arvalid),
        .m_axi_mem_rdata(m_axi_mem_rdata),
        .m_axi_mem_rlast(m_axi_mem_rlast),
        .m_axi_mem_rready(m_axi_mem_rready),
        .m_axi_mem_rresp(m_axi_mem_rresp[1]),
        .m_axi_mem_rvalid(m_axi_mem_rvalid),
        .out(fetch0_2_decompress0_axis_bs_tvalid),
        .p_0_in(p_0_in),
        .ready_for_hw_trigger(ready_for_hw_trigger),
        .reset(reset),
        .sig_last_reg_out_reg(i_decompress_0_n_4),
        .vsm_VS_0_fetch_size(vsm_VS_0_fetch_size),
        .vsm_VS_0_m_axis_status_tdata(\^vsm_VS_0_m_axis_status_tdata [8]));
  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dfx_controller_setup_dfx_controller_0_0_vsm_VS_0 i_vsm_VS_0
       (.D(p_1_in),
        .SS(reset_ah),
        .bad_size_error_int(\GEN_1.i_decompress_collar/bad_size_error_int ),
        .clk(clk),
        .cp0_vs_id(cp0_vs_id),
        .decompress0_bad_format_error(decompress0_bad_format_error),
        .decompress_bad_size_error_flag_reg_0(i_decompress_0_n_6),
        .full_flag_reg_0(i_cp0_n_6),
        .p_0_in(p_0_in),
        .p_3_in(p_3_in),
        .p_4_in(p_4_in),
        .ready_for_hw_trigger(ready_for_hw_trigger),
        .reset(reset),
        .vsm_VS_0_event_error(vsm_VS_0_event_error),
        .vsm_VS_0_fetch_size(vsm_VS_0_fetch_size),
        .vsm_VS_0_hw_triggers(vsm_VS_0_hw_triggers),
        .vsm_VS_0_m_axis_status_tdata({\^vsm_VS_0_m_axis_status_tdata [8],\^vsm_VS_0_m_axis_status_tdata [6:0]}),
        .vsm_VS_0_rm_decouple(vsm_VS_0_rm_decouple),
        .vsm_VS_0_rm_reset(vsm_VS_0_rm_reset),
        .vsm_VS_0_rm_shutdown_ack(vsm_VS_0_rm_shutdown_ack),
        .vsm_VS_0_rm_shutdown_req(vsm_VS_0_rm_shutdown_req));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dfx_controller_setup_dfx_controller_0_0_fetch" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dfx_controller_setup_dfx_controller_0_0_fetch
   (out,
    p_0_in,
    m_axi_mem_arsize,
    m_axi_mem_arburst,
    m_axi_mem_arvalid,
    D,
    E,
    m_axi_mem_rready,
    m_axi_mem_araddr,
    m_axi_mem_arlen,
    clk,
    SS,
    reset,
    ready_for_hw_trigger,
    sig_last_reg_out_reg,
    id_fifo_read_d1_reg_0,
    m_axi_mem_rlast,
    m_axi_mem_rvalid,
    m_axi_mem_rresp,
    m_axi_mem_rdata,
    m_axi_mem_arready,
    vsm_VS_0_fetch_size,
    vsm_VS_0_m_axis_status_tdata);
  output out;
  output p_0_in;
  output [0:0]m_axi_mem_arsize;
  output [0:0]m_axi_mem_arburst;
  output m_axi_mem_arvalid;
  output [35:0]D;
  output [0:0]E;
  output m_axi_mem_rready;
  output [31:0]m_axi_mem_araddr;
  output [7:0]m_axi_mem_arlen;
  input clk;
  input [0:0]SS;
  input reset;
  input ready_for_hw_trigger;
  input sig_last_reg_out_reg;
  input id_fifo_read_d1_reg_0;
  input m_axi_mem_rlast;
  input m_axi_mem_rvalid;
  input [0:0]m_axi_mem_rresp;
  input [31:0]m_axi_mem_rdata;
  input m_axi_mem_arready;
  input [0:0]vsm_VS_0_fetch_size;
  input [0:0]vsm_VS_0_m_axis_status_tdata;

  wire [35:0]D;
  wire [0:0]E;
  wire \GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/sig_push_regfifo ;
  wire [0:0]SS;
  wire aempty;
  wire bad_config_error_i;
  wire clk;
  wire cmd_avail;
  wire cmd_fifo_not_full;
  wire cmd_fifo_write;
  wire [31:1]dma_addr_reg;
  wire empty;
  wire first_word_seen;
  wire [2:0]fsm_cs;
  wire i_cmd_fifo_n_10;
  wire i_cmd_fifo_n_11;
  wire i_cmd_fifo_n_12;
  wire i_cmd_fifo_n_13;
  wire i_cmd_fifo_n_14;
  wire i_cmd_fifo_n_15;
  wire i_cmd_fifo_n_16;
  wire i_cmd_fifo_n_17;
  wire i_cmd_fifo_n_18;
  wire i_cmd_fifo_n_19;
  wire i_cmd_fifo_n_20;
  wire i_cmd_fifo_n_21;
  wire i_cmd_fifo_n_22;
  wire i_cmd_fifo_n_23;
  wire i_cmd_fifo_n_24;
  wire i_cmd_fifo_n_25;
  wire i_cmd_fifo_n_26;
  wire i_cmd_fifo_n_27;
  wire i_cmd_fifo_n_28;
  wire i_cmd_fifo_n_29;
  wire i_cmd_fifo_n_3;
  wire i_cmd_fifo_n_30;
  wire i_cmd_fifo_n_31;
  wire i_cmd_fifo_n_32;
  wire i_cmd_fifo_n_33;
  wire i_cmd_fifo_n_34;
  wire i_cmd_fifo_n_35;
  wire i_cmd_fifo_n_36;
  wire i_cmd_fifo_n_37;
  wire i_cmd_fifo_n_38;
  wire i_cmd_fifo_n_39;
  wire i_cmd_fifo_n_4;
  wire i_cmd_fifo_n_40;
  wire i_cmd_fifo_n_41;
  wire i_cmd_fifo_n_42;
  wire i_cmd_fifo_n_43;
  wire i_cmd_fifo_n_44;
  wire i_cmd_fifo_n_45;
  wire i_cmd_fifo_n_46;
  wire i_cmd_fifo_n_47;
  wire i_cmd_fifo_n_48;
  wire i_cmd_fifo_n_49;
  wire i_cmd_fifo_n_50;
  wire i_cmd_fifo_n_51;
  wire i_cmd_fifo_n_52;
  wire i_cmd_fifo_n_53;
  wire i_cmd_fifo_n_54;
  wire i_cmd_fifo_n_55;
  wire i_cmd_fifo_n_56;
  wire i_cmd_fifo_n_57;
  wire i_cmd_fifo_n_58;
  wire i_cmd_fifo_n_59;
  wire i_cmd_fifo_n_6;
  wire i_cmd_fifo_n_60;
  wire i_cmd_fifo_n_61;
  wire i_cmd_fifo_n_62;
  wire i_cmd_fifo_n_63;
  wire i_cmd_fifo_n_64;
  wire i_cmd_fifo_n_65;
  wire i_cmd_fifo_n_66;
  wire i_cmd_fifo_n_67;
  wire i_cmd_fifo_n_68;
  wire i_cmd_fifo_n_69;
  wire i_cmd_fifo_n_7;
  wire i_cmd_fifo_n_70;
  wire i_cmd_fifo_n_71;
  wire i_cmd_fifo_n_72;
  wire i_cmd_fifo_n_73;
  wire i_cmd_fifo_n_74;
  wire i_cmd_fifo_n_75;
  wire i_cmd_fifo_n_8;
  wire i_cmd_fifo_n_9;
  wire i_dma_n_40;
  wire i_dma_n_41;
  wire i_dma_n_45;
  wire i_id_fifo_n_10;
  wire i_id_fifo_n_11;
  wire i_id_fifo_n_12;
  wire i_id_fifo_n_13;
  wire i_id_fifo_n_14;
  wire i_id_fifo_n_15;
  wire i_id_fifo_n_16;
  wire i_id_fifo_n_17;
  wire i_id_fifo_n_18;
  wire i_id_fifo_n_19;
  wire i_id_fifo_n_2;
  wire i_id_fifo_n_20;
  wire i_id_fifo_n_21;
  wire i_id_fifo_n_22;
  wire i_id_fifo_n_23;
  wire i_id_fifo_n_24;
  wire i_id_fifo_n_25;
  wire i_id_fifo_n_26;
  wire i_id_fifo_n_27;
  wire i_id_fifo_n_28;
  wire i_id_fifo_n_29;
  wire i_id_fifo_n_30;
  wire i_id_fifo_n_31;
  wire i_id_fifo_n_32;
  wire i_id_fifo_n_33;
  wire i_id_fifo_n_34;
  wire i_id_fifo_n_35;
  wire i_id_fifo_n_36;
  wire i_id_fifo_n_37;
  wire i_id_fifo_n_38;
  wire i_id_fifo_n_39;
  wire i_id_fifo_n_40;
  wire i_id_fifo_n_41;
  wire i_id_fifo_n_42;
  wire i_id_fifo_n_43;
  wire i_id_fifo_n_44;
  wire i_id_fifo_n_45;
  wire i_id_fifo_n_46;
  wire i_id_fifo_n_47;
  wire i_id_fifo_n_48;
  wire i_id_fifo_n_49;
  wire i_id_fifo_n_50;
  wire i_id_fifo_n_51;
  wire i_id_fifo_n_52;
  wire i_id_fifo_n_53;
  wire i_id_fifo_n_54;
  wire i_id_fifo_n_55;
  wire i_id_fifo_n_56;
  wire i_id_fifo_n_57;
  wire i_id_fifo_n_58;
  wire i_id_fifo_n_59;
  wire i_id_fifo_n_6;
  wire i_id_fifo_n_60;
  wire i_id_fifo_n_61;
  wire i_id_fifo_n_7;
  wire i_id_fifo_n_8;
  wire i_id_fifo_n_9;
  wire i_req_fifo_n_10;
  wire i_req_fifo_n_11;
  wire i_req_fifo_n_12;
  wire i_req_fifo_n_13;
  wire i_req_fifo_n_14;
  wire i_req_fifo_n_15;
  wire i_req_fifo_n_3;
  wire i_req_fifo_n_4;
  wire i_req_fifo_n_5;
  wire i_req_fifo_n_6;
  wire i_req_fifo_n_7;
  wire i_req_fifo_n_8;
  wire i_req_fifo_n_9;
  wire id_fifo_almost_empty_d1;
  wire id_fifo_not_full;
  wire id_fifo_read;
  wire id_fifo_read_d1;
  wire id_fifo_read_d1_reg_0;
  wire id_fifo_read_d2;
  wire id_fifo_write;
  wire [31:0]m_axi_mem_araddr;
  wire [0:0]m_axi_mem_arburst;
  wire [7:0]m_axi_mem_arlen;
  wire m_axi_mem_arready;
  wire [0:0]m_axi_mem_arsize;
  wire m_axi_mem_arvalid;
  wire [31:0]m_axi_mem_rdata;
  wire m_axi_mem_rlast;
  wire m_axi_mem_rready;
  wire [0:0]m_axi_mem_rresp;
  wire m_axi_mem_rvalid;
  wire one_word_bs_detected_reg_n_0;
  wire out;
  wire p_0_in;
  wire rd_avail;
  wire [66:66]rd_data;
  wire ready_for_hw_trigger;
  wire recheck_id_reg_source;
  wire recheck_id_reg_source0;
  wire reqs_stored;
  wire reset;
  wire s_axis_mm2s_cmd_tready;
  wire sig_last_reg_out_reg;
  wire two_word_bs_detected_reg_n_0;
  wire [8:0]upper_segment;
  wire upper_segment_is_zero;
  wire [31:23]v_dma_size;
  wire v_dma_size0_carry__0_n_0;
  wire v_dma_size0_carry__0_n_1;
  wire v_dma_size0_carry__0_n_2;
  wire v_dma_size0_carry__0_n_3;
  wire v_dma_size0_carry__1_n_0;
  wire v_dma_size0_carry__1_n_1;
  wire v_dma_size0_carry__1_n_2;
  wire v_dma_size0_carry__1_n_3;
  wire v_dma_size0_carry__2_n_0;
  wire v_dma_size0_carry__2_n_1;
  wire v_dma_size0_carry__2_n_2;
  wire v_dma_size0_carry__2_n_3;
  wire v_dma_size0_carry__3_n_0;
  wire v_dma_size0_carry__3_n_1;
  wire v_dma_size0_carry__3_n_2;
  wire v_dma_size0_carry__3_n_3;
  wire v_dma_size0_carry__4_n_0;
  wire v_dma_size0_carry__4_n_1;
  wire v_dma_size0_carry__4_n_2;
  wire v_dma_size0_carry__4_n_3;
  wire v_dma_size0_carry__5_i_1_n_0;
  wire v_dma_size0_carry__5_i_2_n_0;
  wire v_dma_size0_carry__5_i_3_n_0;
  wire v_dma_size0_carry__5_i_4_n_0;
  wire v_dma_size0_carry__5_n_0;
  wire v_dma_size0_carry__5_n_1;
  wire v_dma_size0_carry__5_n_2;
  wire v_dma_size0_carry__5_n_3;
  wire v_dma_size0_carry__6_i_1_n_0;
  wire v_dma_size0_carry__6_i_2_n_0;
  wire v_dma_size0_carry__6_i_3_n_0;
  wire v_dma_size0_carry__6_n_2;
  wire v_dma_size0_carry__6_n_3;
  wire v_dma_size0_carry_n_0;
  wire v_dma_size0_carry_n_1;
  wire v_dma_size0_carry_n_2;
  wire v_dma_size0_carry_n_3;
  wire [31:1]v_dma_size_reg;
  wire [0:0]vsm_VS_0_fetch_size;
  wire [0:0]vsm_VS_0_m_axis_status_tdata;
  wire [3:0]NLW_v_dma_size0_carry_O_UNCONNECTED;
  wire [3:0]NLW_v_dma_size0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_v_dma_size0_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_v_dma_size0_carry__2_O_UNCONNECTED;
  wire [3:0]NLW_v_dma_size0_carry__3_O_UNCONNECTED;
  wire [1:0]NLW_v_dma_size0_carry__4_O_UNCONNECTED;
  wire [3:2]NLW_v_dma_size0_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_v_dma_size0_carry__6_O_UNCONNECTED;

  (* FSM_ENCODED_STATES = "st_wait_for_tx_to_start:000,st_por:110,st_wait_for_req:001,st_load_dma:010,st_bad_config_error1:101,st_bad_config_error_wait:100,st_bad_config_error_done:011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_b_fsm.fsm_cs_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_60),
        .Q(fsm_cs[0]),
        .R(SS));
  (* FSM_ENCODED_STATES = "st_wait_for_tx_to_start:000,st_por:110,st_wait_for_req:001,st_load_dma:010,st_bad_config_error1:101,st_bad_config_error_wait:100,st_bad_config_error_done:011" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_sequential_b_fsm.fsm_cs_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_59),
        .Q(fsm_cs[1]),
        .S(SS));
  (* FSM_ENCODED_STATES = "st_wait_for_tx_to_start:000,st_por:110,st_wait_for_req:001,st_load_dma:010,st_bad_config_error1:101,st_bad_config_error_wait:100,st_bad_config_error_done:011" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_sequential_b_fsm.fsm_cs_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_61),
        .Q(fsm_cs[2]),
        .S(SS));
  FDRE #(
    .INIT(1'b0)) 
    \b_find_req.gen_vsm_input_vectors[0].reqs_stored_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(i_req_fifo_n_15),
        .Q(reqs_stored),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    bad_config_error_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(bad_config_error_i),
        .Q(p_0_in),
        .R(SS));
  LUT1 #(
    .INIT(2'h1)) 
    \data_reg0[32]_i_1 
       (.I0(first_word_seen),
        .O(D[32]));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[10] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_30),
        .Q(dma_addr_reg[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[11] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_29),
        .Q(dma_addr_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[12] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_28),
        .Q(dma_addr_reg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[13] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_35),
        .Q(dma_addr_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[14] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_34),
        .Q(dma_addr_reg[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[15] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_33),
        .Q(dma_addr_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[16] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_32),
        .Q(dma_addr_reg[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[17] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_39),
        .Q(dma_addr_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[18] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_38),
        .Q(dma_addr_reg[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[19] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_37),
        .Q(dma_addr_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[1] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_23),
        .Q(dma_addr_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[20] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_36),
        .Q(dma_addr_reg[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[21] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_43),
        .Q(dma_addr_reg[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[22] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_42),
        .Q(dma_addr_reg[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[23] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_41),
        .Q(dma_addr_reg[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[24] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_40),
        .Q(dma_addr_reg[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[25] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_47),
        .Q(dma_addr_reg[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[26] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_46),
        .Q(dma_addr_reg[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[27] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_45),
        .Q(dma_addr_reg[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[28] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_44),
        .Q(dma_addr_reg[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[29] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_50),
        .Q(dma_addr_reg[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[2] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_22),
        .Q(dma_addr_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[30] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_49),
        .Q(dma_addr_reg[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[31] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_48),
        .Q(dma_addr_reg[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[3] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_21),
        .Q(dma_addr_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[4] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_20),
        .Q(dma_addr_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[5] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_27),
        .Q(dma_addr_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[6] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_26),
        .Q(dma_addr_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[7] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_25),
        .Q(dma_addr_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[8] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_24),
        .Q(dma_addr_reg[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dma_addr_reg[9] 
       (.C(clk),
        .CE(i_id_fifo_n_2),
        .D(i_id_fifo_n_31),
        .Q(dma_addr_reg[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    first_word_seen_reg
       (.C(clk),
        .CE(1'b1),
        .D(i_dma_n_45),
        .Q(first_word_seen),
        .R(SS));
  dfx_controller_setup_dfx_controller_0_0_glb_srl_fifo__parameterized5 i_cmd_fifo
       (.CO(i_id_fifo_n_15),
        .DI(i_cmd_fifo_n_3),
        .E(\GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/sig_push_regfifo ),
        .\FSM_sequential_b_fsm.fsm_cs_reg[0] ({i_cmd_fifo_n_10,i_cmd_fifo_n_11,i_cmd_fifo_n_12,i_cmd_fifo_n_13}),
        .\FSM_sequential_b_fsm.fsm_cs_reg[0]_0 ({i_cmd_fifo_n_14,i_cmd_fifo_n_15,i_cmd_fifo_n_16}),
        .\FSM_sequential_b_fsm.fsm_cs_reg[1] (i_cmd_fifo_n_4),
        .\FSM_sequential_b_fsm.fsm_cs_reg[1]_0 ({i_cmd_fifo_n_18,i_cmd_fifo_n_19}),
        .O({i_cmd_fifo_n_6,i_cmd_fifo_n_7,i_cmd_fifo_n_8,i_cmd_fifo_n_9}),
        .Q({i_cmd_fifo_n_20,i_cmd_fifo_n_21,i_cmd_fifo_n_22,i_cmd_fifo_n_23,i_cmd_fifo_n_24,i_cmd_fifo_n_25,i_cmd_fifo_n_26,i_cmd_fifo_n_27,i_cmd_fifo_n_28,i_cmd_fifo_n_29,i_cmd_fifo_n_30,i_cmd_fifo_n_31,i_cmd_fifo_n_32,i_cmd_fifo_n_33,i_cmd_fifo_n_34,i_cmd_fifo_n_35,i_cmd_fifo_n_36,i_cmd_fifo_n_37,i_cmd_fifo_n_38,i_cmd_fifo_n_39,i_cmd_fifo_n_40,i_cmd_fifo_n_41,i_cmd_fifo_n_42,i_cmd_fifo_n_43,i_cmd_fifo_n_44,i_cmd_fifo_n_45,i_cmd_fifo_n_46,i_cmd_fifo_n_47,i_cmd_fifo_n_48,i_cmd_fifo_n_49,i_cmd_fifo_n_50,i_cmd_fifo_n_51,i_cmd_fifo_n_52,i_cmd_fifo_n_53,i_cmd_fifo_n_54,i_cmd_fifo_n_55,i_cmd_fifo_n_56,i_cmd_fifo_n_57,i_cmd_fifo_n_58,i_cmd_fifo_n_59,i_cmd_fifo_n_60,i_cmd_fifo_n_61,i_cmd_fifo_n_62,i_cmd_fifo_n_63,i_cmd_fifo_n_64,i_cmd_fifo_n_65,i_cmd_fifo_n_66,i_cmd_fifo_n_67,i_cmd_fifo_n_68,i_cmd_fifo_n_69,i_cmd_fifo_n_70,i_cmd_fifo_n_71,i_cmd_fifo_n_72,i_cmd_fifo_n_73,i_cmd_fifo_n_74,i_cmd_fifo_n_75}),
        .S({i_id_fifo_n_56,i_id_fifo_n_57}),
        .SS(SS),
        .clk(clk),
        .cmd_avail(cmd_avail),
        .cmd_fifo_not_full(cmd_fifo_not_full),
        .cmd_fifo_write(cmd_fifo_write),
        .fsm_cs(fsm_cs),
        .id_fifo_write(id_fifo_write),
        .in(dma_addr_reg),
        .s_axis_mm2s_cmd_tready(s_axis_mm2s_cmd_tready),
        .upper_segment(upper_segment),
        .upper_segment_is_zero(upper_segment_is_zero),
        .v_dma_size_reg(v_dma_size_reg),
        .\v_dma_size_reg[2] (i_cmd_fifo_n_17));
  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma i_dma
       (.D({D[34:33],D[31:0]}),
        .E(E),
        .\FSM_sequential_b_fsm.fsm_cs[2]_i_3 (i_id_fifo_n_6),
        .Q(empty),
        .\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] ({i_cmd_fifo_n_20,i_cmd_fifo_n_21,i_cmd_fifo_n_22,i_cmd_fifo_n_23,i_cmd_fifo_n_24,i_cmd_fifo_n_25,i_cmd_fifo_n_26,i_cmd_fifo_n_27,i_cmd_fifo_n_28,i_cmd_fifo_n_29,i_cmd_fifo_n_30,i_cmd_fifo_n_31,i_cmd_fifo_n_32,i_cmd_fifo_n_33,i_cmd_fifo_n_34,i_cmd_fifo_n_35,i_cmd_fifo_n_36,i_cmd_fifo_n_37,i_cmd_fifo_n_38,i_cmd_fifo_n_39,i_cmd_fifo_n_40,i_cmd_fifo_n_41,i_cmd_fifo_n_42,i_cmd_fifo_n_43,i_cmd_fifo_n_44,i_cmd_fifo_n_45,i_cmd_fifo_n_46,i_cmd_fifo_n_47,i_cmd_fifo_n_48,i_cmd_fifo_n_49,i_cmd_fifo_n_50,i_cmd_fifo_n_51,i_cmd_fifo_n_52,i_cmd_fifo_n_53,i_cmd_fifo_n_54,i_cmd_fifo_n_55,i_cmd_fifo_n_56,i_cmd_fifo_n_57,i_cmd_fifo_n_58,i_cmd_fifo_n_59,i_cmd_fifo_n_60,i_cmd_fifo_n_61,i_cmd_fifo_n_62,i_cmd_fifo_n_63,i_cmd_fifo_n_64,i_cmd_fifo_n_65,i_cmd_fifo_n_66,i_cmd_fifo_n_67,i_cmd_fifo_n_68,i_cmd_fifo_n_69,i_cmd_fifo_n_70,i_cmd_fifo_n_71,i_cmd_fifo_n_72,i_cmd_fifo_n_73,i_cmd_fifo_n_74,i_cmd_fifo_n_75}),
        .\USE_SINGLE_REG.sig_regfifo_empty_reg_reg (\GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/sig_push_regfifo ),
        .clk(clk),
        .cmd_avail(cmd_avail),
        .first_word_seen(first_word_seen),
        .first_word_seen_reg(i_dma_n_40),
        .fsm_cs(fsm_cs),
        .id_fifo_write(id_fifo_write),
        .m_axi_mem_araddr(m_axi_mem_araddr),
        .m_axi_mem_arburst(m_axi_mem_arburst),
        .m_axi_mem_arlen(m_axi_mem_arlen),
        .m_axi_mem_arready(m_axi_mem_arready),
        .m_axi_mem_arsize(m_axi_mem_arsize),
        .m_axi_mem_arvalid(m_axi_mem_arvalid),
        .m_axi_mem_rdata(m_axi_mem_rdata),
        .m_axi_mem_rlast(m_axi_mem_rlast),
        .m_axi_mem_rready(m_axi_mem_rready),
        .m_axi_mem_rresp(m_axi_mem_rresp),
        .m_axi_mem_rvalid(m_axi_mem_rvalid),
        .out(out),
        .recheck_id_reg_source0(recheck_id_reg_source0),
        .reset(reset),
        .s_axis_mm2s_cmd_tready(s_axis_mm2s_cmd_tready),
        .sig_last_reg_out_reg(i_dma_n_41),
        .sig_last_reg_out_reg_0(i_dma_n_45),
        .sig_last_reg_out_reg_1(sig_last_reg_out_reg));
  dfx_controller_setup_dfx_controller_0_0_glb_srl_fifo__parameterized3 i_id_fifo
       (.CO(i_req_fifo_n_10),
        .D(D[35]),
        .\FSM_sequential_b_fsm.fsm_cs_reg[0] (i_id_fifo_n_59),
        .\FSM_sequential_b_fsm.fsm_cs_reg[0]_0 (i_id_fifo_n_61),
        .\FSM_sequential_b_fsm.fsm_cs_reg[1] (i_req_fifo_n_5),
        .\FSM_sequential_b_fsm.fsm_cs_reg[2] (i_id_fifo_n_60),
        .\FSM_sequential_b_fsm.fsm_cs_reg[2]_0 (i_dma_n_40),
        .\FSM_sequential_b_fsm.fsm_cs_reg[2]_1 (i_cmd_fifo_n_4),
        .O({i_id_fifo_n_7,i_id_fifo_n_8,i_id_fifo_n_9,i_id_fifo_n_10}),
        .Q(rd_data),
        .S(i_req_fifo_n_3),
        .SS(SS),
        .\add_1_reg[3]_0 (empty),
        .\add_1_reg[3]_1 (sig_last_reg_out_reg),
        .aempty(aempty),
        .bad_config_error_i(bad_config_error_i),
        .clk(clk),
        .cmd_fifo_not_full(cmd_fifo_not_full),
        .\dma_addr_reg[28] ({i_id_fifo_n_44,i_id_fifo_n_45,i_id_fifo_n_46,i_id_fifo_n_47}),
        .\dma_addr_reg[31] ({i_id_fifo_n_48,i_id_fifo_n_49,i_id_fifo_n_50}),
        .\fifo_2_reg[1]_0 (i_id_fifo_n_58),
        .first_word_seen(first_word_seen),
        .fsm_cs(fsm_cs),
        .id_fifo_almost_empty_d1(id_fifo_almost_empty_d1),
        .id_fifo_not_full(id_fifo_not_full),
        .id_fifo_read(id_fifo_read),
        .id_fifo_read_d1(id_fifo_read_d1),
        .id_fifo_read_d1_reg(id_fifo_read_d1_reg_0),
        .id_fifo_read_d2(id_fifo_read_d2),
        .id_fifo_write(id_fifo_write),
        .in(dma_addr_reg),
        .not_full_1_reg_0(i_id_fifo_n_2),
        .not_full_1_reg_1(i_id_fifo_n_6),
        .not_full_1_reg_2({i_id_fifo_n_20,i_id_fifo_n_21,i_id_fifo_n_22,i_id_fifo_n_23}),
        .not_full_1_reg_3({i_id_fifo_n_24,i_id_fifo_n_25,i_id_fifo_n_26,i_id_fifo_n_27}),
        .not_full_1_reg_4({i_id_fifo_n_28,i_id_fifo_n_29,i_id_fifo_n_30,i_id_fifo_n_31}),
        .not_full_1_reg_5({i_id_fifo_n_32,i_id_fifo_n_33,i_id_fifo_n_34,i_id_fifo_n_35}),
        .not_full_1_reg_6({i_id_fifo_n_36,i_id_fifo_n_37,i_id_fifo_n_38,i_id_fifo_n_39}),
        .not_full_1_reg_7({i_id_fifo_n_40,i_id_fifo_n_41,i_id_fifo_n_42,i_id_fifo_n_43}),
        .one_word_bs_detected_reg(i_id_fifo_n_51),
        .one_word_bs_detected_reg_0(i_dma_n_41),
        .one_word_bs_detected_reg_1(one_word_bs_detected_reg_n_0),
        .out(out),
        .rd_avail(rd_avail),
        .recheck_id_reg_source(recheck_id_reg_source),
        .reset(reset),
        .two_word_bs_detected_reg(i_id_fifo_n_52),
        .two_word_bs_detected_reg_0(two_word_bs_detected_reg_n_0),
        .upper_segment_is_zero(upper_segment_is_zero),
        .v_dma_size_reg({v_dma_size_reg[22:15],v_dma_size_reg[13:11],v_dma_size_reg[9],v_dma_size_reg[5],v_dma_size_reg[3],v_dma_size_reg[1]}),
        .\v_dma_size_reg[16] ({i_id_fifo_n_11,i_id_fifo_n_12,i_id_fifo_n_13,i_id_fifo_n_14}),
        .\v_dma_size_reg[16]_0 (i_req_fifo_n_4),
        .\v_dma_size_reg[20] (i_id_fifo_n_15),
        .\v_dma_size_reg[20]_0 ({i_id_fifo_n_16,i_id_fifo_n_17,i_id_fifo_n_18,i_id_fifo_n_19}),
        .\v_dma_size_reg[22] ({i_id_fifo_n_56,i_id_fifo_n_57}),
        .\v_dma_size_reg[3] ({i_id_fifo_n_53,i_id_fifo_n_54}),
        .\v_dma_size_reg[5] (i_id_fifo_n_55));
  dfx_controller_setup_dfx_controller_0_0_glb_srl_fifo__parameterized1 i_req_fifo
       (.CO(i_req_fifo_n_10),
        .O({i_req_fifo_n_6,i_req_fifo_n_7,i_req_fifo_n_8,i_req_fifo_n_9}),
        .Q(rd_data),
        .S(i_req_fifo_n_3),
        .SS(SS),
        .clk(clk),
        .cmd_fifo_write(cmd_fifo_write),
        .\fifo_2_reg[15]_0 (i_req_fifo_n_4),
        .\fifo_2_reg[7]_0 (i_req_fifo_n_5),
        .\fifo_2_reg[9]_0 ({i_req_fifo_n_11,i_req_fifo_n_12,i_req_fifo_n_13,i_req_fifo_n_14}),
        .fsm_cs(fsm_cs),
        .id_fifo_not_full(id_fifo_not_full),
        .id_fifo_write(id_fifo_write),
        .in({vsm_VS_0_m_axis_status_tdata,vsm_VS_0_fetch_size}),
        .rd_avail(rd_avail),
        .ready_for_hw_trigger(ready_for_hw_trigger),
        .ready_for_hw_trigger_reg(i_req_fifo_n_15),
        .reqs_stored(reqs_stored),
        .v_dma_size_reg({v_dma_size_reg[14],v_dma_size_reg[10],v_dma_size_reg[8:6],v_dma_size_reg[4],v_dma_size_reg[2]}),
        .\v_dma_size_reg[4] ({i_id_fifo_n_53,i_id_fifo_n_54}),
        .\v_dma_size_reg[8] (i_id_fifo_n_55));
  FDRE #(
    .INIT(1'b0)) 
    id_fifo_almost_empty_d1_reg
       (.C(clk),
        .CE(1'b1),
        .D(aempty),
        .Q(id_fifo_almost_empty_d1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    id_fifo_read_d1_reg
       (.C(clk),
        .CE(1'b1),
        .D(id_fifo_read),
        .Q(id_fifo_read_d1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    id_fifo_read_d2_reg
       (.C(clk),
        .CE(1'b1),
        .D(id_fifo_read_d1),
        .Q(id_fifo_read_d2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    one_word_bs_detected_reg
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_51),
        .Q(one_word_bs_detected_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    recheck_id_reg_source_reg
       (.C(clk),
        .CE(1'b1),
        .D(recheck_id_reg_source0),
        .Q(recheck_id_reg_source),
        .R(1'b0));
  FDRE \rm_id_o_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_58),
        .Q(D[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    two_word_bs_detected_reg
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_52),
        .Q(two_word_bs_detected_reg_n_0),
        .R(1'b0));
  FDRE \upper_segment_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(v_dma_size[23]),
        .Q(upper_segment[0]),
        .R(id_fifo_write));
  FDRE \upper_segment_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(v_dma_size[24]),
        .Q(upper_segment[1]),
        .R(id_fifo_write));
  FDRE \upper_segment_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(v_dma_size[25]),
        .Q(upper_segment[2]),
        .R(id_fifo_write));
  FDRE \upper_segment_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(v_dma_size[26]),
        .Q(upper_segment[3]),
        .R(id_fifo_write));
  FDRE \upper_segment_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(v_dma_size[27]),
        .Q(upper_segment[4]),
        .R(id_fifo_write));
  FDRE \upper_segment_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(v_dma_size[28]),
        .Q(upper_segment[5]),
        .R(id_fifo_write));
  FDRE \upper_segment_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(v_dma_size[29]),
        .Q(upper_segment[6]),
        .R(id_fifo_write));
  FDRE \upper_segment_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(v_dma_size[30]),
        .Q(upper_segment[7]),
        .R(id_fifo_write));
  FDRE \upper_segment_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(v_dma_size[31]),
        .Q(upper_segment[8]),
        .R(id_fifo_write));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 v_dma_size0_carry
       (.CI(1'b0),
        .CO({v_dma_size0_carry_n_0,v_dma_size0_carry_n_1,v_dma_size0_carry_n_2,v_dma_size0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,v_dma_size_reg[2],1'b0}),
        .O(NLW_v_dma_size0_carry_O_UNCONNECTED[3:0]),
        .S({v_dma_size_reg[4:3],i_cmd_fifo_n_17,v_dma_size_reg[1]}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 v_dma_size0_carry__0
       (.CI(v_dma_size0_carry_n_0),
        .CO({v_dma_size0_carry__0_n_0,v_dma_size0_carry__0_n_1,v_dma_size0_carry__0_n_2,v_dma_size0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_v_dma_size0_carry__0_O_UNCONNECTED[3:0]),
        .S(v_dma_size_reg[8:5]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 v_dma_size0_carry__1
       (.CI(v_dma_size0_carry__0_n_0),
        .CO({v_dma_size0_carry__1_n_0,v_dma_size0_carry__1_n_1,v_dma_size0_carry__1_n_2,v_dma_size0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_v_dma_size0_carry__1_O_UNCONNECTED[3:0]),
        .S(v_dma_size_reg[12:9]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 v_dma_size0_carry__2
       (.CI(v_dma_size0_carry__1_n_0),
        .CO({v_dma_size0_carry__2_n_0,v_dma_size0_carry__2_n_1,v_dma_size0_carry__2_n_2,v_dma_size0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_v_dma_size0_carry__2_O_UNCONNECTED[3:0]),
        .S(v_dma_size_reg[16:13]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 v_dma_size0_carry__3
       (.CI(v_dma_size0_carry__2_n_0),
        .CO({v_dma_size0_carry__3_n_0,v_dma_size0_carry__3_n_1,v_dma_size0_carry__3_n_2,v_dma_size0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_v_dma_size0_carry__3_O_UNCONNECTED[3:0]),
        .S(v_dma_size_reg[20:17]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 v_dma_size0_carry__4
       (.CI(v_dma_size0_carry__3_n_0),
        .CO({v_dma_size0_carry__4_n_0,v_dma_size0_carry__4_n_1,v_dma_size0_carry__4_n_2,v_dma_size0_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({i_cmd_fifo_n_3,v_dma_size_reg[23],1'b0,1'b0}),
        .O({v_dma_size[24:23],NLW_v_dma_size0_carry__4_O_UNCONNECTED[1:0]}),
        .S({i_cmd_fifo_n_18,i_cmd_fifo_n_19,v_dma_size_reg[22:21]}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 v_dma_size0_carry__5
       (.CI(v_dma_size0_carry__4_n_0),
        .CO({v_dma_size0_carry__5_n_0,v_dma_size0_carry__5_n_1,v_dma_size0_carry__5_n_2,v_dma_size0_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI(v_dma_size_reg[27:24]),
        .O(v_dma_size[28:25]),
        .S({v_dma_size0_carry__5_i_1_n_0,v_dma_size0_carry__5_i_2_n_0,v_dma_size0_carry__5_i_3_n_0,v_dma_size0_carry__5_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    v_dma_size0_carry__5_i_1
       (.I0(v_dma_size_reg[27]),
        .I1(v_dma_size_reg[28]),
        .O(v_dma_size0_carry__5_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    v_dma_size0_carry__5_i_2
       (.I0(v_dma_size_reg[26]),
        .I1(v_dma_size_reg[27]),
        .O(v_dma_size0_carry__5_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    v_dma_size0_carry__5_i_3
       (.I0(v_dma_size_reg[25]),
        .I1(v_dma_size_reg[26]),
        .O(v_dma_size0_carry__5_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    v_dma_size0_carry__5_i_4
       (.I0(v_dma_size_reg[24]),
        .I1(v_dma_size_reg[25]),
        .O(v_dma_size0_carry__5_i_4_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 v_dma_size0_carry__6
       (.CI(v_dma_size0_carry__5_n_0),
        .CO({NLW_v_dma_size0_carry__6_CO_UNCONNECTED[3:2],v_dma_size0_carry__6_n_2,v_dma_size0_carry__6_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,v_dma_size_reg[29:28]}),
        .O({NLW_v_dma_size0_carry__6_O_UNCONNECTED[3],v_dma_size[31:29]}),
        .S({1'b0,v_dma_size0_carry__6_i_1_n_0,v_dma_size0_carry__6_i_2_n_0,v_dma_size0_carry__6_i_3_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    v_dma_size0_carry__6_i_1
       (.I0(v_dma_size_reg[30]),
        .I1(v_dma_size_reg[31]),
        .O(v_dma_size0_carry__6_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    v_dma_size0_carry__6_i_2
       (.I0(v_dma_size_reg[29]),
        .I1(v_dma_size_reg[30]),
        .O(v_dma_size0_carry__6_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    v_dma_size0_carry__6_i_3
       (.I0(v_dma_size_reg[28]),
        .I1(v_dma_size_reg[29]),
        .O(v_dma_size0_carry__6_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_9),
        .Q(v_dma_size_reg[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_8),
        .Q(v_dma_size_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_7),
        .Q(v_dma_size_reg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_14),
        .Q(v_dma_size_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_13),
        .Q(v_dma_size_reg[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_12),
        .Q(v_dma_size_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_11),
        .Q(v_dma_size_reg[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_19),
        .Q(v_dma_size_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_18),
        .Q(v_dma_size_reg[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_17),
        .Q(v_dma_size_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(i_req_fifo_n_9),
        .Q(v_dma_size_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_16),
        .Q(v_dma_size_reg[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(i_cmd_fifo_n_9),
        .Q(v_dma_size_reg[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(i_cmd_fifo_n_8),
        .Q(v_dma_size_reg[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(i_cmd_fifo_n_7),
        .Q(v_dma_size_reg[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(i_cmd_fifo_n_6),
        .Q(v_dma_size_reg[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(i_cmd_fifo_n_13),
        .Q(v_dma_size_reg[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(i_cmd_fifo_n_12),
        .Q(v_dma_size_reg[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(i_cmd_fifo_n_11),
        .Q(v_dma_size_reg[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(i_cmd_fifo_n_10),
        .Q(v_dma_size_reg[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(i_cmd_fifo_n_16),
        .Q(v_dma_size_reg[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(i_req_fifo_n_8),
        .Q(v_dma_size_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(i_cmd_fifo_n_15),
        .Q(v_dma_size_reg[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(i_cmd_fifo_n_14),
        .Q(v_dma_size_reg[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(i_req_fifo_n_7),
        .Q(v_dma_size_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(i_req_fifo_n_6),
        .Q(v_dma_size_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(i_req_fifo_n_14),
        .Q(v_dma_size_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(i_req_fifo_n_13),
        .Q(v_dma_size_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(i_req_fifo_n_12),
        .Q(v_dma_size_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(i_req_fifo_n_11),
        .Q(v_dma_size_reg[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \v_dma_size_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(i_id_fifo_n_10),
        .Q(v_dma_size_reg[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dfx_controller_setup_dfx_controller_0_0_icap_if_0" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dfx_controller_setup_dfx_controller_0_0_icap_if_0
   (cp0_vs_id,
    p_4_in,
    p_3_in,
    icap_csib,
    rd_en,
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ,
    cc_done_reg_0,
    icap_o,
    SS,
    clk,
    wr_en,
    din,
    icap_clk,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ,
    \gen_rd_b.doutb_reg_reg[1] ,
    empty,
    reset,
    icap_reset,
    icap_i);
  output cp0_vs_id;
  output p_4_in;
  output p_3_in;
  output icap_csib;
  output rd_en;
  output \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ;
  output cc_done_reg_0;
  output [31:0]icap_o;
  input [0:0]SS;
  input clk;
  input wr_en;
  input [33:0]din;
  input icap_clk;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ;
  input [0:0]\gen_rd_b.doutb_reg_reg[1] ;
  input empty;
  input reset;
  input icap_reset;
  input [1:0]icap_i;

  wire [0:0]SS;
  wire cc_done_i;
  wire cc_done_reg_0;
  wire cc_error_i;
  wire cfg_error_seen_i_1_n_0;
  wire cfg_error_seen_i_2_n_0;
  wire cfg_error_seen_i_3_n_0;
  wire cfg_error_seen_i_4_n_0;
  wire cfg_error_seen_i_5_n_0;
  wire cfg_error_seen_i_6_n_0;
  wire cfg_error_seen_i_7_n_0;
  wire cfg_error_seen_i_8_n_0;
  wire cfg_error_seen_reg_n_0;
  wire clk;
  wire cp0_vs_id;
  wire cp_bs_read;
  wire [3:0]cp_fsm_cs;
  wire \cp_fsm_cs[0]_i_2_n_0 ;
  wire \cp_fsm_cs[0]_i_3_n_0 ;
  wire \cp_fsm_cs[0]_i_4_n_0 ;
  wire \cp_fsm_cs[0]_i_5_n_0 ;
  wire \cp_fsm_cs[0]_i_6_n_0 ;
  wire \cp_fsm_cs[0]_i_7_n_0 ;
  wire \cp_fsm_cs[1]_i_2_n_0 ;
  wire \cp_fsm_cs[1]_i_3_n_0 ;
  wire \cp_fsm_cs[1]_i_4_n_0 ;
  wire \cp_fsm_cs[1]_i_5_n_0 ;
  wire \cp_fsm_cs[1]_i_6_n_0 ;
  wire \cp_fsm_cs[2]_i_2_n_0 ;
  wire \cp_fsm_cs[2]_i_3_n_0 ;
  wire [3:0]cp_fsm_ns;
  wire desync_needed;
  wire desync_needed_i_1_n_0;
  wire desync_needed_i_2_n_0;
  wire desync_needed_i_3_n_0;
  wire [33:0]din;
  wire [33:0]dout;
  wire empty;
  wire empty_0;
  wire fetch_error_seen;
  wire fetch_error_seen_i_1__0_n_0;
  wire fetch_error_seen_i_2_n_0;
  wire fetch_error_seen_on_first_word;
  wire fetch_error_seen_on_first_word_cmb;
  wire fetch_error_seen_on_first_word_i_1_n_0;
  wire fetch_error_seen_on_first_word_i_4_n_0;
  wire fetch_error_seen_on_first_word_i_5_n_0;
  wire fetch_error_seen_on_first_word_reg_n_0;
  wire fifo_read;
  wire full;
  wire \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ;
  wire [0:0]\gen_rd_b.doutb_reg_reg[1] ;
  wire i_bs_fifo_i_38_n_0;
  wire i_bs_fifo_i_39_n_0;
  wire i_bs_fifo_i_40_n_0;
  wire i_cdc_done_n_1;
  wire i_cdc_done_n_2;
  wire i_cdc_error_n_1;
  wire icap_clk;
  wire icap_csib;
  wire icap_csib_i_i_2_n_0;
  wire icap_csib_i_i_3_n_0;
  wire icap_csib_i_i_4_n_0;
  wire icap_csib_i_i_5_n_0;
  wire icap_csib_i_i_6_n_0;
  wire icap_csib_i_i_7_n_0;
  wire icap_csib_i_i_8_n_0;
  wire [1:0]icap_i;
  wire [31:0]icap_o;
  wire \icap_o_preswap[0]_i_2_n_0 ;
  wire \icap_o_preswap[0]_i_3_n_0 ;
  wire \icap_o_preswap[24]_i_10_n_0 ;
  wire \icap_o_preswap[24]_i_11_n_0 ;
  wire \icap_o_preswap[24]_i_12_n_0 ;
  wire \icap_o_preswap[24]_i_13_n_0 ;
  wire \icap_o_preswap[24]_i_14_n_0 ;
  wire \icap_o_preswap[24]_i_15_n_0 ;
  wire \icap_o_preswap[24]_i_16_n_0 ;
  wire \icap_o_preswap[24]_i_17_n_0 ;
  wire \icap_o_preswap[24]_i_1_n_0 ;
  wire \icap_o_preswap[24]_i_2_n_0 ;
  wire \icap_o_preswap[24]_i_3_n_0 ;
  wire \icap_o_preswap[24]_i_4_n_0 ;
  wire \icap_o_preswap[24]_i_5_n_0 ;
  wire \icap_o_preswap[24]_i_6_n_0 ;
  wire \icap_o_preswap[24]_i_7_n_0 ;
  wire \icap_o_preswap[24]_i_8_n_0 ;
  wire \icap_o_preswap[24]_i_9_n_0 ;
  wire \icap_o_preswap[28]_i_2_n_0 ;
  wire \icap_o_preswap[28]_i_3_n_0 ;
  wire \icap_o_preswap[28]_i_4_n_0 ;
  wire \icap_o_preswap[29]_i_2_n_0 ;
  wire \icap_o_preswap[29]_i_3_n_0 ;
  wire \icap_o_preswap[29]_i_4_n_0 ;
  wire icap_req_i02_out;
  wire icap_req_i_i_1_n_0;
  wire icap_req_i_i_2_n_0;
  wire icap_req_i_reg_n_0;
  wire icap_reset;
  wire icap_reset_ah;
  wire legacy_cfg_error;
  wire legacy_cfg_error0;
  wire legacy_cfg_error_i_1_n_0;
  wire legacy_cfg_error_i_3_n_0;
  wire legacy_cfg_error_i_4_n_0;
  wire [29:0]p_1_in__0;
  wire p_3_in;
  wire p_4_in;
  wire rd_en;
  wire rd_rst_busy;
  wire reset;
  wire wr_en;
  wire wr_rst_busy;
  wire [2:0]xpm_fifo_dout;
  wire xpm_fifo_empty;
  wire xpm_fifo_full;
  wire \NLW_blk_id_fifo.xpm_fifo_sync_inst_almost_empty_UNCONNECTED ;
  wire \NLW_blk_id_fifo.xpm_fifo_sync_inst_almost_full_UNCONNECTED ;
  wire \NLW_blk_id_fifo.xpm_fifo_sync_inst_data_valid_UNCONNECTED ;
  wire \NLW_blk_id_fifo.xpm_fifo_sync_inst_dbiterr_UNCONNECTED ;
  wire \NLW_blk_id_fifo.xpm_fifo_sync_inst_overflow_UNCONNECTED ;
  wire \NLW_blk_id_fifo.xpm_fifo_sync_inst_prog_empty_UNCONNECTED ;
  wire \NLW_blk_id_fifo.xpm_fifo_sync_inst_prog_full_UNCONNECTED ;
  wire \NLW_blk_id_fifo.xpm_fifo_sync_inst_rd_rst_busy_UNCONNECTED ;
  wire \NLW_blk_id_fifo.xpm_fifo_sync_inst_sbiterr_UNCONNECTED ;
  wire \NLW_blk_id_fifo.xpm_fifo_sync_inst_underflow_UNCONNECTED ;
  wire \NLW_blk_id_fifo.xpm_fifo_sync_inst_wr_ack_UNCONNECTED ;
  wire \NLW_blk_id_fifo.xpm_fifo_sync_inst_wr_rst_busy_UNCONNECTED ;
  wire [3:0]\NLW_blk_id_fifo.xpm_fifo_sync_inst_rd_data_count_UNCONNECTED ;
  wire [3:0]\NLW_blk_id_fifo.xpm_fifo_sync_inst_wr_data_count_UNCONNECTED ;
  wire NLW_i_bs_fifo_almost_empty_UNCONNECTED;
  wire NLW_i_bs_fifo_almost_full_UNCONNECTED;
  wire NLW_i_bs_fifo_data_valid_UNCONNECTED;
  wire NLW_i_bs_fifo_dbiterr_UNCONNECTED;
  wire NLW_i_bs_fifo_overflow_UNCONNECTED;
  wire NLW_i_bs_fifo_prog_empty_UNCONNECTED;
  wire NLW_i_bs_fifo_prog_full_UNCONNECTED;
  wire NLW_i_bs_fifo_sbiterr_UNCONNECTED;
  wire NLW_i_bs_fifo_underflow_UNCONNECTED;
  wire NLW_i_bs_fifo_wr_ack_UNCONNECTED;
  wire [0:0]NLW_i_bs_fifo_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_i_bs_fifo_wr_data_count_UNCONNECTED;

  (* CASCADE_HEIGHT = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_SYNC = "16'b0000011100000111" *) 
  (* FIFO_MEMORY_TYPE = "distributed" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PROG_EMPTY_THRESH = "7" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* P_COMMON_CLOCK = "1" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "1" *) 
  (* P_READ_MODE = "1" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "3" *) 
  (* READ_MODE = "fwft" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "3" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* XPM_MODULE = "TRUE" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_sync__parameterized3 \blk_id_fifo.xpm_fifo_sync_inst 
       (.almost_empty(\NLW_blk_id_fifo.xpm_fifo_sync_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_blk_id_fifo.xpm_fifo_sync_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_blk_id_fifo.xpm_fifo_sync_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_blk_id_fifo.xpm_fifo_sync_inst_dbiterr_UNCONNECTED ),
        .din({1'b0,\gen_rd_b.doutb_reg_reg[1] ,1'b0}),
        .dout(xpm_fifo_dout),
        .empty(xpm_fifo_empty),
        .full(xpm_fifo_full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(\NLW_blk_id_fifo.xpm_fifo_sync_inst_overflow_UNCONNECTED ),
        .prog_empty(\NLW_blk_id_fifo.xpm_fifo_sync_inst_prog_empty_UNCONNECTED ),
        .prog_full(\NLW_blk_id_fifo.xpm_fifo_sync_inst_prog_full_UNCONNECTED ),
        .rd_data_count(\NLW_blk_id_fifo.xpm_fifo_sync_inst_rd_data_count_UNCONNECTED [3:0]),
        .rd_en(fifo_read),
        .rd_rst_busy(\NLW_blk_id_fifo.xpm_fifo_sync_inst_rd_rst_busy_UNCONNECTED ),
        .rst(SS),
        .sbiterr(\NLW_blk_id_fifo.xpm_fifo_sync_inst_sbiterr_UNCONNECTED ),
        .sleep(1'b0),
        .underflow(\NLW_blk_id_fifo.xpm_fifo_sync_inst_underflow_UNCONNECTED ),
        .wr_ack(\NLW_blk_id_fifo.xpm_fifo_sync_inst_wr_ack_UNCONNECTED ),
        .wr_clk(clk),
        .wr_data_count(\NLW_blk_id_fifo.xpm_fifo_sync_inst_wr_data_count_UNCONNECTED [3:0]),
        .wr_en(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ),
        .wr_rst_busy(\NLW_blk_id_fifo.xpm_fifo_sync_inst_wr_rst_busy_UNCONNECTED ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \blk_output_fifos.data_out_fifo_i_34 
       (.I0(empty),
        .I1(xpm_fifo_full),
        .I2(full),
        .I3(wr_rst_busy),
        .O(rd_en));
  FDRE #(
    .INIT(1'b0)) 
    cc_done_reg
       (.C(clk),
        .CE(1'b1),
        .D(cc_done_i),
        .Q(p_4_in),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    cc_error_reg
       (.C(clk),
        .CE(1'b1),
        .D(i_cdc_done_n_2),
        .Q(p_3_in),
        .R(SS));
  LUT6 #(
    .INIT(64'hFFFFFFF0FFF2FFF0)) 
    cfg_error_seen_i_1
       (.I0(cfg_error_seen_i_2_n_0),
        .I1(desync_needed),
        .I2(cfg_error_seen_i_3_n_0),
        .I3(cfg_error_seen_i_4_n_0),
        .I4(cfg_error_seen_i_5_n_0),
        .I5(cfg_error_seen_i_6_n_0),
        .O(cfg_error_seen_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFF002000200020)) 
    cfg_error_seen_i_2
       (.I0(\icap_o_preswap[24]_i_16_n_0 ),
        .I1(cp_fsm_cs[3]),
        .I2(cp_fsm_cs[0]),
        .I3(\icap_o_preswap[29]_i_4_n_0 ),
        .I4(cfg_error_seen_i_7_n_0),
        .I5(i_bs_fifo_i_38_n_0),
        .O(cfg_error_seen_i_2_n_0));
  LUT6 #(
    .INIT(64'h000000A800000000)) 
    cfg_error_seen_i_3
       (.I0(cfg_error_seen_i_5_n_0),
        .I1(dout[1]),
        .I2(icap_req_i_reg_n_0),
        .I3(cp_fsm_cs[1]),
        .I4(\cp_fsm_cs[1]_i_4_n_0 ),
        .I5(\icap_o_preswap[28]_i_3_n_0 ),
        .O(cfg_error_seen_i_3_n_0));
  LUT6 #(
    .INIT(64'hA0A00000A0AC0000)) 
    cfg_error_seen_i_4
       (.I0(cfg_error_seen_i_8_n_0),
        .I1(icap_i[0]),
        .I2(cp_fsm_cs[1]),
        .I3(cp_fsm_cs[0]),
        .I4(cfg_error_seen_i_5_n_0),
        .I5(i_cdc_error_n_1),
        .O(cfg_error_seen_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'hAAAA0008)) 
    cfg_error_seen_i_5
       (.I0(icap_reset),
        .I1(icap_i[0]),
        .I2(icap_i[1]),
        .I3(legacy_cfg_error),
        .I4(cfg_error_seen_reg_n_0),
        .O(cfg_error_seen_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT5 #(
    .INIT(32'h000F1100)) 
    cfg_error_seen_i_6
       (.I0(cp_fsm_cs[0]),
        .I1(cp_fsm_cs[1]),
        .I2(\icap_o_preswap[29]_i_4_n_0 ),
        .I3(cp_fsm_cs[3]),
        .I4(cp_fsm_cs[2]),
        .O(cfg_error_seen_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT2 #(
    .INIT(4'hE)) 
    cfg_error_seen_i_7
       (.I0(fetch_error_seen_on_first_word_reg_n_0),
        .I1(cfg_error_seen_reg_n_0),
        .O(cfg_error_seen_i_7_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAA02)) 
    cfg_error_seen_i_8
       (.I0(\icap_o_preswap[28]_i_3_n_0 ),
        .I1(dout[1]),
        .I2(desync_needed),
        .I3(empty_0),
        .I4(rd_rst_busy),
        .I5(\cp_fsm_cs[0]_i_7_n_0 ),
        .O(cfg_error_seen_i_8_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cfg_error_seen_reg
       (.C(icap_clk),
        .CE(1'b1),
        .D(cfg_error_seen_i_1_n_0),
        .Q(cfg_error_seen_reg_n_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFAE)) 
    \cp_fsm_cs[0]_i_1 
       (.I0(\cp_fsm_cs[0]_i_2_n_0 ),
        .I1(\cp_fsm_cs[0]_i_3_n_0 ),
        .I2(\icap_o_preswap[24]_i_6_n_0 ),
        .I3(\cp_fsm_cs[0]_i_4_n_0 ),
        .I4(\cp_fsm_cs[0]_i_5_n_0 ),
        .O(cp_fsm_ns[0]));
  LUT6 #(
    .INIT(64'hFFA00000E4E40000)) 
    \cp_fsm_cs[0]_i_2 
       (.I0(cp_fsm_cs[1]),
        .I1(icap_req_i_reg_n_0),
        .I2(desync_needed),
        .I3(\cp_fsm_cs[0]_i_6_n_0 ),
        .I4(\icap_o_preswap[28]_i_3_n_0 ),
        .I5(dout[1]),
        .O(\cp_fsm_cs[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \cp_fsm_cs[0]_i_3 
       (.I0(cp_fsm_cs[2]),
        .I1(cp_fsm_cs[3]),
        .O(\cp_fsm_cs[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000005400000000)) 
    \cp_fsm_cs[0]_i_4 
       (.I0(cp_fsm_cs[0]),
        .I1(icap_req_i_reg_n_0),
        .I2(dout[1]),
        .I3(icap_i[0]),
        .I4(cp_fsm_cs[3]),
        .I5(cp_fsm_cs[2]),
        .O(\cp_fsm_cs[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF88888F888888)) 
    \cp_fsm_cs[0]_i_5 
       (.I0(\cp_fsm_cs[1]_i_3_n_0 ),
        .I1(\cp_fsm_cs[1]_i_4_n_0 ),
        .I2(cp_fsm_cs[0]),
        .I3(\icap_o_preswap[24]_i_5_n_0 ),
        .I4(cp_fsm_cs[1]),
        .I5(\cp_fsm_cs[0]_i_7_n_0 ),
        .O(\cp_fsm_cs[0]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT5 #(
    .INIT(32'h0008FFFF)) 
    \cp_fsm_cs[0]_i_6 
       (.I0(\icap_o_preswap[29]_i_4_n_0 ),
        .I1(cp_fsm_cs[1]),
        .I2(cfg_error_seen_reg_n_0),
        .I3(fetch_error_seen_on_first_word_reg_n_0),
        .I4(dout[0]),
        .O(\cp_fsm_cs[0]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT5 #(
    .INIT(32'h0003000A)) 
    \cp_fsm_cs[0]_i_7 
       (.I0(icap_req_i_reg_n_0),
        .I1(dout[0]),
        .I2(cp_fsm_cs[3]),
        .I3(cp_fsm_cs[2]),
        .I4(cp_fsm_cs[0]),
        .O(\cp_fsm_cs[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFAAAE)) 
    \cp_fsm_cs[1]_i_1 
       (.I0(\cp_fsm_cs[1]_i_2_n_0 ),
        .I1(\cp_fsm_cs[1]_i_3_n_0 ),
        .I2(\cp_fsm_cs[1]_i_4_n_0 ),
        .I3(dout[0]),
        .I4(\cp_fsm_cs[1]_i_5_n_0 ),
        .I5(\cp_fsm_cs[1]_i_6_n_0 ),
        .O(cp_fsm_ns[1]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \cp_fsm_cs[1]_i_2 
       (.I0(cp_fsm_cs[1]),
        .I1(cp_fsm_cs[0]),
        .I2(cp_fsm_cs[3]),
        .I3(cp_fsm_cs[2]),
        .I4(\icap_o_preswap[29]_i_4_n_0 ),
        .O(\cp_fsm_cs[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'h001C)) 
    \cp_fsm_cs[1]_i_3 
       (.I0(icap_i[0]),
        .I1(cp_fsm_cs[0]),
        .I2(cp_fsm_cs[2]),
        .I3(cp_fsm_cs[3]),
        .O(\cp_fsm_cs[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \cp_fsm_cs[1]_i_4 
       (.I0(rd_rst_busy),
        .I1(empty_0),
        .O(\cp_fsm_cs[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \cp_fsm_cs[1]_i_5 
       (.I0(cp_fsm_cs[0]),
        .I1(cp_fsm_cs[2]),
        .I2(cp_fsm_cs[3]),
        .I3(icap_i[0]),
        .I4(dout[1]),
        .I5(\cp_fsm_cs[1]_i_4_n_0 ),
        .O(\cp_fsm_cs[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8802FF008802AA00)) 
    \cp_fsm_cs[1]_i_6 
       (.I0(\cp_fsm_cs[0]_i_3_n_0 ),
        .I1(\cp_fsm_cs[1]_i_4_n_0 ),
        .I2(dout[1]),
        .I3(cp_fsm_cs[1]),
        .I4(cp_fsm_cs[0]),
        .I5(\icap_o_preswap[24]_i_8_n_0 ),
        .O(\cp_fsm_cs[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEFFEFEFEEEE)) 
    \cp_fsm_cs[2]_i_1 
       (.I0(\cp_fsm_cs[2]_i_2_n_0 ),
        .I1(\cp_fsm_cs[2]_i_3_n_0 ),
        .I2(\icap_o_preswap[24]_i_6_n_0 ),
        .I3(\icap_o_preswap[29]_i_4_n_0 ),
        .I4(cp_fsm_cs[3]),
        .I5(cp_fsm_cs[2]),
        .O(cp_fsm_ns[2]));
  LUT6 #(
    .INIT(64'h888F888F88FF88F8)) 
    \cp_fsm_cs[2]_i_2 
       (.I0(i_bs_fifo_i_38_n_0),
        .I1(dout[0]),
        .I2(cp_fsm_cs[1]),
        .I3(i_cdc_error_n_1),
        .I4(icap_i[0]),
        .I5(cp_fsm_cs[0]),
        .O(\cp_fsm_cs[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \cp_fsm_cs[2]_i_3 
       (.I0(\cp_fsm_cs[1]_i_4_n_0 ),
        .I1(cp_fsm_cs[3]),
        .I2(cp_fsm_cs[2]),
        .I3(cp_fsm_cs[0]),
        .I4(dout[0]),
        .I5(cp_fsm_cs[1]),
        .O(\cp_fsm_cs[2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h08000000)) 
    \cp_fsm_cs[3]_i_1 
       (.I0(cp_fsm_cs[1]),
        .I1(cp_fsm_cs[0]),
        .I2(cp_fsm_cs[3]),
        .I3(cp_fsm_cs[2]),
        .I4(\icap_o_preswap[29]_i_4_n_0 ),
        .O(cp_fsm_ns[3]));
  FDRE #(
    .INIT(1'b0)) 
    \cp_fsm_cs_reg[0] 
       (.C(icap_clk),
        .CE(1'b1),
        .D(cp_fsm_ns[0]),
        .Q(cp_fsm_cs[0]),
        .R(icap_reset_ah));
  FDRE #(
    .INIT(1'b0)) 
    \cp_fsm_cs_reg[1] 
       (.C(icap_clk),
        .CE(1'b1),
        .D(cp_fsm_ns[1]),
        .Q(cp_fsm_cs[1]),
        .R(icap_reset_ah));
  FDRE #(
    .INIT(1'b0)) 
    \cp_fsm_cs_reg[2] 
       (.C(icap_clk),
        .CE(1'b1),
        .D(cp_fsm_ns[2]),
        .Q(cp_fsm_cs[2]),
        .R(icap_reset_ah));
  FDRE #(
    .INIT(1'b0)) 
    \cp_fsm_cs_reg[3] 
       (.C(icap_clk),
        .CE(1'b1),
        .D(cp_fsm_ns[3]),
        .Q(cp_fsm_cs[3]),
        .R(icap_reset_ah));
  LUT5 #(
    .INIT(32'h888F8880)) 
    desync_needed_i_1
       (.I0(desync_needed_i_2_n_0),
        .I1(i_bs_fifo_i_38_n_0),
        .I2(desync_needed_i_3_n_0),
        .I3(cfg_error_seen_reg_n_0),
        .I4(desync_needed),
        .O(desync_needed_i_1_n_0));
  LUT6 #(
    .INIT(64'h1010100010101010)) 
    desync_needed_i_2
       (.I0(fetch_error_seen_on_first_word_reg_n_0),
        .I1(cfg_error_seen_reg_n_0),
        .I2(cp_fsm_cs[1]),
        .I3(legacy_cfg_error),
        .I4(icap_i[1]),
        .I5(icap_i[0]),
        .O(desync_needed_i_2_n_0));
  LUT6 #(
    .INIT(64'h57575555FF575555)) 
    desync_needed_i_3
       (.I0(\icap_o_preswap[29]_i_4_n_0 ),
        .I1(cp_fsm_cs[0]),
        .I2(i_cdc_error_n_1),
        .I3(i_bs_fifo_i_38_n_0),
        .I4(cp_fsm_cs[1]),
        .I5(fetch_error_seen_on_first_word_reg_n_0),
        .O(desync_needed_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    desync_needed_reg
       (.C(icap_clk),
        .CE(1'b1),
        .D(desync_needed_i_1_n_0),
        .Q(desync_needed),
        .R(icap_reset_ah));
  LUT4 #(
    .INIT(16'h00FE)) 
    fetch_error_seen_i_1__0
       (.I0(fetch_error_seen),
        .I1(i_bs_fifo_i_38_n_0),
        .I2(fetch_error_seen_i_2_n_0),
        .I3(fetch_error_seen_on_first_word),
        .O(fetch_error_seen_i_1__0_n_0));
  LUT6 #(
    .INIT(64'hF010101010101010)) 
    fetch_error_seen_i_2
       (.I0(icap_req_i_i_2_n_0),
        .I1(dout[0]),
        .I2(\icap_o_preswap[24]_i_16_n_0 ),
        .I3(icap_req_i_reg_n_0),
        .I4(cp_fsm_cs[1]),
        .I5(\cp_fsm_cs[0]_i_3_n_0 ),
        .O(fetch_error_seen_i_2_n_0));
  LUT3 #(
    .INIT(8'h0E)) 
    fetch_error_seen_on_first_word_i_1
       (.I0(fetch_error_seen_on_first_word_reg_n_0),
        .I1(fetch_error_seen_on_first_word_cmb),
        .I2(fetch_error_seen_on_first_word),
        .O(fetch_error_seen_on_first_word_i_1_n_0));
  LUT6 #(
    .INIT(64'h0001010000000000)) 
    fetch_error_seen_on_first_word_i_2
       (.I0(cp_fsm_cs[1]),
        .I1(\cp_fsm_cs[1]_i_4_n_0 ),
        .I2(cp_fsm_cs[3]),
        .I3(cp_fsm_cs[2]),
        .I4(cp_fsm_cs[0]),
        .I5(dout[1]),
        .O(fetch_error_seen_on_first_word_cmb));
  LUT6 #(
    .INIT(64'hFFFFFFFF55755555)) 
    fetch_error_seen_on_first_word_i_3
       (.I0(icap_reset),
        .I1(\icap_o_preswap[24]_i_14_n_0 ),
        .I2(fetch_error_seen_on_first_word_i_4_n_0),
        .I3(\cp_fsm_cs[1]_i_4_n_0 ),
        .I4(\cp_fsm_cs[0]_i_3_n_0 ),
        .I5(fetch_error_seen_on_first_word_i_5_n_0),
        .O(fetch_error_seen_on_first_word));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'hE)) 
    fetch_error_seen_on_first_word_i_4
       (.I0(cp_fsm_cs[0]),
        .I1(icap_req_i_reg_n_0),
        .O(fetch_error_seen_on_first_word_i_4_n_0));
  LUT6 #(
    .INIT(64'h00000000AA00B000)) 
    fetch_error_seen_on_first_word_i_5
       (.I0(\icap_o_preswap[28]_i_3_n_0 ),
        .I1(icap_req_i_i_2_n_0),
        .I2(icap_req_i_reg_n_0),
        .I3(dout[0]),
        .I4(dout[1]),
        .I5(\cp_fsm_cs[1]_i_4_n_0 ),
        .O(fetch_error_seen_on_first_word_i_5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    fetch_error_seen_on_first_word_reg
       (.C(icap_clk),
        .CE(1'b1),
        .D(fetch_error_seen_on_first_word_i_1_n_0),
        .Q(fetch_error_seen_on_first_word_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    fetch_error_seen_reg
       (.C(icap_clk),
        .CE(1'b1),
        .D(fetch_error_seen_i_1__0_n_0),
        .Q(fetch_error_seen),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    full_flag_i_2
       (.I0(p_4_in),
        .I1(cp0_vs_id),
        .O(cc_done_reg_0));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_SYNC_STAGES = "6" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) 
  (* FIFO_MEMORY_TYPE = "distributed" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_WRITE_DEPTH = "32" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* PROG_EMPTY_THRESH = "3" *) 
  (* PROG_FULL_THRESH = "9" *) 
  (* P_COMMON_CLOCK = "0" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "1" *) 
  (* P_READ_MODE = "0" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "1" *) 
  (* READ_DATA_WIDTH = "34" *) 
  (* READ_MODE = "std" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "34" *) 
  (* WR_DATA_COUNT_WIDTH = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  dfx_controller_setup_dfx_controller_0_0_xpm_fifo_async i_bs_fifo
       (.almost_empty(NLW_i_bs_fifo_almost_empty_UNCONNECTED),
        .almost_full(NLW_i_bs_fifo_almost_full_UNCONNECTED),
        .data_valid(NLW_i_bs_fifo_data_valid_UNCONNECTED),
        .dbiterr(NLW_i_bs_fifo_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty_0),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(NLW_i_bs_fifo_overflow_UNCONNECTED),
        .prog_empty(NLW_i_bs_fifo_prog_empty_UNCONNECTED),
        .prog_full(NLW_i_bs_fifo_prog_full_UNCONNECTED),
        .rd_clk(icap_clk),
        .rd_data_count(NLW_i_bs_fifo_rd_data_count_UNCONNECTED[0]),
        .rd_en(cp_bs_read),
        .rd_rst_busy(rd_rst_busy),
        .rst(SS),
        .sbiterr(NLW_i_bs_fifo_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .underflow(NLW_i_bs_fifo_underflow_UNCONNECTED),
        .wr_ack(NLW_i_bs_fifo_wr_ack_UNCONNECTED),
        .wr_clk(clk),
        .wr_data_count(NLW_i_bs_fifo_wr_data_count_UNCONNECTED[0]),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT5 #(
    .INIT(32'hFFFFABAA)) 
    i_bs_fifo_i_36
       (.I0(i_bs_fifo_i_38_n_0),
        .I1(cp_fsm_cs[3]),
        .I2(cp_fsm_cs[2]),
        .I3(i_bs_fifo_i_39_n_0),
        .I4(i_bs_fifo_i_40_n_0),
        .O(cp_bs_read));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    i_bs_fifo_i_37
       (.I0(wr_rst_busy),
        .I1(full),
        .I2(xpm_fifo_full),
        .O(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    i_bs_fifo_i_38
       (.I0(rd_rst_busy),
        .I1(empty_0),
        .I2(cp_fsm_cs[3]),
        .I3(cp_fsm_cs[2]),
        .I4(cp_fsm_cs[0]),
        .I5(dout[1]),
        .O(i_bs_fifo_i_38_n_0));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'hF1F0F000)) 
    i_bs_fifo_i_39
       (.I0(rd_rst_busy),
        .I1(empty_0),
        .I2(cp_fsm_cs[1]),
        .I3(cp_fsm_cs[0]),
        .I4(icap_req_i_reg_n_0),
        .O(i_bs_fifo_i_39_n_0));
  LUT6 #(
    .INIT(64'hAA000000AA303330)) 
    i_bs_fifo_i_40
       (.I0(\icap_o_preswap[28]_i_3_n_0 ),
        .I1(icap_req_i_i_2_n_0),
        .I2(icap_req_i_reg_n_0),
        .I3(dout[1]),
        .I4(dout[0]),
        .I5(\cp_fsm_cs[1]_i_4_n_0 ),
        .O(i_bs_fifo_i_40_n_0));
  dfx_controller_setup_dfx_controller_0_0_cdc_sync i_cdc_done
       (.\GENERATE_PULSE_P_S_CDC_OPEN_ENDED.P_IN_CROSS2SCNDRY_scndry_out_0 (i_cdc_done_n_2),
        .Q(cp_fsm_cs),
        .cc_done_i(cc_done_i),
        .cc_error_i(cc_error_i),
        .clk(clk),
        .dout(xpm_fifo_dout[2]),
        .empty(xpm_fifo_empty),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] (i_cdc_done_n_1),
        .icap_clk(icap_clk),
        .icap_i(icap_i[0]),
        .rd_en(fifo_read),
        .reset(reset));
  dfx_controller_setup_dfx_controller_0_0_cdc_sync_48 i_cdc_error
       (.\GENERATE_PULSE_P_S_CDC_OPEN_ENDED.REG_P_IN_cdc_from_0 (cfg_error_seen_reg_n_0),
        .Q(cp_fsm_cs),
        .cc_error_i(cc_error_i),
        .clk(clk),
        .\cp_fsm_cs_reg[3] (i_cdc_error_n_1),
        .icap_clk(icap_clk),
        .icap_i(icap_i[0]));
  LUT1 #(
    .INIT(2'h1)) 
    icap_csib_i_i_1
       (.I0(icap_reset),
        .O(icap_reset_ah));
  LUT5 #(
    .INIT(32'hFFFFAAEF)) 
    icap_csib_i_i_2
       (.I0(icap_csib_i_i_3_n_0),
        .I1(cp_fsm_cs[2]),
        .I2(desync_needed),
        .I3(\icap_o_preswap[29]_i_4_n_0 ),
        .I4(icap_csib_i_i_4_n_0),
        .O(icap_csib_i_i_2_n_0));
  LUT6 #(
    .INIT(64'hEEEEEEEFEEEFEFFF)) 
    icap_csib_i_i_3
       (.I0(icap_csib_i_i_5_n_0),
        .I1(cp_fsm_cs[3]),
        .I2(cp_fsm_cs[2]),
        .I3(cp_fsm_cs[1]),
        .I4(icap_req_i_reg_n_0),
        .I5(cp_fsm_cs[0]),
        .O(icap_csib_i_i_3_n_0));
  LUT6 #(
    .INIT(64'h000F0F0F0F0FEFEF)) 
    icap_csib_i_i_4
       (.I0(icap_csib_i_i_6_n_0),
        .I1(icap_i[0]),
        .I2(\icap_o_preswap[29]_i_4_n_0 ),
        .I3(dout[0]),
        .I4(cp_fsm_cs[1]),
        .I5(cp_fsm_cs[0]),
        .O(icap_csib_i_i_4_n_0));
  LUT6 #(
    .INIT(64'hFF00FFFFFF00FFA8)) 
    icap_csib_i_i_5
       (.I0(icap_csib_i_i_7_n_0),
        .I1(dout[1]),
        .I2(\icap_o_preswap[24]_i_17_n_0 ),
        .I3(icap_csib_i_i_8_n_0),
        .I4(cp_fsm_cs[2]),
        .I5(\cp_fsm_cs[1]_i_4_n_0 ),
        .O(icap_csib_i_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    icap_csib_i_i_6
       (.I0(empty_0),
        .I1(rd_rst_busy),
        .I2(dout[1]),
        .O(icap_csib_i_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    icap_csib_i_i_7
       (.I0(dout[0]),
        .I1(cp_fsm_cs[1]),
        .I2(cp_fsm_cs[0]),
        .O(icap_csib_i_i_7_n_0));
  LUT6 #(
    .INIT(64'h1110111111101010)) 
    icap_csib_i_i_8
       (.I0(desync_needed),
        .I1(cp_fsm_cs[2]),
        .I2(cfg_error_seen_reg_n_0),
        .I3(fetch_error_seen_on_first_word_reg_n_0),
        .I4(dout[1]),
        .I5(fetch_error_seen),
        .O(icap_csib_i_i_8_n_0));
  FDSE #(
    .INIT(1'b1)) 
    icap_csib_i_reg
       (.C(icap_clk),
        .CE(1'b1),
        .D(icap_csib_i_i_2_n_0),
        .Q(icap_csib),
        .S(icap_reset_ah));
  LUT6 #(
    .INIT(64'hFFFFFF40FF40FF40)) 
    \icap_o_preswap[0]_i_1 
       (.I0(cp_fsm_cs[1]),
        .I1(cp_fsm_cs[0]),
        .I2(\icap_o_preswap[24]_i_5_n_0 ),
        .I3(\icap_o_preswap[28]_i_2_n_0 ),
        .I4(dout[2]),
        .I5(\icap_o_preswap[0]_i_2_n_0 ),
        .O(p_1_in__0[0]));
  LUT6 #(
    .INIT(64'h000022220000F000)) 
    \icap_o_preswap[0]_i_2 
       (.I0(\icap_o_preswap[0]_i_3_n_0 ),
        .I1(\cp_fsm_cs[1]_i_4_n_0 ),
        .I2(\icap_o_preswap[24]_i_9_n_0 ),
        .I3(\icap_o_preswap[29]_i_4_n_0 ),
        .I4(cp_fsm_cs[3]),
        .I5(cp_fsm_cs[2]),
        .O(\icap_o_preswap[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \icap_o_preswap[0]_i_3 
       (.I0(cp_fsm_cs[1]),
        .I1(icap_req_i_reg_n_0),
        .I2(dout[1]),
        .I3(icap_i[0]),
        .O(\icap_o_preswap[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \icap_o_preswap[15]_i_1 
       (.I0(dout[17]),
        .I1(\icap_o_preswap[24]_i_3_n_0 ),
        .I2(\icap_o_preswap[28]_i_2_n_0 ),
        .O(p_1_in__0[15]));
  LUT2 #(
    .INIT(4'h2)) 
    \icap_o_preswap[24]_i_1 
       (.I0(\icap_o_preswap[24]_i_2_n_0 ),
        .I1(\icap_o_preswap[24]_i_3_n_0 ),
        .O(\icap_o_preswap[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000080000)) 
    \icap_o_preswap[24]_i_10 
       (.I0(fetch_error_seen_on_first_word_i_4_n_0),
        .I1(\cp_fsm_cs[1]_i_4_n_0 ),
        .I2(fetch_error_seen),
        .I3(cfg_error_seen_reg_n_0),
        .I4(cp_fsm_cs[1]),
        .I5(cp_fsm_cs[2]),
        .O(\icap_o_preswap[24]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \icap_o_preswap[24]_i_11 
       (.I0(\cp_fsm_cs[1]_i_4_n_0 ),
        .I1(icap_i[0]),
        .I2(dout[1]),
        .I3(legacy_cfg_error_i_4_n_0),
        .I4(cp_fsm_cs[2]),
        .I5(cp_fsm_cs[1]),
        .O(\icap_o_preswap[24]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \icap_o_preswap[24]_i_12 
       (.I0(cp_fsm_cs[2]),
        .I1(fetch_error_seen),
        .I2(dout[1]),
        .I3(cfg_error_seen_reg_n_0),
        .O(\icap_o_preswap[24]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \icap_o_preswap[24]_i_13 
       (.I0(cp_fsm_cs[0]),
        .I1(cp_fsm_cs[2]),
        .I2(cp_fsm_cs[3]),
        .I3(empty_0),
        .I4(rd_rst_busy),
        .O(\icap_o_preswap[24]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \icap_o_preswap[24]_i_14 
       (.I0(cp_fsm_cs[1]),
        .I1(dout[0]),
        .O(\icap_o_preswap[24]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \icap_o_preswap[24]_i_15 
       (.I0(cp_fsm_cs[0]),
        .I1(cp_fsm_cs[1]),
        .I2(dout[0]),
        .I3(cfg_error_seen_reg_n_0),
        .I4(fetch_error_seen_on_first_word_reg_n_0),
        .O(\icap_o_preswap[24]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \icap_o_preswap[24]_i_16 
       (.I0(dout[1]),
        .I1(empty_0),
        .I2(rd_rst_busy),
        .O(\icap_o_preswap[24]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \icap_o_preswap[24]_i_17 
       (.I0(fetch_error_seen),
        .I1(cfg_error_seen_reg_n_0),
        .O(\icap_o_preswap[24]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \icap_o_preswap[24]_i_2 
       (.I0(\icap_o_preswap[24]_i_4_n_0 ),
        .I1(\icap_o_preswap[24]_i_5_n_0 ),
        .I2(\icap_o_preswap[24]_i_6_n_0 ),
        .I3(\icap_o_preswap[24]_i_7_n_0 ),
        .I4(\icap_o_preswap[24]_i_8_n_0 ),
        .I5(\icap_o_preswap[24]_i_9_n_0 ),
        .O(\icap_o_preswap[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FAF8F8F8)) 
    \icap_o_preswap[24]_i_3 
       (.I0(\icap_o_preswap[29]_i_4_n_0 ),
        .I1(\icap_o_preswap[24]_i_10_n_0 ),
        .I2(\icap_o_preswap[24]_i_11_n_0 ),
        .I3(\icap_o_preswap[24]_i_12_n_0 ),
        .I4(i_bs_fifo_i_39_n_0),
        .I5(cp_fsm_cs[3]),
        .O(\icap_o_preswap[24]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF08080808080808)) 
    \icap_o_preswap[24]_i_4 
       (.I0(desync_needed),
        .I1(\icap_o_preswap[24]_i_13_n_0 ),
        .I2(\icap_o_preswap[24]_i_14_n_0 ),
        .I3(\icap_o_preswap[24]_i_8_n_0 ),
        .I4(\icap_o_preswap[24]_i_15_n_0 ),
        .I5(\icap_o_preswap[24]_i_16_n_0 ),
        .O(\icap_o_preswap[24]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'h0000EF00)) 
    \icap_o_preswap[24]_i_5 
       (.I0(legacy_cfg_error),
        .I1(icap_i[1]),
        .I2(icap_i[0]),
        .I3(cp_fsm_cs[2]),
        .I4(cp_fsm_cs[3]),
        .O(\icap_o_preswap[24]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \icap_o_preswap[24]_i_6 
       (.I0(cp_fsm_cs[0]),
        .I1(cp_fsm_cs[1]),
        .O(\icap_o_preswap[24]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \icap_o_preswap[24]_i_7 
       (.I0(cp_fsm_cs[2]),
        .I1(cp_fsm_cs[3]),
        .I2(icap_i[0]),
        .I3(icap_req_i_reg_n_0),
        .I4(dout[1]),
        .I5(\cp_fsm_cs[1]_i_4_n_0 ),
        .O(\icap_o_preswap[24]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'h00EF)) 
    \icap_o_preswap[24]_i_8 
       (.I0(legacy_cfg_error),
        .I1(icap_i[1]),
        .I2(icap_i[0]),
        .I3(cp_fsm_cs[3]),
        .O(\icap_o_preswap[24]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h5101510051000000)) 
    \icap_o_preswap[24]_i_9 
       (.I0(\icap_o_preswap[24]_i_17_n_0 ),
        .I1(dout[1]),
        .I2(\cp_fsm_cs[1]_i_4_n_0 ),
        .I3(cp_fsm_cs[1]),
        .I4(cp_fsm_cs[0]),
        .I5(icap_req_i_reg_n_0),
        .O(\icap_o_preswap[24]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \icap_o_preswap[28]_i_1 
       (.I0(dout[30]),
        .I1(\icap_o_preswap[24]_i_3_n_0 ),
        .I2(\icap_o_preswap[28]_i_2_n_0 ),
        .O(p_1_in__0[28]));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \icap_o_preswap[28]_i_2 
       (.I0(cp_fsm_cs[1]),
        .I1(dout[0]),
        .I2(\icap_o_preswap[28]_i_3_n_0 ),
        .I3(empty_0),
        .I4(rd_rst_busy),
        .I5(\icap_o_preswap[28]_i_4_n_0 ),
        .O(\icap_o_preswap[28]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \icap_o_preswap[28]_i_3 
       (.I0(cp_fsm_cs[3]),
        .I1(cp_fsm_cs[2]),
        .I2(cp_fsm_cs[0]),
        .O(\icap_o_preswap[28]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCCCCCCCCCCFC8C8C)) 
    \icap_o_preswap[28]_i_4 
       (.I0(fetch_error_seen),
        .I1(desync_needed),
        .I2(\icap_o_preswap[29]_i_4_n_0 ),
        .I3(fetch_error_seen_on_first_word_reg_n_0),
        .I4(dout[1]),
        .I5(cfg_error_seen_reg_n_0),
        .O(\icap_o_preswap[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEFFFEFFFEF)) 
    \icap_o_preswap[29]_i_1 
       (.I0(\icap_o_preswap[29]_i_2_n_0 ),
        .I1(\icap_o_preswap[29]_i_3_n_0 ),
        .I2(\icap_o_preswap[29]_i_4_n_0 ),
        .I3(cp_fsm_cs[3]),
        .I4(cp_fsm_cs[1]),
        .I5(cp_fsm_cs[2]),
        .O(p_1_in__0[29]));
  LUT6 #(
    .INIT(64'h00005C5CFFFC5C5C)) 
    \icap_o_preswap[29]_i_2 
       (.I0(cp_fsm_cs[1]),
        .I1(dout[1]),
        .I2(\cp_fsm_cs[1]_i_4_n_0 ),
        .I3(icap_i[0]),
        .I4(cp_fsm_cs[2]),
        .I5(cp_fsm_cs[0]),
        .O(\icap_o_preswap[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F300F3FFFFF1F7)) 
    \icap_o_preswap[29]_i_3 
       (.I0(cp_fsm_cs[1]),
        .I1(icap_req_i_reg_n_0),
        .I2(dout[31]),
        .I3(cp_fsm_cs[0]),
        .I4(\icap_o_preswap[24]_i_17_n_0 ),
        .I5(cp_fsm_cs[2]),
        .O(\icap_o_preswap[29]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    \icap_o_preswap[29]_i_4 
       (.I0(icap_i[0]),
        .I1(icap_i[1]),
        .I2(legacy_cfg_error),
        .O(\icap_o_preswap[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8888888888F88888)) 
    \icap_o_preswap[2]_i_1 
       (.I0(dout[4]),
        .I1(\icap_o_preswap[0]_i_2_n_0 ),
        .I2(\icap_o_preswap[29]_i_4_n_0 ),
        .I3(i_cdc_error_n_1),
        .I4(cp_fsm_cs[0]),
        .I5(cp_fsm_cs[1]),
        .O(p_1_in__0[2]));
  LUT6 #(
    .INIT(64'h8888888888F88888)) 
    \icap_o_preswap[3]_i_1 
       (.I0(dout[5]),
        .I1(\icap_o_preswap[0]_i_2_n_0 ),
        .I2(\icap_o_preswap[29]_i_4_n_0 ),
        .I3(i_cdc_error_n_1),
        .I4(cp_fsm_cs[0]),
        .I5(cp_fsm_cs[1]),
        .O(p_1_in__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[0] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(p_1_in__0[0]),
        .Q(icap_o[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[10] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[12]),
        .Q(icap_o[13]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[11] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[13]),
        .Q(icap_o[12]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[12] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[14]),
        .Q(icap_o[11]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[13] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[15]),
        .Q(icap_o[10]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[14] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[16]),
        .Q(icap_o[9]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[15] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(p_1_in__0[15]),
        .Q(icap_o[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[16] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[18]),
        .Q(icap_o[23]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[17] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[19]),
        .Q(icap_o[22]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[18] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[20]),
        .Q(icap_o[21]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[19] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[21]),
        .Q(icap_o[20]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[1] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[3]),
        .Q(icap_o[6]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[20] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[22]),
        .Q(icap_o[19]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[21] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[23]),
        .Q(icap_o[18]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[22] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[24]),
        .Q(icap_o[17]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[23] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[25]),
        .Q(icap_o[16]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[24] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[26]),
        .Q(icap_o[31]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[25] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[27]),
        .Q(icap_o[30]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[26] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[28]),
        .Q(icap_o[29]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[27] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[29]),
        .Q(icap_o[28]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[28] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(p_1_in__0[28]),
        .Q(icap_o[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[29] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(p_1_in__0[29]),
        .Q(icap_o[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[2] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(p_1_in__0[2]),
        .Q(icap_o[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[30] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[32]),
        .Q(icap_o[25]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[31] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[33]),
        .Q(icap_o[24]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[3] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(p_1_in__0[3]),
        .Q(icap_o[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[4] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[6]),
        .Q(icap_o[3]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[5] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[7]),
        .Q(icap_o[2]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[6] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[8]),
        .Q(icap_o[1]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[7] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[9]),
        .Q(icap_o[0]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[8] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[10]),
        .Q(icap_o[15]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \icap_o_preswap_reg[9] 
       (.C(icap_clk),
        .CE(\icap_o_preswap[24]_i_2_n_0 ),
        .D(dout[11]),
        .Q(icap_o[14]),
        .R(\icap_o_preswap[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAAABFFFF0000)) 
    icap_req_i_i_1
       (.I0(icap_req_i_i_2_n_0),
        .I1(empty_0),
        .I2(rd_rst_busy),
        .I3(dout[1]),
        .I4(icap_req_i02_out),
        .I5(icap_req_i_reg_n_0),
        .O(icap_req_i_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    icap_req_i_i_2
       (.I0(icap_i[0]),
        .I1(cp_fsm_cs[3]),
        .I2(cp_fsm_cs[2]),
        .I3(cp_fsm_cs[1]),
        .I4(cp_fsm_cs[0]),
        .O(icap_req_i_i_2_n_0));
  LUT6 #(
    .INIT(64'h0101000001010002)) 
    icap_req_i_i_3
       (.I0(cp_fsm_cs[0]),
        .I1(cp_fsm_cs[2]),
        .I2(cp_fsm_cs[3]),
        .I3(\cp_fsm_cs[1]_i_4_n_0 ),
        .I4(cp_fsm_cs[1]),
        .I5(dout[1]),
        .O(icap_req_i02_out));
  FDRE #(
    .INIT(1'b0)) 
    icap_req_i_reg
       (.C(icap_clk),
        .CE(1'b1),
        .D(icap_req_i_i_1_n_0),
        .Q(icap_req_i_reg_n_0),
        .R(icap_reset_ah));
  LUT4 #(
    .INIT(16'h0C08)) 
    legacy_cfg_error_i_1
       (.I0(legacy_cfg_error),
        .I1(icap_reset),
        .I2(icap_i[1]),
        .I3(legacy_cfg_error0),
        .O(legacy_cfg_error_i_1_n_0));
  LUT6 #(
    .INIT(64'hFF00000020202020)) 
    legacy_cfg_error_i_2
       (.I0(\cp_fsm_cs[1]_i_3_n_0 ),
        .I1(\cp_fsm_cs[1]_i_4_n_0 ),
        .I2(legacy_cfg_error_i_3_n_0),
        .I3(\cp_fsm_cs[0]_i_3_n_0 ),
        .I4(legacy_cfg_error_i_4_n_0),
        .I5(cp_fsm_cs[1]),
        .O(legacy_cfg_error0));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h74)) 
    legacy_cfg_error_i_3
       (.I0(dout[0]),
        .I1(dout[1]),
        .I2(icap_req_i_reg_n_0),
        .O(legacy_cfg_error_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h2)) 
    legacy_cfg_error_i_4
       (.I0(icap_req_i_reg_n_0),
        .I1(cp_fsm_cs[0]),
        .O(legacy_cfg_error_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    legacy_cfg_error_reg
       (.C(icap_clk),
        .CE(1'b1),
        .D(legacy_cfg_error_i_1_n_0),
        .Q(legacy_cfg_error),
        .R(1'b0));
  FDRE \vs_id_o_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(i_cdc_done_n_1),
        .Q(cp0_vs_id),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dfx_controller_setup_dfx_controller_0_0_vsm_VS_0" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dfx_controller_setup_dfx_controller_0_0_vsm_VS_0
   (vsm_VS_0_event_error,
    vsm_VS_0_fetch_size,
    vsm_VS_0_m_axis_status_tdata,
    ready_for_hw_trigger,
    vsm_VS_0_rm_shutdown_req,
    vsm_VS_0_rm_decouple,
    vsm_VS_0_rm_reset,
    clk,
    SS,
    vsm_VS_0_rm_shutdown_ack,
    reset,
    cp0_vs_id,
    p_4_in,
    bad_size_error_int,
    decompress_bad_size_error_flag_reg_0,
    decompress0_bad_format_error,
    D,
    vsm_VS_0_hw_triggers,
    p_0_in,
    p_3_in,
    full_flag_reg_0);
  output vsm_VS_0_event_error;
  output [0:0]vsm_VS_0_fetch_size;
  output [7:0]vsm_VS_0_m_axis_status_tdata;
  output ready_for_hw_trigger;
  output vsm_VS_0_rm_shutdown_req;
  output vsm_VS_0_rm_decouple;
  output vsm_VS_0_rm_reset;
  input clk;
  input [0:0]SS;
  input vsm_VS_0_rm_shutdown_ack;
  input reset;
  input cp0_vs_id;
  input p_4_in;
  input bad_size_error_int;
  input decompress_bad_size_error_flag_reg_0;
  input decompress0_bad_format_error;
  input [0:0]D;
  input [1:0]vsm_VS_0_hw_triggers;
  input p_0_in;
  input p_3_in;
  input full_flag_reg_0;

  wire [0:0]D;
  wire [0:0]SS;
  wire access_address;
  wire access_address_del;
  (* DONT_TOUCH *) wire axi_write_complete;
  (* DONT_TOUCH *) wire axi_write_complete__0;
  (* DONT_TOUCH *) wire axi_write_complete__1;
  wire \b_bs_info.b_rm_info_valid_del.i_rm_info_valid_del_n_0 ;
  wire \b_event_error_i_del.i_event_error_i_del_n_1 ;
  wire \b_event_error_i_del.i_event_error_i_del_n_2 ;
  wire \b_event_error_i_del.i_event_error_i_del_n_3 ;
  wire \b_rm_id_valid_del.i_rm_id_valid_del_n_1 ;
  wire \b_rm_id_valid_del.i_rm_id_valid_del_n_2 ;
  wire \b_rm_id_valid_del.i_rm_id_valid_del_n_3 ;
  wire \b_rm_id_valid_del.i_rm_id_valid_del_n_4 ;
  wire \b_rm_id_valid_del.i_rm_id_valid_del_n_5 ;
  wire \b_rm_id_valid_del.i_rm_id_valid_del_n_6 ;
  wire \b_rm_id_valid_del.i_rm_id_valid_del_n_7 ;
  wire \b_rm_id_valid_m1_del.i_rm_id_valid_m1_del_n_0 ;
  wire \b_rm_id_valid_m1_del.i_rm_id_valid_m1_del_n_2 ;
  wire \b_rm_id_valid_m1_del.i_rm_id_valid_m1_del_n_3 ;
  wire \b_rm_id_valid_m1_del.i_rm_id_valid_m1_del_n_4 ;
  wire \b_rm_id_valid_m1_del.i_rm_id_valid_m1_del_n_5 ;
  wire \b_rm_info_valid_del.i_rm_info_valid_del_n_6 ;
  wire \b_rm_info_valid_del.i_rm_info_valid_del_n_7 ;
  wire \b_rm_info_valid_del.i_rm_info_valid_del_n_8 ;
  wire \b_rm_info_valid_del.i_rm_info_valid_del_n_9 ;
  wire bad_config_error_flag_reg_n_0;
  wire bad_size_error_int;
  wire bs_info_valid_vec;
  wire clk;
  wire cp0_vs_id;
  wire cp_error_flag;
  wire [3:0]current_state;
  wire \current_state[1]_i_2_n_0 ;
  wire \current_state[2]_i_3_n_0 ;
  wire \current_state[2]_i_4_n_0 ;
  wire \current_state[3]_i_2_n_0 ;
  wire decompress0_bad_format_error;
  wire decompress_bad_format_error_flag;
  wire decompress_bad_size_error_flag;
  wire decompress_bad_size_error_flag_reg_0;
  wire fetch_error_flag_reg_n_0;
  wire full_flag_i_1_n_0;
  wire full_flag_i_3_n_0;
  wire full_flag_reg_0;
  wire full_flag_reg_n_0;
  wire i_trigger_manager_n_0;
  wire i_trigger_manager_n_2;
  wire in_post_reset_startup;
  wire in_post_reset_startup_i_1_n_0;
  wire [0:0]minusOp;
  wire [3:0]next_state;
  wire p_0_in;
  wire p_3_in;
  wire p_4_in;
  wire [7:1]plusOp;
  wire ready_for_hw_trigger;
  (* DONT_TOUCH *) wire [31:0]reg_wdata_i;
  wire reset;
  wire [7:0]reset_duration;
  wire \reset_duration[3]_i_2_n_0 ;
  wire \reset_duration[4]_i_2_n_0 ;
  wire \reset_duration[5]_i_2_n_0 ;
  wire \reset_duration[7]_i_4_n_0 ;
  wire \reset_duration_stored[7]_i_3_n_0 ;
  wire [7:0]reset_duration_stored__0;
  wire rm_decouple_i_i_1_n_0;
  wire rm_id_from_mem_vec;
  wire rm_id_valid;
  wire rm_id_valid_m1_vec;
  wire rm_id_valid_new_after_shutdown_vec;
  wire rm_info_valid_vec;
  wire rm_reset_i4;
  wire rm_reset_i_i_2_n_0;
  wire rm_reset_i_i_4_n_0;
  wire rm_shutdown_req_i_i_1_n_0;
  wire rm_shutdown_req_i_i_2_n_0;
  wire rm_shutdown_req_i_i_3_n_0;
  wire \status_encoded_field[0]_i_1_n_0 ;
  wire \status_encoded_field[1]_i_1_n_0 ;
  wire \status_encoded_field[2]_i_1_n_0 ;
  wire \status_error_field[0]_i_1_n_0 ;
  wire \status_error_field[1]_i_1_n_0 ;
  wire \status_error_field[2]_i_1_n_0 ;
  wire \status_error_field[3]_i_1_n_0 ;
  wire vsm_VS_0_event_error;
  wire [0:0]vsm_VS_0_fetch_size;
  wire [1:0]vsm_VS_0_hw_triggers;
  wire [7:0]vsm_VS_0_m_axis_status_tdata;
  wire vsm_VS_0_rm_decouple;
  wire vsm_VS_0_rm_reset;
  wire vsm_VS_0_rm_shutdown_ack;
  wire vsm_VS_0_rm_shutdown_req;

  dfx_controller_setup_dfx_controller_0_0_delay__parameterized2 \b_bs_info.b_in_shutdown_del.i_in_shutdown_del 
       (.SS(SS),
        .clk(clk));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_0 \b_bs_info.b_read_from_bs_info_registers_del.i_read_from_bs_info_registers_del 
       (.SS(SS),
        .clk(clk));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_1 \b_bs_info.b_rm_info_valid_del.i_rm_info_valid_del 
       (.SS(SS),
        .clk(clk),
        .out(\b_bs_info.b_rm_info_valid_del.i_rm_info_valid_del_n_0 ),
        .rm_info_valid_vec(rm_info_valid_vec));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_2 \b_bs_info.b_start_axi_read_del.i_start_axi_read_del 
       (.SS(SS),
        .clk(clk));
  FDRE #(
    .INIT(1'b0)) 
    \b_bs_info.fetch_size_reg[2] 
       (.C(clk),
        .CE(\b_bs_info.b_rm_info_valid_del.i_rm_info_valid_del_n_0 ),
        .D(1'b1),
        .Q(vsm_VS_0_fetch_size),
        .R(1'b0));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized1 \b_event_error_i_del.i_event_error_i_del 
       (.Q(current_state),
        .SR(decompress_bad_size_error_flag),
        .SS(SS),
        .clk(clk),
        .cp0_vs_id(cp0_vs_id),
        .cp_error_flag(cp_error_flag),
        .\current_state_reg[2] (\b_event_error_i_del.i_event_error_i_del_n_3 ),
        .\current_state_reg[3] (\b_event_error_i_del.i_event_error_i_del_n_1 ),
        .decompress_bad_format_error_flag(decompress_bad_format_error_flag),
        .decompress_bad_size_error_flag_reg(\b_event_error_i_del.i_event_error_i_del_n_2 ),
        .\opt_has_pipe.first_q_reg[0] (bad_config_error_flag_reg_n_0),
        .\opt_has_pipe.first_q_reg[0]_0 (fetch_error_flag_reg_n_0),
        .p_3_in(p_3_in),
        .p_4_in(p_4_in),
        .vsm_VS_0_event_error(vsm_VS_0_event_error));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized10 \b_rm_id_valid_del.i_rm_id_valid_del 
       (.D({\b_rm_id_valid_del.i_rm_id_valid_del_n_2 ,\b_rm_id_valid_del.i_rm_id_valid_del_n_3 ,\b_rm_id_valid_del.i_rm_id_valid_del_n_4 ,\b_rm_id_valid_del.i_rm_id_valid_del_n_5 ,\b_rm_id_valid_del.i_rm_id_valid_del_n_6 ,\b_rm_id_valid_del.i_rm_id_valid_del_n_7 }),
        .E(\b_rm_id_valid_del.i_rm_id_valid_del_n_1 ),
        .Q(current_state),
        .SS(SS),
        .bs_info_valid_vec(bs_info_valid_vec),
        .clk(clk),
        .\reset_duration_reg[3] (\reset_duration[3]_i_2_n_0 ),
        .\reset_duration_reg[4] (\reset_duration[4]_i_2_n_0 ),
        .\reset_duration_reg[5] (\current_state[3]_i_2_n_0 ),
        .\reset_duration_reg[5]_0 (plusOp[5:3]),
        .\reset_duration_reg[5]_1 (\reset_duration[5]_i_2_n_0 ),
        .\reset_duration_reg[7] ({reset_duration_stored__0[7],reset_duration_stored__0[5:3],reset_duration_stored__0[1:0]}),
        .\reset_duration_reg[7]_0 ({reset_duration[7:6],reset_duration[1:0]}),
        .\reset_duration_reg[7]_1 (\reset_duration[7]_i_4_n_0 ),
        .\reset_duration_reg[7]_2 (\reset_duration_stored[7]_i_3_n_0 ),
        .rm_id_valid(rm_id_valid),
        .rm_info_valid_vec(rm_info_valid_vec));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_3 \b_rm_id_valid_m1_del.i_rm_id_valid_m1_del 
       (.D(D),
        .Q(current_state),
        .SR(decompress_bad_size_error_flag),
        .SS(SS),
        .bad_config_error_flag_reg(bad_config_error_flag_reg_n_0),
        .bad_config_error_i_reg(\b_rm_id_valid_m1_del.i_rm_id_valid_m1_del_n_4 ),
        .bad_size_error_int(bad_size_error_int),
        .clk(clk),
        .cp0_vs_id(cp0_vs_id),
        .cp_error_flag(cp_error_flag),
        .cp_error_flag_reg(\b_rm_id_valid_m1_del.i_rm_id_valid_m1_del_n_5 ),
        .decompress0_bad_format_error(decompress0_bad_format_error),
        .decompress_bad_format_error_flag(decompress_bad_format_error_flag),
        .decompress_bad_format_error_flag_reg(\b_rm_id_valid_m1_del.i_rm_id_valid_m1_del_n_2 ),
        .decompress_bad_size_error_flag_reg(\b_rm_id_valid_m1_del.i_rm_id_valid_m1_del_n_0 ),
        .decompress_bad_size_error_flag_reg_0(decompress_bad_size_error_flag_reg_0),
        .decompress_bad_size_error_flag_reg_1(\b_event_error_i_del.i_event_error_i_del_n_1 ),
        .fetch_error_flag_reg(\b_rm_id_valid_m1_del.i_rm_id_valid_m1_del_n_3 ),
        .fetch_error_flag_reg_0(\b_event_error_i_del.i_event_error_i_del_n_3 ),
        .fetch_error_flag_reg_1(fetch_error_flag_reg_n_0),
        .\opt_has_pipe.first_q_reg[0] (rm_id_valid_new_after_shutdown_vec),
        .out(rm_id_valid_m1_vec),
        .p_0_in(p_0_in),
        .p_3_in(p_3_in),
        .rm_id_valid(rm_id_valid));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_4 \b_rm_info.b_in_shutdown_del.i_in_shutdown_del 
       (.SS(SS),
        .clk(clk));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_5 \b_rm_info.b_read_from_rm_info_registers_del.i_read_from_rm_info_registers_del 
       (.SS(SS),
        .clk(clk));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_6 \b_rm_info.b_rm_id_valid_del.i_rm_id_valid_del 
       (.SS(SS),
        .clk(clk),
        .rm_id_valid(rm_id_valid));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_7 \b_rm_info.b_start_axi_read_del.i_start_axi_read_del 
       (.SS(SS),
        .clk(clk));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized10_8 \b_rm_info_valid_del.i_rm_info_valid_del 
       (.D(next_state),
        .E(\b_rm_info_valid_del.i_rm_info_valid_del_n_8 ),
        .Q(current_state),
        .SS(SS),
        .bs_info_valid_vec(bs_info_valid_vec),
        .clk(clk),
        .\current_state_reg[0] (\b_rm_info_valid_del.i_rm_info_valid_del_n_9 ),
        .\current_state_reg[0]_0 (i_trigger_manager_n_0),
        .\current_state_reg[1] (\current_state[1]_i_2_n_0 ),
        .\current_state_reg[1]_0 (\b_event_error_i_del.i_event_error_i_del_n_3 ),
        .\current_state_reg[2] (i_trigger_manager_n_2),
        .\current_state_reg[3] (rm_reset_i_i_4_n_0),
        .\current_state_reg[3]_0 (\current_state[3]_i_2_n_0 ),
        .\current_state_reg[3]_1 (full_flag_reg_n_0),
        .reset(reset),
        .\reset_duration_reg[6] ({\b_rm_info_valid_del.i_rm_info_valid_del_n_6 ,\b_rm_info_valid_del.i_rm_info_valid_del_n_7 }),
        .\reset_duration_reg[6]_0 ({reset_duration_stored__0[6],reset_duration_stored__0[2]}),
        .\reset_duration_reg[6]_1 ({reset_duration[6],reset_duration[2:0]}),
        .\reset_duration_reg[6]_2 (\reset_duration_stored[7]_i_3_n_0 ),
        .\reset_duration_reg[6]_3 (\reset_duration[7]_i_4_n_0 ),
        .rm_info_valid_vec(rm_info_valid_vec),
        .rm_reset_i4(rm_reset_i4),
        .rm_reset_i_reg(rm_reset_i_i_2_n_0),
        .vsm_VS_0_rm_reset(vsm_VS_0_rm_reset),
        .vsm_VS_0_rm_shutdown_ack(vsm_VS_0_rm_shutdown_ack));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_9 \b_start_fetching_all_del.i_start_fetching_all_del 
       (.Q(current_state),
        .SS(SS),
        .clk(clk),
        .out(rm_id_valid_m1_vec));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_10 \b_start_fetching_all_except_rm_id_del.i_start_fetching_all_except_rm_id_del 
       (.Q(current_state),
        .SS(SS),
        .clk(clk),
        .out(rm_id_valid_new_after_shutdown_vec));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_11 \b_trigger_table.b_in_shutdown_del.i_in_shutdown_del 
       (.SS(SS),
        .clk(clk));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_12 \b_trigger_table.b_read_from_trigger_registers_del.i_read_from_trigger_registers_del 
       (.SS(SS),
        .clk(clk));
  dfx_controller_setup_dfx_controller_0_0_delay__parameterized2_13 \b_trigger_table.b_start_axi_read_del.i_start_axi_read_del 
       (.SS(SS),
        .clk(clk));
  FDRE #(
    .INIT(1'b0)) 
    \b_trigger_table.gen_address_reg.access_address_del_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(access_address),
        .Q(access_address_del),
        .R(1'b0));
  (* RTL_RAM_BITS = "2" *) 
  (* RTL_RAM_NAME = "i_vsm_VS_0/b_trigger_table.trigger2rm_table" *) 
  (* RTL_RAM_TYPE = "RAM_SP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "1" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "0" *) 
  RAM32X1S #(
    .INIT(32'h00000002)) 
    \b_trigger_table.trigger2rm_table_reg_0_1_0_0 
       (.A0(access_address_del),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .A4(1'b0),
        .D(reg_wdata_i[0]),
        .O(rm_id_from_mem_vec),
        .WCLK(clk),
        .WE(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    bad_config_error_flag_reg
       (.C(clk),
        .CE(1'b1),
        .D(\b_rm_id_valid_m1_del.i_rm_id_valid_m1_del_n_4 ),
        .Q(bad_config_error_flag_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cp_error_flag_reg
       (.C(clk),
        .CE(1'b1),
        .D(\b_rm_id_valid_m1_del.i_rm_id_valid_m1_del_n_5 ),
        .Q(cp_error_flag),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT5 #(
    .INIT(32'hFFFFBBFB)) 
    \current_state[1]_i_2 
       (.I0(current_state[0]),
        .I1(current_state[1]),
        .I2(p_4_in),
        .I3(cp0_vs_id),
        .I4(bad_config_error_flag_reg_n_0),
        .O(\current_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA2022AAAA)) 
    \current_state[2]_i_3 
       (.I0(current_state[2]),
        .I1(bad_config_error_flag_reg_n_0),
        .I2(cp0_vs_id),
        .I3(p_4_in),
        .I4(current_state[1]),
        .I5(current_state[0]),
        .O(\current_state[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \current_state[2]_i_4 
       (.I0(full_flag_reg_n_0),
        .I1(reset),
        .O(\current_state[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \current_state[3]_i_2 
       (.I0(current_state[0]),
        .I1(current_state[1]),
        .I2(current_state[2]),
        .I3(current_state[3]),
        .O(\current_state[3]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_state_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(next_state[0]),
        .Q(current_state[0]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \current_state_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(next_state[1]),
        .Q(current_state[1]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \current_state_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(next_state[2]),
        .Q(current_state[2]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \current_state_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(next_state[3]),
        .Q(current_state[3]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    decompress_bad_format_error_flag_reg
       (.C(clk),
        .CE(1'b1),
        .D(\b_rm_id_valid_m1_del.i_rm_id_valid_m1_del_n_2 ),
        .Q(decompress_bad_format_error_flag),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    decompress_bad_size_error_flag_reg
       (.C(clk),
        .CE(1'b1),
        .D(\b_rm_id_valid_m1_del.i_rm_id_valid_m1_del_n_0 ),
        .Q(decompress_bad_size_error_flag),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    fetch_error_flag_reg
       (.C(clk),
        .CE(1'b1),
        .D(\b_rm_id_valid_m1_del.i_rm_id_valid_m1_del_n_3 ),
        .Q(fetch_error_flag_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h3B3FFFFF08000000)) 
    full_flag_i_1
       (.I0(\b_event_error_i_del.i_event_error_i_del_n_2 ),
        .I1(\b_event_error_i_del.i_event_error_i_del_n_3 ),
        .I2(bad_config_error_flag_reg_n_0),
        .I3(full_flag_reg_0),
        .I4(full_flag_i_3_n_0),
        .I5(full_flag_reg_n_0),
        .O(full_flag_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h2)) 
    full_flag_i_3
       (.I0(current_state[1]),
        .I1(current_state[0]),
        .O(full_flag_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    full_flag_reg
       (.C(clk),
        .CE(1'b1),
        .D(full_flag_i_1_n_0),
        .Q(full_flag_reg_n_0),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(reg_wdata_i[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(reg_wdata_i[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(reg_wdata_i[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(reg_wdata_i[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(reg_wdata_i[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(reg_wdata_i[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(reg_wdata_i[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(reg_wdata_i[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(reg_wdata_i[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(reg_wdata_i[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(reg_wdata_i[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(reg_wdata_i[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(reg_wdata_i[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(reg_wdata_i[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(reg_wdata_i[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(reg_wdata_i[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(reg_wdata_i[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(reg_wdata_i[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(reg_wdata_i[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(reg_wdata_i[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(reg_wdata_i[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(reg_wdata_i[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(reg_wdata_i[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(reg_wdata_i[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(reg_wdata_i[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(reg_wdata_i[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(axi_write_complete__0));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(axi_write_complete__1));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(axi_write_complete));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(reg_wdata_i[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(reg_wdata_i[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(reg_wdata_i[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(reg_wdata_i[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(reg_wdata_i[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(reg_wdata_i[22]));
  dfx_controller_setup_dfx_controller_0_0_trigger_manager i_trigger_manager
       (.Q(current_state),
        .SS(SS),
        .access_address(access_address),
        .clk(clk),
        .\current_state_reg[2] (\current_state[2]_i_3_n_0 ),
        .\current_state_reg[2]_0 (\current_state[2]_i_4_n_0 ),
        .not_full_1_reg(ready_for_hw_trigger),
        .reset(reset),
        .vsm_VS_0_hw_triggers(vsm_VS_0_hw_triggers),
        .vsm_VS_0_rm_shutdown_ack(vsm_VS_0_rm_shutdown_ack),
        .vsm_VS_0_rm_shutdown_ack_0(i_trigger_manager_n_0),
        .vsm_VS_0_rm_shutdown_ack_1(i_trigger_manager_n_2));
  LUT6 #(
    .INIT(64'hFEBFFFFF0000FFFF)) 
    in_post_reset_startup_i_1
       (.I0(current_state[2]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .I3(current_state[0]),
        .I4(reset),
        .I5(in_post_reset_startup),
        .O(in_post_reset_startup_i_1_n_0));
  FDRE #(
    .INIT(1'b1)) 
    in_post_reset_startup_reg
       (.C(clk),
        .CE(1'b1),
        .D(in_post_reset_startup_i_1_n_0),
        .Q(in_post_reset_startup),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ready_for_hw_trigger_reg
       (.C(clk),
        .CE(1'b1),
        .D(rm_reset_i4),
        .Q(ready_for_hw_trigger),
        .R(SS));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT4 #(
    .INIT(16'h5556)) 
    \reset_duration[3]_i_2 
       (.I0(reset_duration[3]),
        .I1(reset_duration[2]),
        .I2(reset_duration[1]),
        .I3(reset_duration[0]),
        .O(\reset_duration[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT5 #(
    .INIT(32'h55555556)) 
    \reset_duration[4]_i_2 
       (.I0(reset_duration[4]),
        .I1(reset_duration[0]),
        .I2(reset_duration[1]),
        .I3(reset_duration[2]),
        .I4(reset_duration[3]),
        .O(\reset_duration[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555556)) 
    \reset_duration[5]_i_2 
       (.I0(reset_duration[5]),
        .I1(reset_duration[3]),
        .I2(reset_duration[2]),
        .I3(reset_duration[1]),
        .I4(reset_duration[0]),
        .I5(reset_duration[4]),
        .O(\reset_duration[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \reset_duration[7]_i_4 
       (.I0(reset_duration[3]),
        .I1(reset_duration[2]),
        .I2(reset_duration[1]),
        .I3(reset_duration[0]),
        .I4(reset_duration[4]),
        .I5(reset_duration[5]),
        .O(\reset_duration[7]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \reset_duration_reg[0] 
       (.C(clk),
        .CE(\b_rm_id_valid_del.i_rm_id_valid_del_n_1 ),
        .D(\b_rm_id_valid_del.i_rm_id_valid_del_n_7 ),
        .Q(reset_duration[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_duration_reg[1] 
       (.C(clk),
        .CE(\b_rm_id_valid_del.i_rm_id_valid_del_n_1 ),
        .D(\b_rm_id_valid_del.i_rm_id_valid_del_n_6 ),
        .Q(reset_duration[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_duration_reg[2] 
       (.C(clk),
        .CE(\b_rm_id_valid_del.i_rm_id_valid_del_n_1 ),
        .D(\b_rm_info_valid_del.i_rm_info_valid_del_n_7 ),
        .Q(reset_duration[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_duration_reg[3] 
       (.C(clk),
        .CE(\b_rm_id_valid_del.i_rm_id_valid_del_n_1 ),
        .D(\b_rm_id_valid_del.i_rm_id_valid_del_n_5 ),
        .Q(reset_duration[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_duration_reg[4] 
       (.C(clk),
        .CE(\b_rm_id_valid_del.i_rm_id_valid_del_n_1 ),
        .D(\b_rm_id_valid_del.i_rm_id_valid_del_n_4 ),
        .Q(reset_duration[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_duration_reg[5] 
       (.C(clk),
        .CE(\b_rm_id_valid_del.i_rm_id_valid_del_n_1 ),
        .D(\b_rm_id_valid_del.i_rm_id_valid_del_n_3 ),
        .Q(reset_duration[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_duration_reg[6] 
       (.C(clk),
        .CE(\b_rm_id_valid_del.i_rm_id_valid_del_n_1 ),
        .D(\b_rm_info_valid_del.i_rm_info_valid_del_n_6 ),
        .Q(reset_duration[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_duration_reg[7] 
       (.C(clk),
        .CE(\b_rm_id_valid_del.i_rm_id_valid_del_n_1 ),
        .D(\b_rm_id_valid_del.i_rm_id_valid_del_n_2 ),
        .Q(reset_duration[7]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \reset_duration_stored[0]_i_1 
       (.I0(reset_duration[0]),
        .O(minusOp));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \reset_duration_stored[1]_i_1 
       (.I0(reset_duration[1]),
        .I1(reset_duration[0]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \reset_duration_stored[2]_i_1 
       (.I0(reset_duration[2]),
        .I1(reset_duration[0]),
        .I2(reset_duration[1]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \reset_duration_stored[3]_i_1 
       (.I0(reset_duration[3]),
        .I1(reset_duration[1]),
        .I2(reset_duration[0]),
        .I3(reset_duration[2]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \reset_duration_stored[4]_i_1 
       (.I0(reset_duration[4]),
        .I1(reset_duration[3]),
        .I2(reset_duration[2]),
        .I3(reset_duration[0]),
        .I4(reset_duration[1]),
        .O(plusOp[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \reset_duration_stored[5]_i_1 
       (.I0(reset_duration[5]),
        .I1(reset_duration[4]),
        .I2(reset_duration[1]),
        .I3(reset_duration[0]),
        .I4(reset_duration[2]),
        .I5(reset_duration[3]),
        .O(plusOp[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \reset_duration_stored[6]_i_1 
       (.I0(reset_duration[6]),
        .I1(\reset_duration_stored[7]_i_3_n_0 ),
        .O(plusOp[6]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \reset_duration_stored[7]_i_2 
       (.I0(\reset_duration_stored[7]_i_3_n_0 ),
        .I1(reset_duration[6]),
        .I2(reset_duration[7]),
        .O(plusOp[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \reset_duration_stored[7]_i_3 
       (.I0(reset_duration[4]),
        .I1(reset_duration[1]),
        .I2(reset_duration[0]),
        .I3(reset_duration[2]),
        .I4(reset_duration[3]),
        .I5(reset_duration[5]),
        .O(\reset_duration_stored[7]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \reset_duration_stored_reg[0] 
       (.C(clk),
        .CE(\b_rm_info_valid_del.i_rm_info_valid_del_n_8 ),
        .D(minusOp),
        .Q(reset_duration_stored__0[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_duration_stored_reg[1] 
       (.C(clk),
        .CE(\b_rm_info_valid_del.i_rm_info_valid_del_n_8 ),
        .D(plusOp[1]),
        .Q(reset_duration_stored__0[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_duration_stored_reg[2] 
       (.C(clk),
        .CE(\b_rm_info_valid_del.i_rm_info_valid_del_n_8 ),
        .D(plusOp[2]),
        .Q(reset_duration_stored__0[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_duration_stored_reg[3] 
       (.C(clk),
        .CE(\b_rm_info_valid_del.i_rm_info_valid_del_n_8 ),
        .D(plusOp[3]),
        .Q(reset_duration_stored__0[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_duration_stored_reg[4] 
       (.C(clk),
        .CE(\b_rm_info_valid_del.i_rm_info_valid_del_n_8 ),
        .D(plusOp[4]),
        .Q(reset_duration_stored__0[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_duration_stored_reg[5] 
       (.C(clk),
        .CE(\b_rm_info_valid_del.i_rm_info_valid_del_n_8 ),
        .D(plusOp[5]),
        .Q(reset_duration_stored__0[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_duration_stored_reg[6] 
       (.C(clk),
        .CE(\b_rm_info_valid_del.i_rm_info_valid_del_n_8 ),
        .D(plusOp[6]),
        .Q(reset_duration_stored__0[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_duration_stored_reg[7] 
       (.C(clk),
        .CE(\b_rm_info_valid_del.i_rm_info_valid_del_n_8 ),
        .D(plusOp[7]),
        .Q(reset_duration_stored__0[7]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0400FFFF)) 
    rm_decouple_i_i_1
       (.I0(in_post_reset_startup),
        .I1(current_state[2]),
        .I2(current_state[3]),
        .I3(reset),
        .I4(full_flag_reg_n_0),
        .O(rm_decouple_i_i_1_n_0));
  FDRE #(
    .INIT(1'b1)) 
    rm_decouple_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(rm_decouple_i_i_1_n_0),
        .Q(vsm_VS_0_rm_decouple),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rm_id_reg[0] 
       (.C(clk),
        .CE(rm_id_valid_m1_vec),
        .D(rm_id_from_mem_vec),
        .Q(vsm_VS_0_m_axis_status_tdata[7]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h1)) 
    rm_reset_i_i_2
       (.I0(current_state[1]),
        .I1(current_state[2]),
        .O(rm_reset_i_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'h04)) 
    rm_reset_i_i_4
       (.I0(reset_duration[6]),
        .I1(\reset_duration[7]_i_4_n_0 ),
        .I2(reset_duration[7]),
        .O(rm_reset_i_i_4_n_0));
  FDRE #(
    .INIT(1'b1)) 
    rm_reset_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(\b_rm_info_valid_del.i_rm_info_valid_del_n_9 ),
        .Q(vsm_VS_0_rm_reset),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'hE222EEFF)) 
    rm_shutdown_req_i_i_1
       (.I0(vsm_VS_0_rm_shutdown_req),
        .I1(rm_shutdown_req_i_i_2_n_0),
        .I2(rm_shutdown_req_i_i_3_n_0),
        .I3(reset),
        .I4(full_flag_reg_n_0),
        .O(rm_shutdown_req_i_i_1_n_0));
  LUT6 #(
    .INIT(64'h77777F777FF777F7)) 
    rm_shutdown_req_i_i_2
       (.I0(full_flag_reg_n_0),
        .I1(reset),
        .I2(current_state[0]),
        .I3(current_state[3]),
        .I4(current_state[1]),
        .I5(current_state[2]),
        .O(rm_shutdown_req_i_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    rm_shutdown_req_i_i_3
       (.I0(current_state[3]),
        .I1(current_state[0]),
        .I2(current_state[2]),
        .I3(current_state[1]),
        .O(rm_shutdown_req_i_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rm_shutdown_req_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(rm_shutdown_req_i_i_1_n_0),
        .Q(vsm_VS_0_rm_shutdown_req),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT5 #(
    .INIT(32'hA8A8CE02)) 
    \status_encoded_field[0]_i_1 
       (.I0(full_flag_reg_n_0),
        .I1(current_state[1]),
        .I2(current_state[2]),
        .I3(current_state[0]),
        .I4(current_state[3]),
        .O(\status_encoded_field[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT5 #(
    .INIT(32'hABAB020E)) 
    \status_encoded_field[1]_i_1 
       (.I0(full_flag_reg_n_0),
        .I1(current_state[1]),
        .I2(current_state[2]),
        .I3(current_state[0]),
        .I4(current_state[3]),
        .O(\status_encoded_field[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT4 #(
    .INIT(16'hBB8E)) 
    \status_encoded_field[2]_i_1 
       (.I0(full_flag_reg_n_0),
        .I1(current_state[3]),
        .I2(current_state[1]),
        .I3(current_state[2]),
        .O(\status_encoded_field[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \status_encoded_field_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\status_encoded_field[0]_i_1_n_0 ),
        .Q(vsm_VS_0_m_axis_status_tdata[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \status_encoded_field_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\status_encoded_field[1]_i_1_n_0 ),
        .Q(vsm_VS_0_m_axis_status_tdata[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \status_encoded_field_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\status_encoded_field[2]_i_1_n_0 ),
        .Q(vsm_VS_0_m_axis_status_tdata[2]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000FFBAFF00)) 
    \status_error_field[0]_i_1 
       (.I0(cp_error_flag),
        .I1(cp0_vs_id),
        .I2(p_3_in),
        .I3(bad_config_error_flag_reg_n_0),
        .I4(fetch_error_flag_reg_n_0),
        .I5(decompress_bad_format_error_flag),
        .O(\status_error_field[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00FF000000F200F2)) 
    \status_error_field[1]_i_1 
       (.I0(p_3_in),
        .I1(cp0_vs_id),
        .I2(cp_error_flag),
        .I3(decompress_bad_format_error_flag),
        .I4(bad_config_error_flag_reg_n_0),
        .I5(fetch_error_flag_reg_n_0),
        .O(\status_error_field[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00FF00F200FF0000)) 
    \status_error_field[2]_i_1 
       (.I0(p_3_in),
        .I1(cp0_vs_id),
        .I2(cp_error_flag),
        .I3(decompress_bad_format_error_flag),
        .I4(fetch_error_flag_reg_n_0),
        .I5(bad_config_error_flag_reg_n_0),
        .O(\status_error_field[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEEFEAAAAAAAA)) 
    \status_error_field[3]_i_1 
       (.I0(decompress_bad_format_error_flag),
        .I1(fetch_error_flag_reg_n_0),
        .I2(p_3_in),
        .I3(cp0_vs_id),
        .I4(cp_error_flag),
        .I5(bad_config_error_flag_reg_n_0),
        .O(\status_error_field[3]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \status_error_field_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\status_error_field[0]_i_1_n_0 ),
        .Q(vsm_VS_0_m_axis_status_tdata[3]),
        .S(decompress_bad_size_error_flag));
  FDSE #(
    .INIT(1'b0)) 
    \status_error_field_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\status_error_field[1]_i_1_n_0 ),
        .Q(vsm_VS_0_m_axis_status_tdata[4]),
        .S(decompress_bad_size_error_flag));
  FDSE #(
    .INIT(1'b0)) 
    \status_error_field_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\status_error_field[2]_i_1_n_0 ),
        .Q(vsm_VS_0_m_axis_status_tdata[5]),
        .S(decompress_bad_size_error_flag));
  FDRE #(
    .INIT(1'b0)) 
    \status_error_field_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\status_error_field[3]_i_1_n_0 ),
        .Q(vsm_VS_0_m_axis_status_tdata[6]),
        .R(decompress_bad_size_error_flag));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dma" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma
   (out,
    m_axi_mem_arsize,
    m_axi_mem_arburst,
    m_axi_mem_arvalid,
    D,
    s_axis_mm2s_cmd_tready,
    recheck_id_reg_source0,
    first_word_seen_reg,
    sig_last_reg_out_reg,
    E,
    \USE_SINGLE_REG.sig_regfifo_empty_reg_reg ,
    m_axi_mem_rready,
    sig_last_reg_out_reg_0,
    m_axi_mem_araddr,
    m_axi_mem_arlen,
    reset,
    clk,
    sig_last_reg_out_reg_1,
    first_word_seen,
    id_fifo_write,
    Q,
    fsm_cs,
    \FSM_sequential_b_fsm.fsm_cs[2]_i_3 ,
    cmd_avail,
    m_axi_mem_rlast,
    m_axi_mem_rvalid,
    m_axi_mem_rresp,
    m_axi_mem_rdata,
    m_axi_mem_arready,
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] );
  output out;
  output [0:0]m_axi_mem_arsize;
  output [0:0]m_axi_mem_arburst;
  output m_axi_mem_arvalid;
  output [33:0]D;
  output s_axis_mm2s_cmd_tready;
  output recheck_id_reg_source0;
  output first_word_seen_reg;
  output sig_last_reg_out_reg;
  output [0:0]E;
  output [0:0]\USE_SINGLE_REG.sig_regfifo_empty_reg_reg ;
  output m_axi_mem_rready;
  output sig_last_reg_out_reg_0;
  output [31:0]m_axi_mem_araddr;
  output [7:0]m_axi_mem_arlen;
  input reset;
  input clk;
  input sig_last_reg_out_reg_1;
  input first_word_seen;
  input id_fifo_write;
  input [0:0]Q;
  input [2:0]fsm_cs;
  input \FSM_sequential_b_fsm.fsm_cs[2]_i_3 ;
  input cmd_avail;
  input m_axi_mem_rlast;
  input m_axi_mem_rvalid;
  input [0:0]m_axi_mem_rresp;
  input [31:0]m_axi_mem_rdata;
  input m_axi_mem_arready;
  input [55:0]\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] ;

  wire [33:0]D;
  wire [0:0]E;
  wire \FSM_sequential_b_fsm.fsm_cs[2]_i_3 ;
  wire [0:0]Q;
  wire [55:0]\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] ;
  wire [0:0]\USE_SINGLE_REG.sig_regfifo_empty_reg_reg ;
  wire clk;
  wire cmd_avail;
  wire first_word_seen;
  wire first_word_seen_reg;
  wire [2:0]fsm_cs;
  wire id_fifo_write;
  wire [31:0]m_axi_mem_araddr;
  wire [0:0]m_axi_mem_arburst;
  wire [7:0]m_axi_mem_arlen;
  wire m_axi_mem_arready;
  wire [0:0]m_axi_mem_arsize;
  wire m_axi_mem_arvalid;
  wire [31:0]m_axi_mem_rdata;
  wire m_axi_mem_rlast;
  wire m_axi_mem_rready;
  wire [0:0]m_axi_mem_rresp;
  wire m_axi_mem_rvalid;
  wire out;
  wire recheck_id_reg_source0;
  wire reset;
  wire s_axis_mm2s_cmd_tready;
  wire sig_last_reg_out_reg;
  wire sig_last_reg_out_reg_0;
  wire sig_last_reg_out_reg_1;

  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_mm2s_full_wrap \GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER 
       (.D(D),
        .E(E),
        .\FSM_sequential_b_fsm.fsm_cs[2]_i_3 (\FSM_sequential_b_fsm.fsm_cs[2]_i_3 ),
        .Q(Q),
        .\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] (\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] ),
        .\USE_SINGLE_REG.sig_regfifo_empty_reg_reg (\USE_SINGLE_REG.sig_regfifo_empty_reg_reg ),
        .clk(clk),
        .cmd_avail(cmd_avail),
        .first_word_seen(first_word_seen),
        .first_word_seen_reg(first_word_seen_reg),
        .fsm_cs(fsm_cs),
        .id_fifo_write(id_fifo_write),
        .m_axi_mem_araddr(m_axi_mem_araddr),
        .m_axi_mem_arburst(m_axi_mem_arburst),
        .m_axi_mem_arlen(m_axi_mem_arlen),
        .m_axi_mem_arready(m_axi_mem_arready),
        .m_axi_mem_arsize(m_axi_mem_arsize),
        .m_axi_mem_arvalid(m_axi_mem_arvalid),
        .m_axi_mem_rdata(m_axi_mem_rdata),
        .m_axi_mem_rlast(m_axi_mem_rlast),
        .m_axi_mem_rready(m_axi_mem_rready),
        .m_axi_mem_rresp(m_axi_mem_rresp),
        .m_axi_mem_rvalid(m_axi_mem_rvalid),
        .out(out),
        .recheck_id_reg_source0(recheck_id_reg_source0),
        .reset(reset),
        .s_axis_mm2s_cmd_tready(s_axis_mm2s_cmd_tready),
        .sig_last_reg_out_reg(sig_last_reg_out_reg),
        .sig_last_reg_out_reg_0(sig_last_reg_out_reg_0),
        .sig_last_reg_out_reg_1(sig_last_reg_out_reg_1));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dma_addr_cntl" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_addr_cntl
   (out,
    FIFO_Full_reg,
    m_axi_mem_arsize,
    m_axi_mem_arburst,
    m_axi_mem_arvalid,
    sig_init_done,
    sig_inhibit_rdy_n,
    FIFO_Full_reg_0,
    m_axi_mem_araddr,
    m_axi_mem_arlen,
    SR,
    clk,
    sig_init_done_reg,
    sig_mstr2addr_cmd_valid,
    sig_cmd_stat_rst_user_reg_n_cdc_from,
    m_axi_mem_arready,
    in);
  output out;
  output FIFO_Full_reg;
  output [0:0]m_axi_mem_arsize;
  output [0:0]m_axi_mem_arburst;
  output m_axi_mem_arvalid;
  output sig_init_done;
  output sig_inhibit_rdy_n;
  output FIFO_Full_reg_0;
  output [31:0]m_axi_mem_araddr;
  output [7:0]m_axi_mem_arlen;
  input [0:0]SR;
  input clk;
  input sig_init_done_reg;
  input sig_mstr2addr_cmd_valid;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;
  input m_axi_mem_arready;
  input [41:0]in;

  wire FIFO_Full_reg;
  wire FIFO_Full_reg_0;
  wire \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_49 ;
  wire \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_5 ;
  wire [0:0]SR;
  wire clk;
  wire [41:0]in;
  wire [31:0]m_axi_mem_araddr;
  wire [0:0]m_axi_mem_arburst;
  wire [7:0]m_axi_mem_arlen;
  wire m_axi_mem_arready;
  wire [0:0]m_axi_mem_arsize;
  wire m_axi_mem_arvalid;
  wire sig_addr2rsc_calc_error;
  wire sig_addr_reg_empty;
  wire sig_addr_reg_full;
  wire [50:4]sig_aq_fifo_data_out;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_inhibit_rdy_n;
  wire sig_init_done;
  wire sig_init_done_reg;
  wire sig_mstr2addr_cmd_valid;
  wire \sig_next_addr_reg[31]_i_1_n_0 ;
  (* RTL_KEEP = "true" *) (* equivalent_register_removal = "no" *) wire sig_posted_to_axi;
  (* RTL_KEEP = "true" *) (* equivalent_register_removal = "no" *) wire sig_posted_to_axi_2;
  wire sig_push_addr_reg1_out;

  assign out = sig_posted_to_axi;
  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_fifo__parameterized1 \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO 
       (.FIFO_Full_reg(FIFO_Full_reg),
        .FIFO_Full_reg_0(FIFO_Full_reg_0),
        .\INFERRED_GEN.cnt_i_reg[2] (\GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_49 ),
        .SR(SR),
        .clk(clk),
        .in(in),
        .out({sig_aq_fifo_data_out[50],sig_aq_fifo_data_out[47],sig_aq_fifo_data_out[45],sig_aq_fifo_data_out[43:4]}),
        .sig_addr_reg_empty(sig_addr_reg_empty),
        .sig_calc_error_reg_reg(\GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_5 ),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_inhibit_rdy_n_reg_0(sig_inhibit_rdy_n),
        .sig_init_done(sig_init_done),
        .sig_init_done_reg_0(sig_init_done_reg),
        .sig_mstr2addr_cmd_valid(sig_mstr2addr_cmd_valid),
        .sig_push_addr_reg1_out(sig_push_addr_reg1_out));
  FDSE #(
    .INIT(1'b0)) 
    sig_addr_reg_empty_reg
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(1'b0),
        .Q(sig_addr_reg_empty),
        .S(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    sig_addr_reg_full_reg
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(1'b1),
        .Q(sig_addr_reg_full),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    sig_addr_valid_reg_reg
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(\GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_5 ),
        .Q(m_axi_mem_arvalid),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    sig_calc_error_reg_reg
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[50]),
        .Q(sig_addr2rsc_calc_error),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h40FF)) 
    \sig_next_addr_reg[31]_i_1 
       (.I0(sig_addr2rsc_calc_error),
        .I1(sig_addr_reg_full),
        .I2(m_axi_mem_arready),
        .I3(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .O(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[0] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[4]),
        .Q(m_axi_mem_araddr[0]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[10] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[14]),
        .Q(m_axi_mem_araddr[10]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[11] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[15]),
        .Q(m_axi_mem_araddr[11]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[12] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[16]),
        .Q(m_axi_mem_araddr[12]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[13] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[17]),
        .Q(m_axi_mem_araddr[13]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[14] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[18]),
        .Q(m_axi_mem_araddr[14]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[15] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[19]),
        .Q(m_axi_mem_araddr[15]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[16] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[20]),
        .Q(m_axi_mem_araddr[16]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[17] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[21]),
        .Q(m_axi_mem_araddr[17]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[18] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[22]),
        .Q(m_axi_mem_araddr[18]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[19] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[23]),
        .Q(m_axi_mem_araddr[19]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[1] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[5]),
        .Q(m_axi_mem_araddr[1]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[20] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[24]),
        .Q(m_axi_mem_araddr[20]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[21] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[25]),
        .Q(m_axi_mem_araddr[21]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[22] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[26]),
        .Q(m_axi_mem_araddr[22]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[23] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[27]),
        .Q(m_axi_mem_araddr[23]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[24] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[28]),
        .Q(m_axi_mem_araddr[24]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[25] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[29]),
        .Q(m_axi_mem_araddr[25]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[26] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[30]),
        .Q(m_axi_mem_araddr[26]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[27] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[31]),
        .Q(m_axi_mem_araddr[27]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[28] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[32]),
        .Q(m_axi_mem_araddr[28]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[29] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[33]),
        .Q(m_axi_mem_araddr[29]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[2] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[6]),
        .Q(m_axi_mem_araddr[2]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[30] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[34]),
        .Q(m_axi_mem_araddr[30]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[31] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[35]),
        .Q(m_axi_mem_araddr[31]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[3] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[7]),
        .Q(m_axi_mem_araddr[3]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[4] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[8]),
        .Q(m_axi_mem_araddr[4]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[5] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[9]),
        .Q(m_axi_mem_araddr[5]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[6] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[10]),
        .Q(m_axi_mem_araddr[6]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[7] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[11]),
        .Q(m_axi_mem_araddr[7]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[8] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[12]),
        .Q(m_axi_mem_araddr[8]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_addr_reg_reg[9] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[13]),
        .Q(m_axi_mem_araddr[9]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_burst_reg_reg[0] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[47]),
        .Q(m_axi_mem_arburst),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_len_reg_reg[0] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[36]),
        .Q(m_axi_mem_arlen[0]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_len_reg_reg[1] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[37]),
        .Q(m_axi_mem_arlen[1]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_len_reg_reg[2] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[38]),
        .Q(m_axi_mem_arlen[2]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_len_reg_reg[3] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[39]),
        .Q(m_axi_mem_arlen[3]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_len_reg_reg[4] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[40]),
        .Q(m_axi_mem_arlen[4]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_len_reg_reg[5] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[41]),
        .Q(m_axi_mem_arlen[5]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_len_reg_reg[6] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[42]),
        .Q(m_axi_mem_arlen[6]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_len_reg_reg[7] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[43]),
        .Q(m_axi_mem_arlen[7]),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_next_size_reg_reg[1] 
       (.C(clk),
        .CE(sig_push_addr_reg1_out),
        .D(sig_aq_fifo_data_out[45]),
        .Q(m_axi_mem_arsize),
        .R(\sig_next_addr_reg[31]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    sig_posted_to_axi_2_reg
       (.C(clk),
        .CE(1'b1),
        .D(\GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_49 ),
        .Q(sig_posted_to_axi_2),
        .R(1'b0));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    sig_posted_to_axi_reg
       (.C(clk),
        .CE(1'b1),
        .D(\GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO_n_49 ),
        .Q(sig_posted_to_axi),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dma_cmd_status" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_cmd_status
   (sig_reset_reg,
    sig_init_done,
    sig_cmd2mstr_cmd_valid,
    s_axis_mm2s_cmd_tready,
    sig_stat2rsc_status_ready,
    E,
    sig_init_reg2_reg,
    sig_init_reg2_reg_0,
    sig_calc_error_reg_reg,
    Q,
    SR,
    clk,
    \USE_SINGLE_REG.sig_regfifo_full_reg_reg ,
    cmd_avail,
    sig_cmd_stat_rst_user_reg_n_cdc_from,
    sig_init_done_0,
    sig_init_done_1,
    sig_rsc2stat_status_valid,
    sig_calc_error_reg_reg_0,
    sig_calc_error_reg_reg_1,
    sig_calc_error_reg_reg_2,
    sig_calc_error_reg_reg_3,
    sig_push_input_reg11_out,
    in,
    sig_regfifo_empty_reg0,
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] );
  output sig_reset_reg;
  output sig_init_done;
  output sig_cmd2mstr_cmd_valid;
  output s_axis_mm2s_cmd_tready;
  output sig_stat2rsc_status_ready;
  output [0:0]E;
  output sig_init_reg2_reg;
  output sig_init_reg2_reg_0;
  output sig_calc_error_reg_reg;
  output [56:0]Q;
  input [0:0]SR;
  input clk;
  input \USE_SINGLE_REG.sig_regfifo_full_reg_reg ;
  input cmd_avail;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;
  input sig_init_done_0;
  input sig_init_done_1;
  input sig_rsc2stat_status_valid;
  input sig_calc_error_reg_reg_0;
  input sig_calc_error_reg_reg_1;
  input sig_calc_error_reg_reg_2;
  input sig_calc_error_reg_reg_3;
  input sig_push_input_reg11_out;
  input [0:0]in;
  input sig_regfifo_empty_reg0;
  input [55:0]\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] ;

  wire [0:0]E;
  wire I_CMD_FIFO_n_5;
  wire [56:0]Q;
  wire [0:0]SR;
  wire [55:0]\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] ;
  wire \USE_SINGLE_REG.sig_regfifo_full_reg_reg ;
  wire clk;
  wire cmd_avail;
  wire [0:0]in;
  wire s_axis_mm2s_cmd_tready;
  wire sig_calc_error_reg_reg;
  wire sig_calc_error_reg_reg_0;
  wire sig_calc_error_reg_reg_1;
  wire sig_calc_error_reg_reg_2;
  wire sig_calc_error_reg_reg_3;
  wire sig_cmd2mstr_cmd_valid;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_init_done;
  wire sig_init_done_0;
  wire sig_init_done_1;
  wire sig_init_done_2;
  wire sig_init_reg2_reg;
  wire sig_init_reg2_reg_0;
  wire sig_push_input_reg11_out;
  wire sig_regfifo_empty_reg0;
  wire sig_reset_reg;
  wire sig_rsc2stat_status_valid;
  wire sig_stat2rsc_status_ready;

  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_fifo__parameterized0 \GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO 
       (.SR(SR),
        .clk(clk),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_init_done(sig_init_done_2),
        .sig_init_done_reg_0(I_CMD_FIFO_n_5),
        .sig_rsc2stat_status_valid(sig_rsc2stat_status_valid),
        .sig_stat2rsc_status_ready(sig_stat2rsc_status_ready));
  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_fifo I_CMD_FIFO
       (.E(E),
        .Q(Q),
        .SR(SR),
        .\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 (\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] ),
        .\USE_SINGLE_REG.sig_regfifo_full_reg_reg_0 (\USE_SINGLE_REG.sig_regfifo_full_reg_reg ),
        .clk(clk),
        .cmd_avail(cmd_avail),
        .in(in),
        .s_axis_mm2s_cmd_tready(s_axis_mm2s_cmd_tready),
        .sig_calc_error_reg_reg(sig_calc_error_reg_reg),
        .sig_calc_error_reg_reg_0(sig_calc_error_reg_reg_0),
        .sig_calc_error_reg_reg_1(sig_calc_error_reg_reg_1),
        .sig_calc_error_reg_reg_2(sig_calc_error_reg_reg_2),
        .sig_calc_error_reg_reg_3(sig_calc_error_reg_reg_3),
        .sig_cmd2mstr_cmd_valid(sig_cmd2mstr_cmd_valid),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_init_done(sig_init_done),
        .sig_init_done_0(sig_init_done_0),
        .sig_init_done_1(sig_init_done_1),
        .sig_init_done_2(sig_init_done_2),
        .sig_init_reg2_reg_0(I_CMD_FIFO_n_5),
        .sig_init_reg2_reg_1(sig_init_reg2_reg),
        .sig_init_reg2_reg_2(sig_init_reg2_reg_0),
        .sig_init_reg_reg_0(sig_reset_reg),
        .sig_push_input_reg11_out(sig_push_input_reg11_out),
        .sig_regfifo_empty_reg0(sig_regfifo_empty_reg0));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dma_fifo" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_fifo
   (sig_init_reg_reg_0,
    sig_init_done,
    sig_cmd2mstr_cmd_valid,
    s_axis_mm2s_cmd_tready,
    E,
    sig_init_reg2_reg_0,
    sig_init_reg2_reg_1,
    sig_init_reg2_reg_2,
    sig_calc_error_reg_reg,
    Q,
    SR,
    clk,
    \USE_SINGLE_REG.sig_regfifo_full_reg_reg_0 ,
    cmd_avail,
    sig_cmd_stat_rst_user_reg_n_cdc_from,
    sig_init_done_2,
    sig_init_done_0,
    sig_init_done_1,
    sig_calc_error_reg_reg_0,
    sig_calc_error_reg_reg_1,
    sig_calc_error_reg_reg_2,
    sig_calc_error_reg_reg_3,
    sig_push_input_reg11_out,
    in,
    sig_regfifo_empty_reg0,
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 );
  output sig_init_reg_reg_0;
  output sig_init_done;
  output sig_cmd2mstr_cmd_valid;
  output s_axis_mm2s_cmd_tready;
  output [0:0]E;
  output sig_init_reg2_reg_0;
  output sig_init_reg2_reg_1;
  output sig_init_reg2_reg_2;
  output sig_calc_error_reg_reg;
  output [56:0]Q;
  input [0:0]SR;
  input clk;
  input \USE_SINGLE_REG.sig_regfifo_full_reg_reg_0 ;
  input cmd_avail;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;
  input sig_init_done_2;
  input sig_init_done_0;
  input sig_init_done_1;
  input sig_calc_error_reg_reg_0;
  input sig_calc_error_reg_reg_1;
  input sig_calc_error_reg_reg_2;
  input sig_calc_error_reg_reg_3;
  input sig_push_input_reg11_out;
  input [0:0]in;
  input sig_regfifo_empty_reg0;
  input [55:0]\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 ;

  wire [0:0]E;
  wire \I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2 ;
  wire [56:0]Q;
  wire [0:0]SR;
  wire [55:0]\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 ;
  wire \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1_n_0 ;
  wire \USE_SINGLE_REG.sig_regfifo_full_reg_reg_0 ;
  wire clk;
  wire cmd_avail;
  wire [0:0]in;
  wire s_axis_mm2s_cmd_tready;
  wire sig_calc_error_reg_reg;
  wire sig_calc_error_reg_reg_0;
  wire sig_calc_error_reg_reg_1;
  wire sig_calc_error_reg_reg_2;
  wire sig_calc_error_reg_reg_3;
  wire sig_cmd2mstr_cmd_valid;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_init_done;
  wire sig_init_done_0;
  wire sig_init_done_1;
  wire sig_init_done_2;
  wire sig_init_done_i_1__2_n_0;
  wire sig_init_reg2_reg_0;
  wire sig_init_reg2_reg_1;
  wire sig_init_reg2_reg_2;
  wire sig_init_reg_reg_0;
  wire sig_push_input_reg11_out;
  wire sig_regfifo_empty_reg0;

  LUT2 #(
    .INIT(4'h8)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg[63]_i_1 
       (.I0(s_axis_mm2s_cmd_tready),
        .I1(cmd_avail),
        .O(E));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [0]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[10] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [10]),
        .Q(Q[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[11] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [11]),
        .Q(Q[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[12] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [12]),
        .Q(Q[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[13] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [13]),
        .Q(Q[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[14] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [14]),
        .Q(Q[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[15] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [15]),
        .Q(Q[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[16] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [16]),
        .Q(Q[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[17] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [17]),
        .Q(Q[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[18] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [18]),
        .Q(Q[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[19] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [19]),
        .Q(Q[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[1] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [1]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[20] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [20]),
        .Q(Q[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[21] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [21]),
        .Q(Q[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[22] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [22]),
        .Q(Q[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[23] 
       (.C(clk),
        .CE(E),
        .D(1'b1),
        .Q(Q[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[2] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [2]),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[30] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [23]),
        .Q(Q[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[32] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [24]),
        .Q(Q[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[33] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [25]),
        .Q(Q[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[34] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [26]),
        .Q(Q[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[35] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [27]),
        .Q(Q[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[36] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [28]),
        .Q(Q[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[37] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [29]),
        .Q(Q[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[38] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [30]),
        .Q(Q[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[39] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [31]),
        .Q(Q[32]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[3] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [3]),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[40] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [32]),
        .Q(Q[33]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[41] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [33]),
        .Q(Q[34]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[42] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [34]),
        .Q(Q[35]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[43] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [35]),
        .Q(Q[36]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[44] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [36]),
        .Q(Q[37]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[45] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [37]),
        .Q(Q[38]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[46] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [38]),
        .Q(Q[39]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[47] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [39]),
        .Q(Q[40]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[48] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [40]),
        .Q(Q[41]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[49] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [41]),
        .Q(Q[42]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[4] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [4]),
        .Q(Q[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[50] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [42]),
        .Q(Q[43]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[51] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [43]),
        .Q(Q[44]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[52] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [44]),
        .Q(Q[45]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[53] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [45]),
        .Q(Q[46]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[54] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [46]),
        .Q(Q[47]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[55] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [47]),
        .Q(Q[48]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[56] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [48]),
        .Q(Q[49]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[57] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [49]),
        .Q(Q[50]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[58] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [50]),
        .Q(Q[51]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[59] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [51]),
        .Q(Q[52]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[5] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [5]),
        .Q(Q[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[60] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [52]),
        .Q(Q[53]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[61] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [53]),
        .Q(Q[54]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[62] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [54]),
        .Q(Q[55]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [55]),
        .Q(Q[56]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[6] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [6]),
        .Q(Q[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[7] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [7]),
        .Q(Q[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[8] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [8]),
        .Q(Q[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[9] 
       (.C(clk),
        .CE(E),
        .D(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63]_0 [9]),
        .Q(Q[9]),
        .R(SR));
  LUT3 #(
    .INIT(8'hF4)) 
    \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1 
       (.I0(cmd_avail),
        .I1(s_axis_mm2s_cmd_tready),
        .I2(sig_regfifo_empty_reg0),
        .O(\USE_SINGLE_REG.sig_regfifo_empty_reg_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_empty_reg_reg 
       (.C(clk),
        .CE(1'b1),
        .D(\USE_SINGLE_REG.sig_regfifo_empty_reg_i_1_n_0 ),
        .Q(s_axis_mm2s_cmd_tready),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_full_reg_reg 
       (.C(clk),
        .CE(1'b1),
        .D(\USE_SINGLE_REG.sig_regfifo_full_reg_reg_0 ),
        .Q(sig_cmd2mstr_cmd_valid),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8000FFFF80000000)) 
    sig_calc_error_reg_i_1
       (.I0(sig_calc_error_reg_reg_0),
        .I1(sig_calc_error_reg_reg_1),
        .I2(sig_calc_error_reg_reg_2),
        .I3(sig_calc_error_reg_reg_3),
        .I4(sig_push_input_reg11_out),
        .I5(in),
        .O(sig_calc_error_reg_reg));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    sig_init_done_i_1
       (.I0(\I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2 ),
        .I1(sig_init_reg_reg_0),
        .I2(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .I3(sig_init_done_2),
        .O(sig_init_reg2_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    sig_init_done_i_1__0
       (.I0(\I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2 ),
        .I1(sig_init_reg_reg_0),
        .I2(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .I3(sig_init_done_0),
        .O(sig_init_reg2_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    sig_init_done_i_1__1
       (.I0(\I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2 ),
        .I1(sig_init_reg_reg_0),
        .I2(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .I3(sig_init_done_1),
        .O(sig_init_reg2_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    sig_init_done_i_1__2
       (.I0(\I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2 ),
        .I1(sig_init_reg_reg_0),
        .I2(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .I3(sig_init_done),
        .O(sig_init_done_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_init_done_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_init_done_i_1__2_n_0),
        .Q(sig_init_done),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    sig_init_reg2_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_init_reg_reg_0),
        .Q(\I_RD_DATA_CNTL/GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_reg2 ),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    sig_init_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(SR),
        .Q(sig_init_reg_reg_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dma_fifo" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_fifo__parameterized0
   (sig_init_done,
    sig_stat2rsc_status_ready,
    sig_init_done_reg_0,
    clk,
    SR,
    sig_rsc2stat_status_valid,
    sig_cmd_stat_rst_user_reg_n_cdc_from);
  output sig_init_done;
  output sig_stat2rsc_status_ready;
  input sig_init_done_reg_0;
  input clk;
  input [0:0]SR;
  input sig_rsc2stat_status_valid;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;

  wire [0:0]SR;
  wire \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__0_n_0 ;
  wire \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__0_n_0 ;
  wire \USE_SINGLE_REG.sig_regfifo_full_reg_reg_n_0 ;
  wire clk;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_init_done;
  wire sig_init_done_reg_0;
  wire sig_rsc2stat_status_valid;
  wire sig_stat2rsc_status_ready;

  LUT4 #(
    .INIT(16'hEFEE)) 
    \USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__0 
       (.I0(\USE_SINGLE_REG.sig_regfifo_full_reg_reg_n_0 ),
        .I1(sig_init_done),
        .I2(sig_rsc2stat_status_valid),
        .I3(sig_stat2rsc_status_ready),
        .O(\USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_empty_reg_reg 
       (.C(clk),
        .CE(1'b1),
        .D(\USE_SINGLE_REG.sig_regfifo_empty_reg_i_1__0_n_0 ),
        .Q(sig_stat2rsc_status_ready),
        .R(SR));
  LUT4 #(
    .INIT(16'h0080)) 
    \USE_SINGLE_REG.sig_regfifo_full_reg_i_1__0 
       (.I0(sig_stat2rsc_status_ready),
        .I1(sig_rsc2stat_status_valid),
        .I2(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .I3(\USE_SINGLE_REG.sig_regfifo_full_reg_reg_n_0 ),
        .O(\USE_SINGLE_REG.sig_regfifo_full_reg_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \USE_SINGLE_REG.sig_regfifo_full_reg_reg 
       (.C(clk),
        .CE(1'b1),
        .D(\USE_SINGLE_REG.sig_regfifo_full_reg_i_1__0_n_0 ),
        .Q(\USE_SINGLE_REG.sig_regfifo_full_reg_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    sig_init_done_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_init_done_reg_0),
        .Q(sig_init_done),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dma_fifo" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_fifo__parameterized1
   (FIFO_Full_reg,
    sig_init_done,
    sig_inhibit_rdy_n_reg_0,
    sig_push_addr_reg1_out,
    FIFO_Full_reg_0,
    sig_calc_error_reg_reg,
    out,
    \INFERRED_GEN.cnt_i_reg[2] ,
    SR,
    clk,
    sig_init_done_reg_0,
    sig_addr_reg_empty,
    sig_mstr2addr_cmd_valid,
    sig_cmd_stat_rst_user_reg_n_cdc_from,
    in);
  output FIFO_Full_reg;
  output sig_init_done;
  output sig_inhibit_rdy_n_reg_0;
  output sig_push_addr_reg1_out;
  output FIFO_Full_reg_0;
  output sig_calc_error_reg_reg;
  output [42:0]out;
  output \INFERRED_GEN.cnt_i_reg[2] ;
  input [0:0]SR;
  input clk;
  input sig_init_done_reg_0;
  input sig_addr_reg_empty;
  input sig_mstr2addr_cmd_valid;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;
  input [41:0]in;

  wire FIFO_Full_reg;
  wire FIFO_Full_reg_0;
  wire \INFERRED_GEN.cnt_i_reg[2] ;
  wire [0:0]SR;
  wire clk;
  wire [41:0]in;
  wire [42:0]out;
  wire sig_addr_reg_empty;
  wire sig_calc_error_reg_reg;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_inhibit_rdy_n_i_1_n_0;
  wire sig_inhibit_rdy_n_reg_0;
  wire sig_init_done;
  wire sig_init_done_reg_0;
  wire sig_mstr2addr_cmd_valid;
  wire sig_push_addr_reg1_out;

  dfx_controller_setup_dfx_controller_0_0_srl_fifo_f \USE_SRL_FIFO.I_SYNC_FIFO 
       (.FIFO_Full_reg(FIFO_Full_reg),
        .FIFO_Full_reg_0(FIFO_Full_reg_0),
        .\INFERRED_GEN.cnt_i_reg[1] (sig_inhibit_rdy_n_reg_0),
        .\INFERRED_GEN.cnt_i_reg[2] (\INFERRED_GEN.cnt_i_reg[2] ),
        .SR(SR),
        .clk(clk),
        .in(in),
        .out(out),
        .sig_addr_reg_empty(sig_addr_reg_empty),
        .sig_calc_error_reg_reg(sig_calc_error_reg_reg),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_mstr2addr_cmd_valid(sig_mstr2addr_cmd_valid),
        .sig_push_addr_reg1_out(sig_push_addr_reg1_out));
  LUT2 #(
    .INIT(4'hE)) 
    sig_inhibit_rdy_n_i_1
       (.I0(sig_init_done),
        .I1(sig_inhibit_rdy_n_reg_0),
        .O(sig_inhibit_rdy_n_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_inhibit_rdy_n_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_inhibit_rdy_n_i_1_n_0),
        .Q(sig_inhibit_rdy_n_reg_0),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    sig_init_done_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_init_done_reg_0),
        .Q(sig_init_done),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dma_fifo" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_fifo__parameterized2
   (FIFO_Full_reg,
    sig_init_done,
    sig_inhibit_rdy_n_reg_0,
    sig_push_dqual_reg,
    E,
    sig_s_ready_out_reg,
    D,
    out,
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0,
    m_axi_mem_rlast_0,
    SR,
    clk,
    sig_init_done_reg_0,
    sig_mstr2data_cmd_valid,
    sig_dqual_reg_empty,
    sig_dqual_reg_empty_reg,
    sig_next_sequential_reg,
    \sig_dbeat_cntr_reg[0] ,
    Q,
    \sig_dbeat_cntr_reg[6] ,
    \sig_dbeat_cntr_reg[4] ,
    sig_cmd_stat_rst_user_reg_n_cdc_from,
    sig_ld_new_cmd_reg,
    sig_next_calc_error_reg,
    sig_rsc2stat_status_valid,
    sig_stat2rsc_status_ready,
    sig_addr_posted_cntr,
    sig_dqual_reg_empty_reg_0,
    m_axi_mem_rvalid,
    sig_dqual_reg_empty_reg_1,
    sig_dqual_reg_full,
    sig_dqual_reg_empty_reg_2,
    sig_last_dbeat_reg,
    m_axi_mem_rlast,
    in);
  output FIFO_Full_reg;
  output sig_init_done;
  output sig_inhibit_rdy_n_reg_0;
  output sig_push_dqual_reg;
  output [0:0]E;
  output sig_s_ready_out_reg;
  output [7:0]D;
  output [3:0]out;
  output sig_cmd_stat_rst_user_reg_n_cdc_from_reg;
  output sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0;
  output m_axi_mem_rlast_0;
  input [0:0]SR;
  input clk;
  input sig_init_done_reg_0;
  input sig_mstr2data_cmd_valid;
  input sig_dqual_reg_empty;
  input sig_dqual_reg_empty_reg;
  input sig_next_sequential_reg;
  input \sig_dbeat_cntr_reg[0] ;
  input [7:0]Q;
  input \sig_dbeat_cntr_reg[6] ;
  input \sig_dbeat_cntr_reg[4] ;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;
  input sig_ld_new_cmd_reg;
  input sig_next_calc_error_reg;
  input sig_rsc2stat_status_valid;
  input sig_stat2rsc_status_ready;
  input [2:0]sig_addr_posted_cntr;
  input sig_dqual_reg_empty_reg_0;
  input m_axi_mem_rvalid;
  input sig_dqual_reg_empty_reg_1;
  input sig_dqual_reg_full;
  input sig_dqual_reg_empty_reg_2;
  input sig_last_dbeat_reg;
  input m_axi_mem_rlast;
  input [11:0]in;

  wire [7:0]D;
  wire [0:0]E;
  wire FIFO_Full_reg;
  wire [7:0]Q;
  wire [0:0]SR;
  wire clk;
  wire [11:0]in;
  wire m_axi_mem_rlast;
  wire m_axi_mem_rlast_0;
  wire m_axi_mem_rvalid;
  wire [3:0]out;
  wire [2:0]sig_addr_posted_cntr;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from_reg;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0;
  wire \sig_dbeat_cntr_reg[0] ;
  wire \sig_dbeat_cntr_reg[4] ;
  wire \sig_dbeat_cntr_reg[6] ;
  wire sig_dqual_reg_empty;
  wire sig_dqual_reg_empty_reg;
  wire sig_dqual_reg_empty_reg_0;
  wire sig_dqual_reg_empty_reg_1;
  wire sig_dqual_reg_empty_reg_2;
  wire sig_dqual_reg_full;
  wire sig_inhibit_rdy_n_i_1__0_n_0;
  wire sig_inhibit_rdy_n_reg_0;
  wire sig_init_done;
  wire sig_init_done_reg_0;
  wire sig_last_dbeat_reg;
  wire sig_ld_new_cmd_reg;
  wire sig_mstr2data_cmd_valid;
  wire sig_next_calc_error_reg;
  wire sig_next_sequential_reg;
  wire sig_push_dqual_reg;
  wire sig_rsc2stat_status_valid;
  wire sig_s_ready_out_reg;
  wire sig_stat2rsc_status_ready;

  dfx_controller_setup_dfx_controller_0_0_srl_fifo_f__parameterized0 \USE_SRL_FIFO.I_SYNC_FIFO 
       (.D(D),
        .E(E),
        .FIFO_Full_reg(FIFO_Full_reg),
        .\INFERRED_GEN.cnt_i_reg[1] (sig_inhibit_rdy_n_reg_0),
        .Q(Q),
        .SR(SR),
        .clk(clk),
        .in(in),
        .m_axi_mem_rlast(m_axi_mem_rlast),
        .m_axi_mem_rlast_0(m_axi_mem_rlast_0),
        .m_axi_mem_rvalid(m_axi_mem_rvalid),
        .out(out),
        .sig_addr_posted_cntr(sig_addr_posted_cntr),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_cmd_stat_rst_user_reg_n_cdc_from_reg(sig_cmd_stat_rst_user_reg_n_cdc_from_reg),
        .sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0(sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0),
        .\sig_dbeat_cntr_reg[0] (\sig_dbeat_cntr_reg[0] ),
        .\sig_dbeat_cntr_reg[4] (\sig_dbeat_cntr_reg[4] ),
        .\sig_dbeat_cntr_reg[6] (\sig_dbeat_cntr_reg[6] ),
        .sig_dqual_reg_empty(sig_dqual_reg_empty),
        .sig_dqual_reg_empty_reg(sig_dqual_reg_empty_reg),
        .sig_dqual_reg_empty_reg_0(sig_dqual_reg_empty_reg_0),
        .sig_dqual_reg_empty_reg_1(sig_dqual_reg_empty_reg_1),
        .sig_dqual_reg_empty_reg_2(sig_dqual_reg_empty_reg_2),
        .sig_dqual_reg_full(sig_dqual_reg_full),
        .sig_last_dbeat_reg(sig_last_dbeat_reg),
        .sig_ld_new_cmd_reg(sig_ld_new_cmd_reg),
        .sig_mstr2data_cmd_valid(sig_mstr2data_cmd_valid),
        .sig_next_calc_error_reg(sig_next_calc_error_reg),
        .sig_next_sequential_reg(sig_next_sequential_reg),
        .sig_next_sequential_reg_reg(sig_push_dqual_reg),
        .sig_rsc2stat_status_valid(sig_rsc2stat_status_valid),
        .sig_s_ready_out_reg(sig_s_ready_out_reg),
        .sig_stat2rsc_status_ready(sig_stat2rsc_status_ready));
  LUT2 #(
    .INIT(4'hE)) 
    sig_inhibit_rdy_n_i_1__0
       (.I0(sig_init_done),
        .I1(sig_inhibit_rdy_n_reg_0),
        .O(sig_inhibit_rdy_n_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_inhibit_rdy_n_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_inhibit_rdy_n_i_1__0_n_0),
        .Q(sig_inhibit_rdy_n_reg_0),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    sig_init_done_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_init_done_reg_0),
        .Q(sig_init_done),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dma_mm2s_full_wrap" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_mm2s_full_wrap
   (out,
    m_axi_mem_arsize,
    m_axi_mem_arburst,
    m_axi_mem_arvalid,
    D,
    s_axis_mm2s_cmd_tready,
    recheck_id_reg_source0,
    first_word_seen_reg,
    sig_last_reg_out_reg,
    E,
    \USE_SINGLE_REG.sig_regfifo_empty_reg_reg ,
    m_axi_mem_rready,
    sig_last_reg_out_reg_0,
    m_axi_mem_araddr,
    m_axi_mem_arlen,
    reset,
    clk,
    sig_last_reg_out_reg_1,
    first_word_seen,
    id_fifo_write,
    Q,
    fsm_cs,
    \FSM_sequential_b_fsm.fsm_cs[2]_i_3 ,
    cmd_avail,
    m_axi_mem_rlast,
    m_axi_mem_rvalid,
    m_axi_mem_rresp,
    m_axi_mem_rdata,
    m_axi_mem_arready,
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] );
  output out;
  output [0:0]m_axi_mem_arsize;
  output [0:0]m_axi_mem_arburst;
  output m_axi_mem_arvalid;
  output [33:0]D;
  output s_axis_mm2s_cmd_tready;
  output recheck_id_reg_source0;
  output first_word_seen_reg;
  output sig_last_reg_out_reg;
  output [0:0]E;
  output [0:0]\USE_SINGLE_REG.sig_regfifo_empty_reg_reg ;
  output m_axi_mem_rready;
  output sig_last_reg_out_reg_0;
  output [31:0]m_axi_mem_araddr;
  output [7:0]m_axi_mem_arlen;
  input reset;
  input clk;
  input sig_last_reg_out_reg_1;
  input first_word_seen;
  input id_fifo_write;
  input [0:0]Q;
  input [2:0]fsm_cs;
  input \FSM_sequential_b_fsm.fsm_cs[2]_i_3 ;
  input cmd_avail;
  input m_axi_mem_rlast;
  input m_axi_mem_rvalid;
  input [0:0]m_axi_mem_rresp;
  input [31:0]m_axi_mem_rdata;
  input m_axi_mem_arready;
  input [55:0]\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] ;

  wire [33:0]D;
  wire [0:0]E;
  wire \FSM_sequential_b_fsm.fsm_cs[2]_i_3 ;
  wire \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/sig_inhibit_rdy_n ;
  wire \GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/sig_init_done ;
  wire \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_inhibit_rdy_n ;
  wire \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_done ;
  wire I_ADDR_CNTL_n_1;
  wire I_ADDR_CNTL_n_7;
  wire \I_CMD_FIFO/sig_init_done ;
  wire \I_CMD_FIFO/sig_regfifo_empty_reg0 ;
  wire I_CMD_STATUS_n_25;
  wire I_CMD_STATUS_n_26;
  wire I_CMD_STATUS_n_27;
  wire I_CMD_STATUS_n_28;
  wire I_CMD_STATUS_n_29;
  wire I_CMD_STATUS_n_30;
  wire I_CMD_STATUS_n_31;
  wire I_CMD_STATUS_n_32;
  wire I_CMD_STATUS_n_33;
  wire I_CMD_STATUS_n_34;
  wire I_CMD_STATUS_n_35;
  wire I_CMD_STATUS_n_36;
  wire I_CMD_STATUS_n_37;
  wire I_CMD_STATUS_n_38;
  wire I_CMD_STATUS_n_39;
  wire I_CMD_STATUS_n_40;
  wire I_CMD_STATUS_n_6;
  wire I_CMD_STATUS_n_7;
  wire I_CMD_STATUS_n_8;
  wire I_MSTR_PCC_n_0;
  wire I_MSTR_PCC_n_2;
  wire I_MSTR_PCC_n_3;
  wire I_MSTR_PCC_n_4;
  wire I_MSTR_PCC_n_46;
  wire I_MSTR_PCC_n_5;
  wire I_MSTR_PCC_n_50;
  wire I_MSTR_PCC_n_51;
  wire I_MSTR_PCC_n_52;
  wire I_MSTR_PCC_n_53;
  wire I_MSTR_PCC_n_6;
  wire I_MSTR_PCC_n_7;
  wire I_MSTR_PCC_n_8;
  wire I_MSTR_PCC_n_9;
  wire I_RD_DATA_CNTL_n_0;
  wire I_RD_DATA_CNTL_n_6;
  wire [0:0]Q;
  wire [55:0]\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] ;
  wire [0:0]\USE_SINGLE_REG.sig_regfifo_empty_reg_reg ;
  wire clk;
  wire cmd_avail;
  wire [15:0]data;
  wire first_word_seen;
  wire first_word_seen_reg;
  wire [2:0]fsm_cs;
  wire id_fifo_write;
  wire [31:0]m_axi_mem_araddr;
  wire [0:0]m_axi_mem_arburst;
  wire [7:0]m_axi_mem_arlen;
  wire m_axi_mem_arready;
  wire [0:0]m_axi_mem_arsize;
  wire m_axi_mem_arvalid;
  wire [31:0]m_axi_mem_rdata;
  wire m_axi_mem_rlast;
  wire m_axi_mem_rready;
  wire [0:0]m_axi_mem_rresp;
  wire m_axi_mem_rvalid;
  wire out;
  wire recheck_id_reg_source0;
  wire reset;
  wire s_axis_mm2s_cmd_tready;
  wire sig_addr2data_addr_posted;
  wire sig_cmd2mstr_cmd_valid;
  wire [22:0]sig_cmd2mstr_command;
  wire sig_cmd_eof_slice;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_cmd_type_slice;
  wire sig_data2rsc_valid;
  wire sig_last_reg_out_reg;
  wire sig_last_reg_out_reg_0;
  wire sig_last_reg_out_reg_1;
  wire [31:2]sig_mstr2addr_addr;
  wire [0:0]sig_mstr2addr_burst;
  wire sig_mstr2addr_cmd_valid;
  wire sig_mstr2data_cmd_cmplt;
  wire sig_mstr2data_cmd_valid;
  wire sig_mstr2data_dre_src_align;
  wire sig_mstr2data_eof;
  wire [1:1]sig_mstr2data_saddr_lsb;
  wire sig_mstr2data_sequential;
  wire sig_next_eof_reg;
  wire sig_push_input_reg11_out;
  wire sig_rdc2sf_wlast;
  wire sig_reset_reg;
  wire sig_rsc2data_ready;
  wire sig_rsc2stat_status_valid;
  wire sig_skid2dre_wready;
  wire sig_stat2rsc_status_ready;
  wire sig_stream_rst;

  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_skid_buf \ENABLE_AXIS_SKID.I_MM2S_SKID_BUF 
       (.D(D),
        .E(E),
        .\FSM_sequential_b_fsm.fsm_cs[2]_i_3 (\FSM_sequential_b_fsm.fsm_cs[2]_i_3 ),
        .Q(Q),
        .SR(sig_stream_rst),
        .clk(clk),
        .first_word_seen(first_word_seen),
        .first_word_seen_reg(first_word_seen_reg),
        .fsm_cs(fsm_cs),
        .id_fifo_write(id_fifo_write),
        .m_axi_mem_rdata(m_axi_mem_rdata),
        .m_axi_mem_rlast(m_axi_mem_rlast),
        .m_axi_mem_rresp(m_axi_mem_rresp),
        .m_axi_mem_rvalid(m_axi_mem_rvalid),
        .out(sig_skid2dre_wready),
        .recheck_id_reg_source0(recheck_id_reg_source0),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_last_reg_out_reg_0(sig_last_reg_out_reg),
        .sig_last_reg_out_reg_1(sig_last_reg_out_reg_0),
        .sig_last_reg_out_reg_2(sig_last_reg_out_reg_1),
        .sig_m_valid_out_reg_0(out),
        .sig_m_valid_out_reg_1(I_RD_DATA_CNTL_n_6),
        .sig_next_eof_reg(sig_next_eof_reg),
        .sig_rdc2sf_wlast(sig_rdc2sf_wlast),
        .sig_reset_reg(sig_reset_reg));
  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_addr_cntl I_ADDR_CNTL
       (.FIFO_Full_reg(I_ADDR_CNTL_n_1),
        .FIFO_Full_reg_0(I_ADDR_CNTL_n_7),
        .SR(sig_stream_rst),
        .clk(clk),
        .in({I_MSTR_PCC_n_0,sig_mstr2addr_burst,I_MSTR_PCC_n_2,I_MSTR_PCC_n_3,I_MSTR_PCC_n_4,I_MSTR_PCC_n_5,I_MSTR_PCC_n_6,I_MSTR_PCC_n_7,I_MSTR_PCC_n_8,I_MSTR_PCC_n_9,sig_mstr2addr_addr,sig_mstr2data_saddr_lsb,sig_mstr2data_dre_src_align}),
        .m_axi_mem_araddr(m_axi_mem_araddr),
        .m_axi_mem_arburst(m_axi_mem_arburst),
        .m_axi_mem_arlen(m_axi_mem_arlen),
        .m_axi_mem_arready(m_axi_mem_arready),
        .m_axi_mem_arsize(m_axi_mem_arsize),
        .m_axi_mem_arvalid(m_axi_mem_arvalid),
        .out(sig_addr2data_addr_posted),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_inhibit_rdy_n(\GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/sig_inhibit_rdy_n ),
        .sig_init_done(\GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/sig_init_done ),
        .sig_init_done_reg(I_CMD_STATUS_n_6),
        .sig_mstr2addr_cmd_valid(sig_mstr2addr_cmd_valid));
  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_cmd_status I_CMD_STATUS
       (.E(\USE_SINGLE_REG.sig_regfifo_empty_reg_reg ),
        .Q({data,I_CMD_STATUS_n_25,I_CMD_STATUS_n_26,I_CMD_STATUS_n_27,I_CMD_STATUS_n_28,I_CMD_STATUS_n_29,I_CMD_STATUS_n_30,I_CMD_STATUS_n_31,I_CMD_STATUS_n_32,I_CMD_STATUS_n_33,I_CMD_STATUS_n_34,I_CMD_STATUS_n_35,I_CMD_STATUS_n_36,I_CMD_STATUS_n_37,I_CMD_STATUS_n_38,I_CMD_STATUS_n_39,I_CMD_STATUS_n_40,sig_cmd_eof_slice,sig_cmd_type_slice,sig_cmd2mstr_command}),
        .SR(sig_stream_rst),
        .\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] (\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[63] ),
        .\USE_SINGLE_REG.sig_regfifo_full_reg_reg (I_MSTR_PCC_n_46),
        .clk(clk),
        .cmd_avail(cmd_avail),
        .in(I_MSTR_PCC_n_0),
        .s_axis_mm2s_cmd_tready(s_axis_mm2s_cmd_tready),
        .sig_calc_error_reg_reg(I_CMD_STATUS_n_8),
        .sig_calc_error_reg_reg_0(I_MSTR_PCC_n_52),
        .sig_calc_error_reg_reg_1(I_MSTR_PCC_n_53),
        .sig_calc_error_reg_reg_2(I_MSTR_PCC_n_50),
        .sig_calc_error_reg_reg_3(I_MSTR_PCC_n_51),
        .sig_cmd2mstr_cmd_valid(sig_cmd2mstr_cmd_valid),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_init_done(\I_CMD_FIFO/sig_init_done ),
        .sig_init_done_0(\GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/sig_init_done ),
        .sig_init_done_1(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_done ),
        .sig_init_reg2_reg(I_CMD_STATUS_n_6),
        .sig_init_reg2_reg_0(I_CMD_STATUS_n_7),
        .sig_push_input_reg11_out(sig_push_input_reg11_out),
        .sig_regfifo_empty_reg0(\I_CMD_FIFO/sig_regfifo_empty_reg0 ),
        .sig_reset_reg(sig_reset_reg),
        .sig_rsc2stat_status_valid(sig_rsc2stat_status_valid),
        .sig_stat2rsc_status_ready(sig_stat2rsc_status_ready));
  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_pcc I_MSTR_PCC
       (.Q({data,I_CMD_STATUS_n_25,I_CMD_STATUS_n_26,I_CMD_STATUS_n_27,I_CMD_STATUS_n_28,I_CMD_STATUS_n_29,I_CMD_STATUS_n_30,I_CMD_STATUS_n_31,I_CMD_STATUS_n_32,I_CMD_STATUS_n_33,I_CMD_STATUS_n_34,I_CMD_STATUS_n_35,I_CMD_STATUS_n_36,I_CMD_STATUS_n_37,I_CMD_STATUS_n_38,I_CMD_STATUS_n_39,I_CMD_STATUS_n_40,sig_cmd_eof_slice,sig_cmd_type_slice,sig_cmd2mstr_command}),
        .\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0] (I_MSTR_PCC_n_51),
        .\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[13] (I_MSTR_PCC_n_52),
        .\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[19] (I_MSTR_PCC_n_53),
        .\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[7] (I_MSTR_PCC_n_50),
        .\USE_SINGLE_REG.sig_regfifo_full_reg_reg (\USE_SINGLE_REG.sig_regfifo_empty_reg_reg ),
        .clk(clk),
        .in({I_MSTR_PCC_n_0,sig_mstr2addr_burst,I_MSTR_PCC_n_2,I_MSTR_PCC_n_3,I_MSTR_PCC_n_4,I_MSTR_PCC_n_5,I_MSTR_PCC_n_6,I_MSTR_PCC_n_7,I_MSTR_PCC_n_8,I_MSTR_PCC_n_9,sig_mstr2addr_addr,sig_mstr2data_saddr_lsb,sig_mstr2data_dre_src_align}),
        .sig_calc_error_reg_reg_0({sig_mstr2data_cmd_cmplt,sig_mstr2data_eof}),
        .sig_calc_error_reg_reg_1(I_CMD_STATUS_n_8),
        .sig_cmd2addr_valid_reg_0(I_ADDR_CNTL_n_1),
        .sig_cmd2data_valid_reg_0(I_RD_DATA_CNTL_n_0),
        .sig_cmd2mstr_cmd_valid(sig_cmd2mstr_cmd_valid),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_cmd_stat_rst_user_reg_n_cdc_from_reg(I_MSTR_PCC_n_46),
        .sig_inhibit_rdy_n(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_inhibit_rdy_n ),
        .sig_inhibit_rdy_n_0(\GEN_ADDR_FIFO.I_ADDR_QUAL_FIFO/sig_inhibit_rdy_n ),
        .sig_init_done(\I_CMD_FIFO/sig_init_done ),
        .sig_ld_xfer_reg_tmp_reg_0(I_ADDR_CNTL_n_7),
        .sig_mstr2addr_cmd_valid(sig_mstr2addr_cmd_valid),
        .sig_mstr2data_cmd_valid(sig_mstr2data_cmd_valid),
        .sig_mstr2data_sequential(sig_mstr2data_sequential),
        .sig_push_input_reg11_out(sig_push_input_reg11_out),
        .sig_regfifo_empty_reg0(\I_CMD_FIFO/sig_regfifo_empty_reg0 ),
        .sig_reset_reg(sig_reset_reg));
  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_rddata_cntl I_RD_DATA_CNTL
       (.FIFO_Full_reg(I_RD_DATA_CNTL_n_0),
        .SR(sig_stream_rst),
        .clk(clk),
        .in({I_MSTR_PCC_n_0,sig_mstr2data_cmd_cmplt,sig_mstr2data_sequential,sig_mstr2data_eof,I_MSTR_PCC_n_2,I_MSTR_PCC_n_3,I_MSTR_PCC_n_4,I_MSTR_PCC_n_5,I_MSTR_PCC_n_6,I_MSTR_PCC_n_7,I_MSTR_PCC_n_8,I_MSTR_PCC_n_9}),
        .m_axi_mem_rlast(m_axi_mem_rlast),
        .m_axi_mem_rready(m_axi_mem_rready),
        .m_axi_mem_rvalid(m_axi_mem_rvalid),
        .out(sig_skid2dre_wready),
        .\sig_addr_posted_cntr_reg[2]_0 (sig_addr2data_addr_posted),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_coelsc_cmd_cmplt_reg_reg_0(I_RD_DATA_CNTL_n_6),
        .sig_data2rsc_valid(sig_data2rsc_valid),
        .sig_inhibit_rdy_n(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_inhibit_rdy_n ),
        .sig_init_done(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO/sig_init_done ),
        .sig_init_done_reg(I_CMD_STATUS_n_7),
        .sig_mstr2data_cmd_valid(sig_mstr2data_cmd_valid),
        .sig_next_eof_reg(sig_next_eof_reg),
        .sig_rdc2sf_wlast(sig_rdc2sf_wlast),
        .sig_rsc2data_ready(sig_rsc2data_ready),
        .sig_rsc2stat_status_valid(sig_rsc2stat_status_valid),
        .sig_stat2rsc_status_ready(sig_stat2rsc_status_ready));
  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_rd_status_cntl I_RD_STATUS_CNTLR
       (.clk(clk),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_data2rsc_valid(sig_data2rsc_valid),
        .sig_rsc2data_ready(sig_rsc2data_ready),
        .sig_rsc2stat_status_valid(sig_rsc2stat_status_valid),
        .sig_stat2rsc_status_ready(sig_stat2rsc_status_ready));
  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_reset I_RESET
       (.SR(sig_stream_rst),
        .clk(clk),
        .reset(reset),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dma_pcc" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_pcc
   (in,
    sig_mstr2data_cmd_valid,
    sig_mstr2addr_cmd_valid,
    sig_mstr2data_sequential,
    sig_push_input_reg11_out,
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg,
    sig_regfifo_empty_reg0,
    sig_calc_error_reg_reg_0,
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[7] ,
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0] ,
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[13] ,
    \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[19] ,
    sig_reset_reg,
    clk,
    sig_calc_error_reg_reg_1,
    \USE_SINGLE_REG.sig_regfifo_full_reg_reg ,
    sig_cmd_stat_rst_user_reg_n_cdc_from,
    sig_cmd2mstr_cmd_valid,
    sig_init_done,
    Q,
    sig_ld_xfer_reg_tmp_reg_0,
    sig_cmd2data_valid_reg_0,
    sig_inhibit_rdy_n,
    sig_cmd2addr_valid_reg_0,
    sig_inhibit_rdy_n_0);
  output [41:0]in;
  output sig_mstr2data_cmd_valid;
  output sig_mstr2addr_cmd_valid;
  output sig_mstr2data_sequential;
  output sig_push_input_reg11_out;
  output sig_cmd_stat_rst_user_reg_n_cdc_from_reg;
  output sig_regfifo_empty_reg0;
  output [1:0]sig_calc_error_reg_reg_0;
  output \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[7] ;
  output \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0] ;
  output \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[13] ;
  output \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[19] ;
  input sig_reset_reg;
  input clk;
  input sig_calc_error_reg_reg_1;
  input [0:0]\USE_SINGLE_REG.sig_regfifo_full_reg_reg ;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;
  input sig_cmd2mstr_cmd_valid;
  input sig_init_done;
  input [56:0]Q;
  input sig_ld_xfer_reg_tmp_reg_0;
  input sig_cmd2data_valid_reg_0;
  input sig_inhibit_rdy_n;
  input sig_cmd2addr_valid_reg_0;
  input sig_inhibit_rdy_n_0;

  wire \FSM_onehot_sig_pcc_sm_state[1]_i_1_n_0 ;
  wire \FSM_onehot_sig_pcc_sm_state[2]_i_1_n_0 ;
  wire \FSM_onehot_sig_pcc_sm_state[5]_i_1_n_0 ;
  wire \FSM_onehot_sig_pcc_sm_state[6]_i_1_n_0 ;
  wire \FSM_onehot_sig_pcc_sm_state[6]_i_2_n_0 ;
  wire \FSM_onehot_sig_pcc_sm_state[7]_i_1_n_0 ;
  wire \FSM_onehot_sig_pcc_sm_state_reg_n_0_[0] ;
  wire \FSM_onehot_sig_pcc_sm_state_reg_n_0_[1] ;
  wire \FSM_onehot_sig_pcc_sm_state_reg_n_0_[5] ;
  wire \FSM_onehot_sig_pcc_sm_state_reg_n_0_[6] ;
  wire \FSM_onehot_sig_pcc_sm_state_reg_n_0_[7] ;
  wire [56:0]Q;
  wire \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0] ;
  wire \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[13] ;
  wire \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[19] ;
  wire \USE_SINGLE_REG.sig_regfifo_dout_reg_reg[7] ;
  wire [0:0]\USE_SINGLE_REG.sig_regfifo_full_reg_reg ;
  wire clk;
  wire [41:0]in;
  wire [15:0]p_1_in;
  wire p_1_in_0;
  wire sig_addr_aligned_im0;
  wire sig_addr_aligned_ireg1;
  wire \sig_addr_cntr_im0_msh[0]_i_1_n_0 ;
  wire \sig_addr_cntr_im0_msh[0]_i_3_n_0 ;
  wire \sig_addr_cntr_im0_msh[0]_i_4_n_0 ;
  wire \sig_addr_cntr_im0_msh[0]_i_5_n_0 ;
  wire \sig_addr_cntr_im0_msh[0]_i_6_n_0 ;
  wire \sig_addr_cntr_im0_msh[0]_i_7_n_0 ;
  wire \sig_addr_cntr_im0_msh[12]_i_2_n_0 ;
  wire \sig_addr_cntr_im0_msh[12]_i_3_n_0 ;
  wire \sig_addr_cntr_im0_msh[12]_i_4_n_0 ;
  wire \sig_addr_cntr_im0_msh[12]_i_5_n_0 ;
  wire \sig_addr_cntr_im0_msh[4]_i_2_n_0 ;
  wire \sig_addr_cntr_im0_msh[4]_i_3_n_0 ;
  wire \sig_addr_cntr_im0_msh[4]_i_4_n_0 ;
  wire \sig_addr_cntr_im0_msh[4]_i_5_n_0 ;
  wire \sig_addr_cntr_im0_msh[8]_i_2_n_0 ;
  wire \sig_addr_cntr_im0_msh[8]_i_3_n_0 ;
  wire \sig_addr_cntr_im0_msh[8]_i_4_n_0 ;
  wire \sig_addr_cntr_im0_msh[8]_i_5_n_0 ;
  wire [15:0]sig_addr_cntr_im0_msh_reg;
  wire \sig_addr_cntr_im0_msh_reg[0]_i_2_n_0 ;
  wire \sig_addr_cntr_im0_msh_reg[0]_i_2_n_1 ;
  wire \sig_addr_cntr_im0_msh_reg[0]_i_2_n_2 ;
  wire \sig_addr_cntr_im0_msh_reg[0]_i_2_n_3 ;
  wire \sig_addr_cntr_im0_msh_reg[0]_i_2_n_4 ;
  wire \sig_addr_cntr_im0_msh_reg[0]_i_2_n_5 ;
  wire \sig_addr_cntr_im0_msh_reg[0]_i_2_n_6 ;
  wire \sig_addr_cntr_im0_msh_reg[0]_i_2_n_7 ;
  wire \sig_addr_cntr_im0_msh_reg[12]_i_1_n_1 ;
  wire \sig_addr_cntr_im0_msh_reg[12]_i_1_n_2 ;
  wire \sig_addr_cntr_im0_msh_reg[12]_i_1_n_3 ;
  wire \sig_addr_cntr_im0_msh_reg[12]_i_1_n_4 ;
  wire \sig_addr_cntr_im0_msh_reg[12]_i_1_n_5 ;
  wire \sig_addr_cntr_im0_msh_reg[12]_i_1_n_6 ;
  wire \sig_addr_cntr_im0_msh_reg[12]_i_1_n_7 ;
  wire \sig_addr_cntr_im0_msh_reg[4]_i_1_n_0 ;
  wire \sig_addr_cntr_im0_msh_reg[4]_i_1_n_1 ;
  wire \sig_addr_cntr_im0_msh_reg[4]_i_1_n_2 ;
  wire \sig_addr_cntr_im0_msh_reg[4]_i_1_n_3 ;
  wire \sig_addr_cntr_im0_msh_reg[4]_i_1_n_4 ;
  wire \sig_addr_cntr_im0_msh_reg[4]_i_1_n_5 ;
  wire \sig_addr_cntr_im0_msh_reg[4]_i_1_n_6 ;
  wire \sig_addr_cntr_im0_msh_reg[4]_i_1_n_7 ;
  wire \sig_addr_cntr_im0_msh_reg[8]_i_1_n_0 ;
  wire \sig_addr_cntr_im0_msh_reg[8]_i_1_n_1 ;
  wire \sig_addr_cntr_im0_msh_reg[8]_i_1_n_2 ;
  wire \sig_addr_cntr_im0_msh_reg[8]_i_1_n_3 ;
  wire \sig_addr_cntr_im0_msh_reg[8]_i_1_n_4 ;
  wire \sig_addr_cntr_im0_msh_reg[8]_i_1_n_5 ;
  wire \sig_addr_cntr_im0_msh_reg[8]_i_1_n_6 ;
  wire \sig_addr_cntr_im0_msh_reg[8]_i_1_n_7 ;
  wire \sig_addr_cntr_incr_ireg2[0]_i_1_n_0 ;
  wire \sig_addr_cntr_incr_ireg2[10]_i_1_n_0 ;
  wire \sig_addr_cntr_incr_ireg2[1]_i_1_n_0 ;
  wire \sig_addr_cntr_incr_ireg2[2]_i_1_n_0 ;
  wire \sig_addr_cntr_incr_ireg2[3]_i_1_n_0 ;
  wire \sig_addr_cntr_incr_ireg2[4]_i_1_n_0 ;
  wire \sig_addr_cntr_incr_ireg2[5]_i_1_n_0 ;
  wire \sig_addr_cntr_incr_ireg2[6]_i_1_n_0 ;
  wire \sig_addr_cntr_incr_ireg2[7]_i_1_n_0 ;
  wire \sig_addr_cntr_incr_ireg2[8]_i_1_n_0 ;
  wire \sig_addr_cntr_incr_ireg2[9]_i_1_n_0 ;
  wire \sig_addr_cntr_incr_ireg2_reg_n_0_[0] ;
  wire \sig_addr_cntr_incr_ireg2_reg_n_0_[10] ;
  wire \sig_addr_cntr_incr_ireg2_reg_n_0_[1] ;
  wire \sig_addr_cntr_incr_ireg2_reg_n_0_[2] ;
  wire \sig_addr_cntr_incr_ireg2_reg_n_0_[3] ;
  wire \sig_addr_cntr_incr_ireg2_reg_n_0_[4] ;
  wire \sig_addr_cntr_incr_ireg2_reg_n_0_[5] ;
  wire \sig_addr_cntr_incr_ireg2_reg_n_0_[6] ;
  wire \sig_addr_cntr_incr_ireg2_reg_n_0_[7] ;
  wire \sig_addr_cntr_incr_ireg2_reg_n_0_[8] ;
  wire \sig_addr_cntr_incr_ireg2_reg_n_0_[9] ;
  wire \sig_addr_cntr_lsh_im0[15]_i_1_n_0 ;
  wire \sig_addr_cntr_lsh_im0_reg_n_0_[0] ;
  wire \sig_addr_cntr_lsh_im0_reg_n_0_[10] ;
  wire \sig_addr_cntr_lsh_im0_reg_n_0_[11] ;
  wire \sig_addr_cntr_lsh_im0_reg_n_0_[12] ;
  wire \sig_addr_cntr_lsh_im0_reg_n_0_[13] ;
  wire \sig_addr_cntr_lsh_im0_reg_n_0_[14] ;
  wire \sig_addr_cntr_lsh_im0_reg_n_0_[1] ;
  wire \sig_addr_cntr_lsh_im0_reg_n_0_[2] ;
  wire \sig_addr_cntr_lsh_im0_reg_n_0_[3] ;
  wire \sig_addr_cntr_lsh_im0_reg_n_0_[4] ;
  wire \sig_addr_cntr_lsh_im0_reg_n_0_[5] ;
  wire \sig_addr_cntr_lsh_im0_reg_n_0_[6] ;
  wire \sig_addr_cntr_lsh_im0_reg_n_0_[7] ;
  wire \sig_addr_cntr_lsh_im0_reg_n_0_[8] ;
  wire \sig_addr_cntr_lsh_im0_reg_n_0_[9] ;
  wire [31:0]sig_addr_cntr_lsh_kh;
  wire [9:0]sig_adjusted_addr_incr_im1;
  wire \sig_adjusted_addr_incr_ireg2[3]_i_2_n_0 ;
  wire \sig_adjusted_addr_incr_ireg2[3]_i_3_n_0 ;
  wire \sig_adjusted_addr_incr_ireg2[3]_i_4_n_0 ;
  wire \sig_adjusted_addr_incr_ireg2[3]_i_5_n_0 ;
  wire \sig_adjusted_addr_incr_ireg2[7]_i_2_n_0 ;
  wire \sig_adjusted_addr_incr_ireg2[7]_i_3_n_0 ;
  wire \sig_adjusted_addr_incr_ireg2[7]_i_4_n_0 ;
  wire \sig_adjusted_addr_incr_ireg2[7]_i_5_n_0 ;
  wire \sig_adjusted_addr_incr_ireg2[9]_i_2_n_0 ;
  wire \sig_adjusted_addr_incr_ireg2[9]_i_3_n_0 ;
  wire \sig_adjusted_addr_incr_ireg2_reg[3]_i_1_n_0 ;
  wire \sig_adjusted_addr_incr_ireg2_reg[3]_i_1_n_1 ;
  wire \sig_adjusted_addr_incr_ireg2_reg[3]_i_1_n_2 ;
  wire \sig_adjusted_addr_incr_ireg2_reg[3]_i_1_n_3 ;
  wire \sig_adjusted_addr_incr_ireg2_reg[7]_i_1_n_0 ;
  wire \sig_adjusted_addr_incr_ireg2_reg[7]_i_1_n_1 ;
  wire \sig_adjusted_addr_incr_ireg2_reg[7]_i_1_n_2 ;
  wire \sig_adjusted_addr_incr_ireg2_reg[7]_i_1_n_3 ;
  wire \sig_adjusted_addr_incr_ireg2_reg[9]_i_1_n_3 ;
  wire \sig_adjusted_addr_incr_ireg2_reg_n_0_[0] ;
  wire \sig_adjusted_addr_incr_ireg2_reg_n_0_[1] ;
  wire \sig_adjusted_addr_incr_ireg2_reg_n_0_[2] ;
  wire \sig_adjusted_addr_incr_ireg2_reg_n_0_[3] ;
  wire \sig_adjusted_addr_incr_ireg2_reg_n_0_[4] ;
  wire \sig_adjusted_addr_incr_ireg2_reg_n_0_[5] ;
  wire \sig_adjusted_addr_incr_ireg2_reg_n_0_[6] ;
  wire \sig_adjusted_addr_incr_ireg2_reg_n_0_[7] ;
  wire \sig_adjusted_addr_incr_ireg2_reg_n_0_[8] ;
  wire \sig_adjusted_addr_incr_ireg2_reg_n_0_[9] ;
  wire sig_brst_cnt_eq_one_im0;
  wire sig_brst_cnt_eq_one_ireg1;
  wire sig_brst_cnt_eq_zero_im0;
  wire sig_brst_cnt_eq_zero_ireg1;
  wire sig_brst_cnt_eq_zero_ireg1_i_2_n_0;
  wire sig_brst_cnt_eq_zero_ireg1_i_3_n_0;
  wire \sig_btt_cntr_im0[11]_i_2_n_0 ;
  wire \sig_btt_cntr_im0[11]_i_3_n_0 ;
  wire \sig_btt_cntr_im0[11]_i_4_n_0 ;
  wire \sig_btt_cntr_im0[11]_i_5_n_0 ;
  wire \sig_btt_cntr_im0[11]_i_6_n_0 ;
  wire \sig_btt_cntr_im0[11]_i_7_n_0 ;
  wire \sig_btt_cntr_im0[11]_i_8_n_0 ;
  wire \sig_btt_cntr_im0[15]_i_2_n_0 ;
  wire \sig_btt_cntr_im0[15]_i_3_n_0 ;
  wire \sig_btt_cntr_im0[15]_i_4_n_0 ;
  wire \sig_btt_cntr_im0[15]_i_5_n_0 ;
  wire \sig_btt_cntr_im0[19]_i_2_n_0 ;
  wire \sig_btt_cntr_im0[19]_i_3_n_0 ;
  wire \sig_btt_cntr_im0[19]_i_4_n_0 ;
  wire \sig_btt_cntr_im0[19]_i_5_n_0 ;
  wire \sig_btt_cntr_im0[22]_i_2_n_0 ;
  wire \sig_btt_cntr_im0[22]_i_3_n_0 ;
  wire \sig_btt_cntr_im0[22]_i_4_n_0 ;
  wire \sig_btt_cntr_im0[22]_i_5_n_0 ;
  wire \sig_btt_cntr_im0[3]_i_2_n_0 ;
  wire \sig_btt_cntr_im0[3]_i_3_n_0 ;
  wire \sig_btt_cntr_im0[3]_i_4_n_0 ;
  wire \sig_btt_cntr_im0[3]_i_5_n_0 ;
  wire \sig_btt_cntr_im0[3]_i_6_n_0 ;
  wire \sig_btt_cntr_im0[3]_i_7_n_0 ;
  wire \sig_btt_cntr_im0[3]_i_8_n_0 ;
  wire \sig_btt_cntr_im0[3]_i_9_n_0 ;
  wire \sig_btt_cntr_im0[7]_i_2_n_0 ;
  wire \sig_btt_cntr_im0[7]_i_3_n_0 ;
  wire \sig_btt_cntr_im0[7]_i_4_n_0 ;
  wire \sig_btt_cntr_im0[7]_i_5_n_0 ;
  wire \sig_btt_cntr_im0[7]_i_6_n_0 ;
  wire \sig_btt_cntr_im0[7]_i_7_n_0 ;
  wire \sig_btt_cntr_im0[7]_i_8_n_0 ;
  wire \sig_btt_cntr_im0[7]_i_9_n_0 ;
  wire \sig_btt_cntr_im0_reg[11]_i_1_n_0 ;
  wire \sig_btt_cntr_im0_reg[11]_i_1_n_1 ;
  wire \sig_btt_cntr_im0_reg[11]_i_1_n_2 ;
  wire \sig_btt_cntr_im0_reg[11]_i_1_n_3 ;
  wire \sig_btt_cntr_im0_reg[11]_i_1_n_4 ;
  wire \sig_btt_cntr_im0_reg[11]_i_1_n_5 ;
  wire \sig_btt_cntr_im0_reg[11]_i_1_n_6 ;
  wire \sig_btt_cntr_im0_reg[11]_i_1_n_7 ;
  wire \sig_btt_cntr_im0_reg[15]_i_1_n_0 ;
  wire \sig_btt_cntr_im0_reg[15]_i_1_n_1 ;
  wire \sig_btt_cntr_im0_reg[15]_i_1_n_2 ;
  wire \sig_btt_cntr_im0_reg[15]_i_1_n_3 ;
  wire \sig_btt_cntr_im0_reg[15]_i_1_n_4 ;
  wire \sig_btt_cntr_im0_reg[15]_i_1_n_5 ;
  wire \sig_btt_cntr_im0_reg[15]_i_1_n_6 ;
  wire \sig_btt_cntr_im0_reg[15]_i_1_n_7 ;
  wire \sig_btt_cntr_im0_reg[19]_i_1_n_0 ;
  wire \sig_btt_cntr_im0_reg[19]_i_1_n_1 ;
  wire \sig_btt_cntr_im0_reg[19]_i_1_n_2 ;
  wire \sig_btt_cntr_im0_reg[19]_i_1_n_3 ;
  wire \sig_btt_cntr_im0_reg[19]_i_1_n_4 ;
  wire \sig_btt_cntr_im0_reg[19]_i_1_n_5 ;
  wire \sig_btt_cntr_im0_reg[19]_i_1_n_6 ;
  wire \sig_btt_cntr_im0_reg[19]_i_1_n_7 ;
  wire \sig_btt_cntr_im0_reg[22]_i_1_n_2 ;
  wire \sig_btt_cntr_im0_reg[22]_i_1_n_3 ;
  wire \sig_btt_cntr_im0_reg[22]_i_1_n_5 ;
  wire \sig_btt_cntr_im0_reg[22]_i_1_n_6 ;
  wire \sig_btt_cntr_im0_reg[22]_i_1_n_7 ;
  wire \sig_btt_cntr_im0_reg[3]_i_1_n_0 ;
  wire \sig_btt_cntr_im0_reg[3]_i_1_n_1 ;
  wire \sig_btt_cntr_im0_reg[3]_i_1_n_2 ;
  wire \sig_btt_cntr_im0_reg[3]_i_1_n_3 ;
  wire \sig_btt_cntr_im0_reg[3]_i_1_n_4 ;
  wire \sig_btt_cntr_im0_reg[3]_i_1_n_5 ;
  wire \sig_btt_cntr_im0_reg[3]_i_1_n_6 ;
  wire \sig_btt_cntr_im0_reg[3]_i_1_n_7 ;
  wire \sig_btt_cntr_im0_reg[7]_i_1_n_0 ;
  wire \sig_btt_cntr_im0_reg[7]_i_1_n_1 ;
  wire \sig_btt_cntr_im0_reg[7]_i_1_n_2 ;
  wire \sig_btt_cntr_im0_reg[7]_i_1_n_3 ;
  wire \sig_btt_cntr_im0_reg[7]_i_1_n_4 ;
  wire \sig_btt_cntr_im0_reg[7]_i_1_n_5 ;
  wire \sig_btt_cntr_im0_reg[7]_i_1_n_6 ;
  wire \sig_btt_cntr_im0_reg[7]_i_1_n_7 ;
  wire \sig_btt_cntr_im0_reg_n_0_[0] ;
  wire \sig_btt_cntr_im0_reg_n_0_[10] ;
  wire \sig_btt_cntr_im0_reg_n_0_[11] ;
  wire \sig_btt_cntr_im0_reg_n_0_[12] ;
  wire \sig_btt_cntr_im0_reg_n_0_[13] ;
  wire \sig_btt_cntr_im0_reg_n_0_[14] ;
  wire \sig_btt_cntr_im0_reg_n_0_[15] ;
  wire \sig_btt_cntr_im0_reg_n_0_[16] ;
  wire \sig_btt_cntr_im0_reg_n_0_[17] ;
  wire \sig_btt_cntr_im0_reg_n_0_[18] ;
  wire \sig_btt_cntr_im0_reg_n_0_[19] ;
  wire \sig_btt_cntr_im0_reg_n_0_[1] ;
  wire \sig_btt_cntr_im0_reg_n_0_[20] ;
  wire \sig_btt_cntr_im0_reg_n_0_[21] ;
  wire \sig_btt_cntr_im0_reg_n_0_[22] ;
  wire \sig_btt_cntr_im0_reg_n_0_[2] ;
  wire \sig_btt_cntr_im0_reg_n_0_[3] ;
  wire \sig_btt_cntr_im0_reg_n_0_[4] ;
  wire \sig_btt_cntr_im0_reg_n_0_[5] ;
  wire \sig_btt_cntr_im0_reg_n_0_[6] ;
  wire \sig_btt_cntr_im0_reg_n_0_[7] ;
  wire \sig_btt_cntr_im0_reg_n_0_[8] ;
  wire \sig_btt_cntr_im0_reg_n_0_[9] ;
  wire sig_btt_eq_b2mbaa_im0;
  wire sig_btt_eq_b2mbaa_im01;
  wire sig_btt_eq_b2mbaa_im01_carry_i_1_n_0;
  wire sig_btt_eq_b2mbaa_im01_carry_i_2_n_0;
  wire sig_btt_eq_b2mbaa_im01_carry_i_3_n_0;
  wire sig_btt_eq_b2mbaa_im01_carry_i_4_n_0;
  wire sig_btt_eq_b2mbaa_im01_carry_i_5_n_0;
  wire sig_btt_eq_b2mbaa_im01_carry_i_6_n_0;
  wire sig_btt_eq_b2mbaa_im01_carry_n_1;
  wire sig_btt_eq_b2mbaa_im01_carry_n_2;
  wire sig_btt_eq_b2mbaa_im01_carry_n_3;
  wire sig_btt_eq_b2mbaa_ireg1;
  wire sig_btt_lt_b2mbaa_im0;
  wire sig_btt_lt_b2mbaa_im01;
  wire sig_btt_lt_b2mbaa_im01_carry__0_i_1_n_0;
  wire sig_btt_lt_b2mbaa_im01_carry__0_i_2_n_0;
  wire sig_btt_lt_b2mbaa_im01_carry__0_i_3_n_0;
  wire sig_btt_lt_b2mbaa_im01_carry__0_i_4_n_0;
  wire sig_btt_lt_b2mbaa_im01_carry__0_n_3;
  wire sig_btt_lt_b2mbaa_im01_carry_i_1_n_0;
  wire sig_btt_lt_b2mbaa_im01_carry_i_2_n_0;
  wire sig_btt_lt_b2mbaa_im01_carry_i_3_n_0;
  wire sig_btt_lt_b2mbaa_im01_carry_i_4_n_0;
  wire sig_btt_lt_b2mbaa_im01_carry_i_5_n_0;
  wire sig_btt_lt_b2mbaa_im01_carry_i_6_n_0;
  wire sig_btt_lt_b2mbaa_im01_carry_i_7_n_0;
  wire sig_btt_lt_b2mbaa_im01_carry_i_8_n_0;
  wire sig_btt_lt_b2mbaa_im01_carry_i_9_n_0;
  wire sig_btt_lt_b2mbaa_im01_carry_n_0;
  wire sig_btt_lt_b2mbaa_im01_carry_n_1;
  wire sig_btt_lt_b2mbaa_im01_carry_n_2;
  wire sig_btt_lt_b2mbaa_im01_carry_n_3;
  wire sig_btt_lt_b2mbaa_ireg1;
  wire \sig_byte_change_minus1_im2/i__n_0 ;
  wire [9:1]sig_bytes_to_mbaa_im0;
  wire [9:0]sig_bytes_to_mbaa_ireg1;
  wire \sig_bytes_to_mbaa_ireg1[7]_i_1_n_0 ;
  wire \sig_bytes_to_mbaa_ireg1[9]_i_2_n_0 ;
  wire sig_calc_error_pushed;
  wire sig_calc_error_pushed_i_1_n_0;
  wire [1:0]sig_calc_error_reg_reg_0;
  wire sig_calc_error_reg_reg_1;
  wire sig_cmd2addr_valid_i_1_n_0;
  wire sig_cmd2addr_valid_reg_0;
  wire sig_cmd2data_valid_i_1_n_0;
  wire sig_cmd2data_valid_reg_0;
  wire sig_cmd2dre_valid_i_1_n_0;
  wire sig_cmd2dre_valid_reg_n_0;
  wire sig_cmd2mstr_cmd_valid;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from_reg;
  wire sig_first_xfer_im0;
  wire sig_first_xfer_im0_i_1_n_0;
  wire sig_inhibit_rdy_n;
  wire sig_inhibit_rdy_n_0;
  wire sig_init_done;
  wire sig_input_burst_type_reg_i_1_n_0;
  wire sig_input_eof_reg_i_1_n_0;
  wire sig_input_eof_reg_reg_n_0;
  wire sig_input_reg_empty;
  wire sig_input_reg_empty_i_1_n_0;
  wire sig_ld_xfer_reg;
  wire sig_ld_xfer_reg_i_1_n_0;
  wire sig_ld_xfer_reg_tmp;
  wire sig_ld_xfer_reg_tmp_i_1_n_0;
  wire sig_ld_xfer_reg_tmp_reg_0;
  wire sig_mstr2addr_cmd_valid;
  wire sig_mstr2data_cmd_valid;
  wire sig_mstr2data_sequential;
  wire sig_no_btt_residue_im0;
  wire sig_no_btt_residue_ireg1;
  wire sig_no_btt_residue_ireg1_i_2_n_0;
  wire sig_parent_done;
  wire sig_parent_done_i_1_n_0;
  wire [15:0]sig_predict_addr_lsh_im2;
  wire [15:15]sig_predict_addr_lsh_ireg3;
  wire \sig_predict_addr_lsh_ireg3[11]_i_2_n_0 ;
  wire \sig_predict_addr_lsh_ireg3[11]_i_3_n_0 ;
  wire \sig_predict_addr_lsh_ireg3[11]_i_4_n_0 ;
  wire \sig_predict_addr_lsh_ireg3[3]_i_2_n_0 ;
  wire \sig_predict_addr_lsh_ireg3[3]_i_3_n_0 ;
  wire \sig_predict_addr_lsh_ireg3[3]_i_4_n_0 ;
  wire \sig_predict_addr_lsh_ireg3[3]_i_5_n_0 ;
  wire \sig_predict_addr_lsh_ireg3[7]_i_2_n_0 ;
  wire \sig_predict_addr_lsh_ireg3[7]_i_3_n_0 ;
  wire \sig_predict_addr_lsh_ireg3[7]_i_4_n_0 ;
  wire \sig_predict_addr_lsh_ireg3[7]_i_5_n_0 ;
  wire \sig_predict_addr_lsh_ireg3_reg[11]_i_1_n_0 ;
  wire \sig_predict_addr_lsh_ireg3_reg[11]_i_1_n_1 ;
  wire \sig_predict_addr_lsh_ireg3_reg[11]_i_1_n_2 ;
  wire \sig_predict_addr_lsh_ireg3_reg[11]_i_1_n_3 ;
  wire \sig_predict_addr_lsh_ireg3_reg[15]_i_1_n_1 ;
  wire \sig_predict_addr_lsh_ireg3_reg[15]_i_1_n_2 ;
  wire \sig_predict_addr_lsh_ireg3_reg[15]_i_1_n_3 ;
  wire \sig_predict_addr_lsh_ireg3_reg[3]_i_1_n_0 ;
  wire \sig_predict_addr_lsh_ireg3_reg[3]_i_1_n_1 ;
  wire \sig_predict_addr_lsh_ireg3_reg[3]_i_1_n_2 ;
  wire \sig_predict_addr_lsh_ireg3_reg[3]_i_1_n_3 ;
  wire \sig_predict_addr_lsh_ireg3_reg[7]_i_1_n_0 ;
  wire \sig_predict_addr_lsh_ireg3_reg[7]_i_1_n_1 ;
  wire \sig_predict_addr_lsh_ireg3_reg[7]_i_1_n_2 ;
  wire \sig_predict_addr_lsh_ireg3_reg[7]_i_1_n_3 ;
  wire \sig_predict_addr_lsh_ireg3_reg_n_0_[0] ;
  wire \sig_predict_addr_lsh_ireg3_reg_n_0_[10] ;
  wire \sig_predict_addr_lsh_ireg3_reg_n_0_[11] ;
  wire \sig_predict_addr_lsh_ireg3_reg_n_0_[12] ;
  wire \sig_predict_addr_lsh_ireg3_reg_n_0_[13] ;
  wire \sig_predict_addr_lsh_ireg3_reg_n_0_[14] ;
  wire \sig_predict_addr_lsh_ireg3_reg_n_0_[1] ;
  wire \sig_predict_addr_lsh_ireg3_reg_n_0_[2] ;
  wire \sig_predict_addr_lsh_ireg3_reg_n_0_[3] ;
  wire \sig_predict_addr_lsh_ireg3_reg_n_0_[4] ;
  wire \sig_predict_addr_lsh_ireg3_reg_n_0_[5] ;
  wire \sig_predict_addr_lsh_ireg3_reg_n_0_[6] ;
  wire \sig_predict_addr_lsh_ireg3_reg_n_0_[7] ;
  wire \sig_predict_addr_lsh_ireg3_reg_n_0_[8] ;
  wire \sig_predict_addr_lsh_ireg3_reg_n_0_[9] ;
  wire sig_push_input_reg11_out;
  wire sig_regfifo_empty_reg0;
  wire sig_reset_reg;
  wire sig_sm_halt_ns;
  wire sig_sm_halt_reg;
  wire sig_sm_ld_calc2_reg;
  wire sig_sm_ld_calc2_reg_ns;
  wire sig_sm_ld_xfer_reg_ns;
  wire sig_sm_pop_input_reg;
  wire sig_sm_pop_input_reg_ns;
  wire sig_xfer_reg_empty;
  wire sig_xfer_reg_empty_i_1_n_0;
  wire [3:3]\NLW_sig_addr_cntr_im0_msh_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_sig_adjusted_addr_incr_ireg2_reg[9]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_sig_adjusted_addr_incr_ireg2_reg[9]_i_1_O_UNCONNECTED ;
  wire [3:2]\NLW_sig_btt_cntr_im0_reg[22]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_sig_btt_cntr_im0_reg[22]_i_1_O_UNCONNECTED ;
  wire [3:0]NLW_sig_btt_eq_b2mbaa_im01_carry_O_UNCONNECTED;
  wire [3:0]NLW_sig_btt_lt_b2mbaa_im01_carry_O_UNCONNECTED;
  wire [3:2]NLW_sig_btt_lt_b2mbaa_im01_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_sig_btt_lt_b2mbaa_im01_carry__0_O_UNCONNECTED;
  wire [3:3]\NLW_sig_predict_addr_lsh_ireg3_reg[15]_i_1_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hFFFFFFFF4444F444)) 
    \FSM_onehot_sig_pcc_sm_state[1]_i_1 
       (.I0(sig_push_input_reg11_out),
        .I1(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[6] ),
        .I3(sig_parent_done),
        .I4(sig_calc_error_pushed),
        .I5(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[0] ),
        .O(\FSM_onehot_sig_pcc_sm_state[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT5 #(
    .INIT(32'h88888F88)) 
    \FSM_onehot_sig_pcc_sm_state[2]_i_1 
       (.I0(sig_push_input_reg11_out),
        .I1(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[1] ),
        .I2(sig_parent_done),
        .I3(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[6] ),
        .I4(sig_calc_error_pushed),
        .O(\FSM_onehot_sig_pcc_sm_state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_sig_pcc_sm_state[5]_i_1 
       (.I0(sig_sm_ld_xfer_reg_ns),
        .I1(\FSM_onehot_sig_pcc_sm_state[6]_i_2_n_0 ),
        .I2(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[5] ),
        .O(\FSM_onehot_sig_pcc_sm_state[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_sig_pcc_sm_state[6]_i_1 
       (.I0(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[5] ),
        .I1(\FSM_onehot_sig_pcc_sm_state[6]_i_2_n_0 ),
        .O(\FSM_onehot_sig_pcc_sm_state[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h003A3F3A003A003A)) 
    \FSM_onehot_sig_pcc_sm_state[6]_i_2 
       (.I0(sig_cmd2dre_valid_reg_n_0),
        .I1(sig_ld_xfer_reg_tmp_reg_0),
        .I2(sig_mstr2addr_cmd_valid),
        .I3(sig_mstr2data_cmd_valid),
        .I4(sig_cmd2data_valid_reg_0),
        .I5(sig_inhibit_rdy_n),
        .O(\FSM_onehot_sig_pcc_sm_state[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \FSM_onehot_sig_pcc_sm_state[7]_i_1 
       (.I0(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[7] ),
        .I1(sig_calc_error_pushed),
        .I2(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[6] ),
        .O(\FSM_onehot_sig_pcc_sm_state[7]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "init:00000001,calc_2:00001000,calc_3:00010000,wait_on_xfer_push:00100000,chk_if_done:01000000,error_trap:10000000,calc_1:00000100,wait_for_cmd:00000010" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_sig_pcc_sm_state_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[0] ),
        .S(sig_reset_reg));
  (* FSM_ENCODED_STATES = "init:00000001,calc_2:00001000,calc_3:00010000,wait_on_xfer_push:00100000,chk_if_done:01000000,error_trap:10000000,calc_1:00000100,wait_for_cmd:00000010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_sig_pcc_sm_state_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_onehot_sig_pcc_sm_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[1] ),
        .R(sig_reset_reg));
  (* FSM_ENCODED_STATES = "init:00000001,calc_2:00001000,calc_3:00010000,wait_on_xfer_push:00100000,chk_if_done:01000000,error_trap:10000000,calc_1:00000100,wait_for_cmd:00000010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_sig_pcc_sm_state_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_onehot_sig_pcc_sm_state[2]_i_1_n_0 ),
        .Q(sig_sm_ld_calc2_reg_ns),
        .R(sig_reset_reg));
  (* FSM_ENCODED_STATES = "init:00000001,calc_2:00001000,calc_3:00010000,wait_on_xfer_push:00100000,chk_if_done:01000000,error_trap:10000000,calc_1:00000100,wait_for_cmd:00000010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_sig_pcc_sm_state_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(sig_sm_ld_calc2_reg),
        .Q(sig_sm_ld_xfer_reg_ns),
        .R(sig_reset_reg));
  (* FSM_ENCODED_STATES = "init:00000001,calc_2:00001000,calc_3:00010000,wait_on_xfer_push:00100000,chk_if_done:01000000,error_trap:10000000,calc_1:00000100,wait_for_cmd:00000010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_sig_pcc_sm_state_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_onehot_sig_pcc_sm_state[5]_i_1_n_0 ),
        .Q(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[5] ),
        .R(sig_reset_reg));
  (* FSM_ENCODED_STATES = "init:00000001,calc_2:00001000,calc_3:00010000,wait_on_xfer_push:00100000,chk_if_done:01000000,error_trap:10000000,calc_1:00000100,wait_for_cmd:00000010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_sig_pcc_sm_state_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_onehot_sig_pcc_sm_state[6]_i_1_n_0 ),
        .Q(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[6] ),
        .R(sig_reset_reg));
  (* FSM_ENCODED_STATES = "init:00000001,calc_2:00001000,calc_3:00010000,wait_on_xfer_push:00100000,chk_if_done:01000000,error_trap:10000000,calc_1:00000100,wait_for_cmd:00000010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_sig_pcc_sm_state_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_onehot_sig_pcc_sm_state[7]_i_1_n_0 ),
        .Q(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[7] ),
        .R(sig_reset_reg));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \INFERRED_GEN.data_reg[2][15]_srl3_i_1 
       (.I0(\sig_adjusted_addr_incr_ireg2_reg_n_0_[8] ),
        .I1(\sig_adjusted_addr_incr_ireg2_reg_n_0_[6] ),
        .I2(\sig_byte_change_minus1_im2/i__n_0 ),
        .I3(\sig_adjusted_addr_incr_ireg2_reg_n_0_[7] ),
        .I4(\sig_adjusted_addr_incr_ireg2_reg_n_0_[9] ),
        .O(in[39]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \INFERRED_GEN.data_reg[2][16]_srl3_i_1 
       (.I0(\sig_adjusted_addr_incr_ireg2_reg_n_0_[7] ),
        .I1(\sig_byte_change_minus1_im2/i__n_0 ),
        .I2(\sig_adjusted_addr_incr_ireg2_reg_n_0_[6] ),
        .I3(\sig_adjusted_addr_incr_ireg2_reg_n_0_[8] ),
        .O(in[38]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \INFERRED_GEN.data_reg[2][17]_srl3_i_1 
       (.I0(\sig_adjusted_addr_incr_ireg2_reg_n_0_[6] ),
        .I1(\sig_byte_change_minus1_im2/i__n_0 ),
        .I2(\sig_adjusted_addr_incr_ireg2_reg_n_0_[7] ),
        .O(in[37]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \INFERRED_GEN.data_reg[2][18]_srl3_i_1 
       (.I0(\sig_byte_change_minus1_im2/i__n_0 ),
        .I1(\sig_adjusted_addr_incr_ireg2_reg_n_0_[6] ),
        .O(in[36]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \INFERRED_GEN.data_reg[2][19]_srl3_i_1 
       (.I0(\sig_adjusted_addr_incr_ireg2_reg_n_0_[4] ),
        .I1(\sig_adjusted_addr_incr_ireg2_reg_n_0_[2] ),
        .I2(\sig_adjusted_addr_incr_ireg2_reg_n_0_[0] ),
        .I3(\sig_adjusted_addr_incr_ireg2_reg_n_0_[1] ),
        .I4(\sig_adjusted_addr_incr_ireg2_reg_n_0_[3] ),
        .I5(\sig_adjusted_addr_incr_ireg2_reg_n_0_[5] ),
        .O(in[35]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \INFERRED_GEN.data_reg[2][20]_srl3_i_1 
       (.I0(\sig_adjusted_addr_incr_ireg2_reg_n_0_[3] ),
        .I1(\sig_adjusted_addr_incr_ireg2_reg_n_0_[1] ),
        .I2(\sig_adjusted_addr_incr_ireg2_reg_n_0_[0] ),
        .I3(\sig_adjusted_addr_incr_ireg2_reg_n_0_[2] ),
        .I4(\sig_adjusted_addr_incr_ireg2_reg_n_0_[4] ),
        .O(in[34]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \INFERRED_GEN.data_reg[2][21]_srl3_i_1 
       (.I0(\sig_adjusted_addr_incr_ireg2_reg_n_0_[2] ),
        .I1(\sig_adjusted_addr_incr_ireg2_reg_n_0_[0] ),
        .I2(\sig_adjusted_addr_incr_ireg2_reg_n_0_[1] ),
        .I3(\sig_adjusted_addr_incr_ireg2_reg_n_0_[3] ),
        .O(in[33]));
  LUT3 #(
    .INIT(8'hE1)) 
    \INFERRED_GEN.data_reg[2][22]_srl3_i_1__0 
       (.I0(\sig_adjusted_addr_incr_ireg2_reg_n_0_[1] ),
        .I1(\sig_adjusted_addr_incr_ireg2_reg_n_0_[0] ),
        .I2(\sig_adjusted_addr_incr_ireg2_reg_n_0_[2] ),
        .O(in[32]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][23]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[15]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[31]),
        .O(in[31]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][24]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[14]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[30]),
        .O(in[30]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][25]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[13]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[29]),
        .O(in[29]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][26]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[12]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[28]),
        .O(in[28]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][27]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[11]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[27]),
        .O(in[27]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][28]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[10]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[26]),
        .O(in[26]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][29]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[9]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[25]),
        .O(in[25]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][30]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[8]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[24]),
        .O(in[24]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][31]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[7]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[23]),
        .O(in[23]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][32]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[6]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[22]),
        .O(in[22]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][33]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[5]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[21]),
        .O(in[21]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][34]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[4]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[20]),
        .O(in[20]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][35]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[3]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[19]),
        .O(in[19]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][36]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[2]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[18]),
        .O(in[18]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][37]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[1]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[17]),
        .O(in[17]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][38]_srl3_i_1 
       (.I0(sig_addr_cntr_im0_msh_reg[0]),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[16]),
        .O(in[16]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][39]_srl3_i_1 
       (.I0(p_1_in_0),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[15]),
        .O(in[15]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \INFERRED_GEN.data_reg[2][3]_srl3_i_1 
       (.I0(in[41]),
        .I1(sig_mstr2data_sequential),
        .O(sig_calc_error_reg_reg_0[1]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][40]_srl3_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[14] ),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[14]),
        .O(in[14]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][41]_srl3_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[13] ),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[13]),
        .O(in[13]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][42]_srl3_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[12] ),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[12]),
        .O(in[12]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][43]_srl3_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[11] ),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[11]),
        .O(in[11]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][44]_srl3_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[10] ),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[10]),
        .O(in[10]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][45]_srl3_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[9] ),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[9]),
        .O(in[9]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][46]_srl3_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[8] ),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[8]),
        .O(in[8]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][47]_srl3_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[7] ),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[7]),
        .O(in[7]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][48]_srl3_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[6] ),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[6]),
        .O(in[6]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][49]_srl3_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[5] ),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[5]),
        .O(in[5]));
  LUT6 #(
    .INIT(64'h00FFFFFF57575757)) 
    \INFERRED_GEN.data_reg[2][4]_srl3_i_1 
       (.I0(sig_brst_cnt_eq_zero_ireg1),
        .I1(sig_btt_eq_b2mbaa_ireg1),
        .I2(sig_btt_lt_b2mbaa_ireg1),
        .I3(sig_brst_cnt_eq_one_ireg1),
        .I4(sig_addr_aligned_ireg1),
        .I5(sig_no_btt_residue_ireg1),
        .O(sig_mstr2data_sequential));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][50]_srl3_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[4] ),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[4]),
        .O(in[4]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][51]_srl3_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[3] ),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[3]),
        .O(in[3]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][52]_srl3_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[2] ),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[2]),
        .O(in[2]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][53]_srl3_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[1]),
        .O(in[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.data_reg[2][54]_srl3_i_2 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .I1(in[40]),
        .I2(sig_addr_cntr_lsh_kh[0]),
        .O(in[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \INFERRED_GEN.data_reg[2][5]_srl3_i_1 
       (.I0(sig_input_eof_reg_reg_n_0),
        .I1(sig_mstr2data_sequential),
        .O(sig_calc_error_reg_reg_0[0]));
  LUT5 #(
    .INIT(32'hAAAAAEAA)) 
    \USE_SINGLE_REG.sig_regfifo_empty_reg_i_2 
       (.I0(sig_init_done),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(sig_calc_error_pushed),
        .O(sig_regfifo_empty_reg0));
  LUT6 #(
    .INIT(64'hCCCC8888CC0C8888)) 
    \USE_SINGLE_REG.sig_regfifo_full_reg_i_1 
       (.I0(\USE_SINGLE_REG.sig_regfifo_full_reg_reg ),
        .I1(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .I2(sig_input_reg_empty),
        .I3(sig_sm_halt_reg),
        .I4(sig_cmd2mstr_cmd_valid),
        .I5(sig_calc_error_pushed),
        .O(sig_cmd_stat_rst_user_reg_n_cdc_from_reg));
  LUT5 #(
    .INIT(32'h00000001)) 
    sig_addr_aligned_ireg1_i_1
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[7] ),
        .I1(\sig_bytes_to_mbaa_ireg1[9]_i_2_n_0 ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[6] ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[8] ),
        .I4(\sig_addr_cntr_lsh_im0_reg_n_0_[9] ),
        .O(sig_addr_aligned_im0));
  FDRE #(
    .INIT(1'b0)) 
    sig_addr_aligned_ireg1_reg
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(sig_addr_aligned_im0),
        .Q(sig_addr_aligned_ireg1),
        .R(sig_reset_reg));
  LUT4 #(
    .INIT(16'hBAAA)) 
    \sig_addr_cntr_im0_msh[0]_i_1 
       (.I0(sig_push_input_reg11_out),
        .I1(sig_predict_addr_lsh_ireg3),
        .I2(p_1_in_0),
        .I3(\FSM_onehot_sig_pcc_sm_state[6]_i_2_n_0 ),
        .O(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[0]_i_3 
       (.I0(Q[41]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[0]),
        .O(\sig_addr_cntr_im0_msh[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[0]_i_4 
       (.I0(Q[44]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[3]),
        .O(\sig_addr_cntr_im0_msh[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[0]_i_5 
       (.I0(Q[43]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[2]),
        .O(\sig_addr_cntr_im0_msh[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[0]_i_6 
       (.I0(Q[42]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[1]),
        .O(\sig_addr_cntr_im0_msh[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555C55555)) 
    \sig_addr_cntr_im0_msh[0]_i_7 
       (.I0(sig_addr_cntr_im0_msh_reg[0]),
        .I1(Q[41]),
        .I2(sig_input_reg_empty),
        .I3(sig_sm_halt_reg),
        .I4(sig_cmd2mstr_cmd_valid),
        .I5(in[41]),
        .O(\sig_addr_cntr_im0_msh[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[12]_i_2 
       (.I0(Q[56]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[15]),
        .O(\sig_addr_cntr_im0_msh[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[12]_i_3 
       (.I0(Q[55]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[14]),
        .O(\sig_addr_cntr_im0_msh[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[12]_i_4 
       (.I0(Q[54]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[13]),
        .O(\sig_addr_cntr_im0_msh[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[12]_i_5 
       (.I0(Q[53]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[12]),
        .O(\sig_addr_cntr_im0_msh[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[4]_i_2 
       (.I0(Q[48]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[7]),
        .O(\sig_addr_cntr_im0_msh[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[4]_i_3 
       (.I0(Q[47]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[6]),
        .O(\sig_addr_cntr_im0_msh[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[4]_i_4 
       (.I0(Q[46]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[5]),
        .O(\sig_addr_cntr_im0_msh[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[4]_i_5 
       (.I0(Q[45]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[4]),
        .O(\sig_addr_cntr_im0_msh[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[8]_i_2 
       (.I0(Q[52]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[11]),
        .O(\sig_addr_cntr_im0_msh[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[8]_i_3 
       (.I0(Q[51]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[10]),
        .O(\sig_addr_cntr_im0_msh[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[8]_i_4 
       (.I0(Q[50]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[9]),
        .O(\sig_addr_cntr_im0_msh[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_im0_msh[8]_i_5 
       (.I0(Q[49]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_addr_cntr_im0_msh_reg[8]),
        .O(\sig_addr_cntr_im0_msh[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[0] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[0]_i_2_n_7 ),
        .Q(sig_addr_cntr_im0_msh_reg[0]),
        .R(sig_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \sig_addr_cntr_im0_msh_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\sig_addr_cntr_im0_msh_reg[0]_i_2_n_0 ,\sig_addr_cntr_im0_msh_reg[0]_i_2_n_1 ,\sig_addr_cntr_im0_msh_reg[0]_i_2_n_2 ,\sig_addr_cntr_im0_msh_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\sig_addr_cntr_im0_msh[0]_i_3_n_0 }),
        .O({\sig_addr_cntr_im0_msh_reg[0]_i_2_n_4 ,\sig_addr_cntr_im0_msh_reg[0]_i_2_n_5 ,\sig_addr_cntr_im0_msh_reg[0]_i_2_n_6 ,\sig_addr_cntr_im0_msh_reg[0]_i_2_n_7 }),
        .S({\sig_addr_cntr_im0_msh[0]_i_4_n_0 ,\sig_addr_cntr_im0_msh[0]_i_5_n_0 ,\sig_addr_cntr_im0_msh[0]_i_6_n_0 ,\sig_addr_cntr_im0_msh[0]_i_7_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[10] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[8]_i_1_n_5 ),
        .Q(sig_addr_cntr_im0_msh_reg[10]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[11] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[8]_i_1_n_4 ),
        .Q(sig_addr_cntr_im0_msh_reg[11]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[12] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[12]_i_1_n_7 ),
        .Q(sig_addr_cntr_im0_msh_reg[12]),
        .R(sig_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \sig_addr_cntr_im0_msh_reg[12]_i_1 
       (.CI(\sig_addr_cntr_im0_msh_reg[8]_i_1_n_0 ),
        .CO({\NLW_sig_addr_cntr_im0_msh_reg[12]_i_1_CO_UNCONNECTED [3],\sig_addr_cntr_im0_msh_reg[12]_i_1_n_1 ,\sig_addr_cntr_im0_msh_reg[12]_i_1_n_2 ,\sig_addr_cntr_im0_msh_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sig_addr_cntr_im0_msh_reg[12]_i_1_n_4 ,\sig_addr_cntr_im0_msh_reg[12]_i_1_n_5 ,\sig_addr_cntr_im0_msh_reg[12]_i_1_n_6 ,\sig_addr_cntr_im0_msh_reg[12]_i_1_n_7 }),
        .S({\sig_addr_cntr_im0_msh[12]_i_2_n_0 ,\sig_addr_cntr_im0_msh[12]_i_3_n_0 ,\sig_addr_cntr_im0_msh[12]_i_4_n_0 ,\sig_addr_cntr_im0_msh[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[13] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[12]_i_1_n_6 ),
        .Q(sig_addr_cntr_im0_msh_reg[13]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[14] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[12]_i_1_n_5 ),
        .Q(sig_addr_cntr_im0_msh_reg[14]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[15] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[12]_i_1_n_4 ),
        .Q(sig_addr_cntr_im0_msh_reg[15]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[1] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[0]_i_2_n_6 ),
        .Q(sig_addr_cntr_im0_msh_reg[1]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[2] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[0]_i_2_n_5 ),
        .Q(sig_addr_cntr_im0_msh_reg[2]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[3] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[0]_i_2_n_4 ),
        .Q(sig_addr_cntr_im0_msh_reg[3]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[4] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[4]_i_1_n_7 ),
        .Q(sig_addr_cntr_im0_msh_reg[4]),
        .R(sig_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \sig_addr_cntr_im0_msh_reg[4]_i_1 
       (.CI(\sig_addr_cntr_im0_msh_reg[0]_i_2_n_0 ),
        .CO({\sig_addr_cntr_im0_msh_reg[4]_i_1_n_0 ,\sig_addr_cntr_im0_msh_reg[4]_i_1_n_1 ,\sig_addr_cntr_im0_msh_reg[4]_i_1_n_2 ,\sig_addr_cntr_im0_msh_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sig_addr_cntr_im0_msh_reg[4]_i_1_n_4 ,\sig_addr_cntr_im0_msh_reg[4]_i_1_n_5 ,\sig_addr_cntr_im0_msh_reg[4]_i_1_n_6 ,\sig_addr_cntr_im0_msh_reg[4]_i_1_n_7 }),
        .S({\sig_addr_cntr_im0_msh[4]_i_2_n_0 ,\sig_addr_cntr_im0_msh[4]_i_3_n_0 ,\sig_addr_cntr_im0_msh[4]_i_4_n_0 ,\sig_addr_cntr_im0_msh[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[5] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[4]_i_1_n_6 ),
        .Q(sig_addr_cntr_im0_msh_reg[5]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[6] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[4]_i_1_n_5 ),
        .Q(sig_addr_cntr_im0_msh_reg[6]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[7] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[4]_i_1_n_4 ),
        .Q(sig_addr_cntr_im0_msh_reg[7]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[8] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[8]_i_1_n_7 ),
        .Q(sig_addr_cntr_im0_msh_reg[8]),
        .R(sig_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \sig_addr_cntr_im0_msh_reg[8]_i_1 
       (.CI(\sig_addr_cntr_im0_msh_reg[4]_i_1_n_0 ),
        .CO({\sig_addr_cntr_im0_msh_reg[8]_i_1_n_0 ,\sig_addr_cntr_im0_msh_reg[8]_i_1_n_1 ,\sig_addr_cntr_im0_msh_reg[8]_i_1_n_2 ,\sig_addr_cntr_im0_msh_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sig_addr_cntr_im0_msh_reg[8]_i_1_n_4 ,\sig_addr_cntr_im0_msh_reg[8]_i_1_n_5 ,\sig_addr_cntr_im0_msh_reg[8]_i_1_n_6 ,\sig_addr_cntr_im0_msh_reg[8]_i_1_n_7 }),
        .S({\sig_addr_cntr_im0_msh[8]_i_2_n_0 ,\sig_addr_cntr_im0_msh[8]_i_3_n_0 ,\sig_addr_cntr_im0_msh[8]_i_4_n_0 ,\sig_addr_cntr_im0_msh[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_im0_msh_reg[9] 
       (.C(clk),
        .CE(\sig_addr_cntr_im0_msh[0]_i_1_n_0 ),
        .D(\sig_addr_cntr_im0_msh_reg[8]_i_1_n_6 ),
        .Q(sig_addr_cntr_im0_msh_reg[9]),
        .R(sig_reset_reg));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_addr_cntr_incr_ireg2[0]_i_1 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[0] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[0]),
        .O(\sig_addr_cntr_incr_ireg2[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'h0D)) 
    \sig_addr_cntr_incr_ireg2[10]_i_1 
       (.I0(sig_first_xfer_im0),
        .I1(sig_addr_aligned_ireg1),
        .I2(sig_btt_lt_b2mbaa_ireg1),
        .O(\sig_addr_cntr_incr_ireg2[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_addr_cntr_incr_ireg2[1]_i_1 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[1] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[1]),
        .O(\sig_addr_cntr_incr_ireg2[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_addr_cntr_incr_ireg2[2]_i_1 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[2] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[2]),
        .O(\sig_addr_cntr_incr_ireg2[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_addr_cntr_incr_ireg2[3]_i_1 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[3] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[3]),
        .O(\sig_addr_cntr_incr_ireg2[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_addr_cntr_incr_ireg2[4]_i_1 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[4] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[4]),
        .O(\sig_addr_cntr_incr_ireg2[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_addr_cntr_incr_ireg2[5]_i_1 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[5] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[5]),
        .O(\sig_addr_cntr_incr_ireg2[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_addr_cntr_incr_ireg2[6]_i_1 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[6] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[6]),
        .O(\sig_addr_cntr_incr_ireg2[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_addr_cntr_incr_ireg2[7]_i_1 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[7] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[7]),
        .O(\sig_addr_cntr_incr_ireg2[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_addr_cntr_incr_ireg2[8]_i_1 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[8] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[8]),
        .O(\sig_addr_cntr_incr_ireg2[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_addr_cntr_incr_ireg2[9]_i_1 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[9] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[9]),
        .O(\sig_addr_cntr_incr_ireg2[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_incr_ireg2_reg[0] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(\sig_addr_cntr_incr_ireg2[0]_i_1_n_0 ),
        .Q(\sig_addr_cntr_incr_ireg2_reg_n_0_[0] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_incr_ireg2_reg[10] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(\sig_addr_cntr_incr_ireg2[10]_i_1_n_0 ),
        .Q(\sig_addr_cntr_incr_ireg2_reg_n_0_[10] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_incr_ireg2_reg[1] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(\sig_addr_cntr_incr_ireg2[1]_i_1_n_0 ),
        .Q(\sig_addr_cntr_incr_ireg2_reg_n_0_[1] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_incr_ireg2_reg[2] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(\sig_addr_cntr_incr_ireg2[2]_i_1_n_0 ),
        .Q(\sig_addr_cntr_incr_ireg2_reg_n_0_[2] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_incr_ireg2_reg[3] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(\sig_addr_cntr_incr_ireg2[3]_i_1_n_0 ),
        .Q(\sig_addr_cntr_incr_ireg2_reg_n_0_[3] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_incr_ireg2_reg[4] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(\sig_addr_cntr_incr_ireg2[4]_i_1_n_0 ),
        .Q(\sig_addr_cntr_incr_ireg2_reg_n_0_[4] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_incr_ireg2_reg[5] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(\sig_addr_cntr_incr_ireg2[5]_i_1_n_0 ),
        .Q(\sig_addr_cntr_incr_ireg2_reg_n_0_[5] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_incr_ireg2_reg[6] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(\sig_addr_cntr_incr_ireg2[6]_i_1_n_0 ),
        .Q(\sig_addr_cntr_incr_ireg2_reg_n_0_[6] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_incr_ireg2_reg[7] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(\sig_addr_cntr_incr_ireg2[7]_i_1_n_0 ),
        .Q(\sig_addr_cntr_incr_ireg2_reg_n_0_[7] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_incr_ireg2_reg[8] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(\sig_addr_cntr_incr_ireg2[8]_i_1_n_0 ),
        .Q(\sig_addr_cntr_incr_ireg2_reg_n_0_[8] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_incr_ireg2_reg[9] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(\sig_addr_cntr_incr_ireg2[9]_i_1_n_0 ),
        .Q(\sig_addr_cntr_incr_ireg2_reg_n_0_[9] ),
        .R(sig_reset_reg));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[0]_i_1 
       (.I0(Q[25]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(\sig_predict_addr_lsh_ireg3_reg_n_0_[0] ),
        .O(p_1_in[0]));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[10]_i_1 
       (.I0(Q[35]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(\sig_predict_addr_lsh_ireg3_reg_n_0_[10] ),
        .O(p_1_in[10]));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[11]_i_1 
       (.I0(Q[36]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(\sig_predict_addr_lsh_ireg3_reg_n_0_[11] ),
        .O(p_1_in[11]));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[12]_i_1 
       (.I0(Q[37]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(\sig_predict_addr_lsh_ireg3_reg_n_0_[12] ),
        .O(p_1_in[12]));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[13]_i_1 
       (.I0(Q[38]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(\sig_predict_addr_lsh_ireg3_reg_n_0_[13] ),
        .O(p_1_in[13]));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[14]_i_1 
       (.I0(Q[39]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(\sig_predict_addr_lsh_ireg3_reg_n_0_[14] ),
        .O(p_1_in[14]));
  LUT5 #(
    .INIT(32'hFFFF0020)) 
    \sig_addr_cntr_lsh_im0[15]_i_1 
       (.I0(sig_input_reg_empty),
        .I1(sig_sm_halt_reg),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(in[41]),
        .I4(\FSM_onehot_sig_pcc_sm_state[6]_i_2_n_0 ),
        .O(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[15]_i_2 
       (.I0(Q[40]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(sig_predict_addr_lsh_ireg3),
        .O(p_1_in[15]));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[1]_i_1 
       (.I0(Q[26]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(\sig_predict_addr_lsh_ireg3_reg_n_0_[1] ),
        .O(p_1_in[1]));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[2]_i_1 
       (.I0(Q[27]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(\sig_predict_addr_lsh_ireg3_reg_n_0_[2] ),
        .O(p_1_in[2]));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[3]_i_1 
       (.I0(Q[28]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(\sig_predict_addr_lsh_ireg3_reg_n_0_[3] ),
        .O(p_1_in[3]));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[4]_i_1 
       (.I0(Q[29]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(\sig_predict_addr_lsh_ireg3_reg_n_0_[4] ),
        .O(p_1_in[4]));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[5]_i_1 
       (.I0(Q[30]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(\sig_predict_addr_lsh_ireg3_reg_n_0_[5] ),
        .O(p_1_in[5]));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[6]_i_1 
       (.I0(Q[31]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(\sig_predict_addr_lsh_ireg3_reg_n_0_[6] ),
        .O(p_1_in[6]));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[7]_i_1 
       (.I0(Q[32]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(\sig_predict_addr_lsh_ireg3_reg_n_0_[7] ),
        .O(p_1_in[7]));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[8]_i_1 
       (.I0(Q[33]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(\sig_predict_addr_lsh_ireg3_reg_n_0_[8] ),
        .O(p_1_in[8]));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \sig_addr_cntr_lsh_im0[9]_i_1 
       (.I0(Q[34]),
        .I1(in[41]),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(sig_sm_halt_reg),
        .I4(sig_input_reg_empty),
        .I5(\sig_predict_addr_lsh_ireg3_reg_n_0_[9] ),
        .O(p_1_in[9]));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[0] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[10] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(\sig_addr_cntr_lsh_im0_reg_n_0_[10] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[11] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(\sig_addr_cntr_lsh_im0_reg_n_0_[11] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[12] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(\sig_addr_cntr_lsh_im0_reg_n_0_[12] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[13] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(\sig_addr_cntr_lsh_im0_reg_n_0_[13] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[14] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(\sig_addr_cntr_lsh_im0_reg_n_0_[14] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[15] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(p_1_in_0),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[1] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[2] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(\sig_addr_cntr_lsh_im0_reg_n_0_[2] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[3] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(\sig_addr_cntr_lsh_im0_reg_n_0_[3] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[4] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(\sig_addr_cntr_lsh_im0_reg_n_0_[4] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[5] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(\sig_addr_cntr_lsh_im0_reg_n_0_[5] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[6] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(\sig_addr_cntr_lsh_im0_reg_n_0_[6] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[7] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(\sig_addr_cntr_lsh_im0_reg_n_0_[7] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[8] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(\sig_addr_cntr_lsh_im0_reg_n_0_[8] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_im0_reg[9] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(\sig_addr_cntr_lsh_im0_reg_n_0_[9] ),
        .R(sig_reset_reg));
  LUT4 #(
    .INIT(16'h0400)) 
    \sig_addr_cntr_lsh_kh[31]_i_1 
       (.I0(in[41]),
        .I1(sig_cmd2mstr_cmd_valid),
        .I2(sig_sm_halt_reg),
        .I3(sig_input_reg_empty),
        .O(sig_push_input_reg11_out));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[0] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[25]),
        .Q(sig_addr_cntr_lsh_kh[0]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[10] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[35]),
        .Q(sig_addr_cntr_lsh_kh[10]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[11] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[36]),
        .Q(sig_addr_cntr_lsh_kh[11]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[12] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[37]),
        .Q(sig_addr_cntr_lsh_kh[12]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[13] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[38]),
        .Q(sig_addr_cntr_lsh_kh[13]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[14] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[39]),
        .Q(sig_addr_cntr_lsh_kh[14]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[15] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[40]),
        .Q(sig_addr_cntr_lsh_kh[15]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[16] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[41]),
        .Q(sig_addr_cntr_lsh_kh[16]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[17] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[42]),
        .Q(sig_addr_cntr_lsh_kh[17]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[18] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[43]),
        .Q(sig_addr_cntr_lsh_kh[18]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[19] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[44]),
        .Q(sig_addr_cntr_lsh_kh[19]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[1] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[26]),
        .Q(sig_addr_cntr_lsh_kh[1]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[20] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[45]),
        .Q(sig_addr_cntr_lsh_kh[20]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[21] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[46]),
        .Q(sig_addr_cntr_lsh_kh[21]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[22] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[47]),
        .Q(sig_addr_cntr_lsh_kh[22]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[23] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[48]),
        .Q(sig_addr_cntr_lsh_kh[23]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[24] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[49]),
        .Q(sig_addr_cntr_lsh_kh[24]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[25] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[50]),
        .Q(sig_addr_cntr_lsh_kh[25]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[26] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[51]),
        .Q(sig_addr_cntr_lsh_kh[26]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[27] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[52]),
        .Q(sig_addr_cntr_lsh_kh[27]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[28] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[53]),
        .Q(sig_addr_cntr_lsh_kh[28]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[29] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[54]),
        .Q(sig_addr_cntr_lsh_kh[29]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[2] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[27]),
        .Q(sig_addr_cntr_lsh_kh[2]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[30] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[55]),
        .Q(sig_addr_cntr_lsh_kh[30]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[31] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[56]),
        .Q(sig_addr_cntr_lsh_kh[31]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[3] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[28]),
        .Q(sig_addr_cntr_lsh_kh[3]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[4] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[29]),
        .Q(sig_addr_cntr_lsh_kh[4]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[5] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[30]),
        .Q(sig_addr_cntr_lsh_kh[5]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[6] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[31]),
        .Q(sig_addr_cntr_lsh_kh[6]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[7] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[32]),
        .Q(sig_addr_cntr_lsh_kh[7]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[8] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[33]),
        .Q(sig_addr_cntr_lsh_kh[8]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_cntr_lsh_kh_reg[9] 
       (.C(clk),
        .CE(sig_push_input_reg11_out),
        .D(Q[34]),
        .Q(sig_addr_cntr_lsh_kh[9]),
        .R(sig_reset_reg));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_adjusted_addr_incr_ireg2[3]_i_2 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[3] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[3]),
        .O(\sig_adjusted_addr_incr_ireg2[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_adjusted_addr_incr_ireg2[3]_i_3 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[2] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[2]),
        .O(\sig_adjusted_addr_incr_ireg2[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h07F7F808)) 
    \sig_adjusted_addr_incr_ireg2[3]_i_4 
       (.I0(sig_bytes_to_mbaa_ireg1[1]),
        .I1(sig_first_xfer_im0),
        .I2(sig_btt_lt_b2mbaa_ireg1),
        .I3(\sig_btt_cntr_im0_reg_n_0_[1] ),
        .I4(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .O(\sig_adjusted_addr_incr_ireg2[3]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h07F7F808)) 
    \sig_adjusted_addr_incr_ireg2[3]_i_5 
       (.I0(sig_bytes_to_mbaa_ireg1[0]),
        .I1(sig_first_xfer_im0),
        .I2(sig_btt_lt_b2mbaa_ireg1),
        .I3(\sig_btt_cntr_im0_reg_n_0_[0] ),
        .I4(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .O(\sig_adjusted_addr_incr_ireg2[3]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_adjusted_addr_incr_ireg2[7]_i_2 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[7] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[7]),
        .O(\sig_adjusted_addr_incr_ireg2[7]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_adjusted_addr_incr_ireg2[7]_i_3 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[6] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[6]),
        .O(\sig_adjusted_addr_incr_ireg2[7]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_adjusted_addr_incr_ireg2[7]_i_4 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[5] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[5]),
        .O(\sig_adjusted_addr_incr_ireg2[7]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_adjusted_addr_incr_ireg2[7]_i_5 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[4] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[4]),
        .O(\sig_adjusted_addr_incr_ireg2[7]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_adjusted_addr_incr_ireg2[9]_i_2 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[9] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[9]),
        .O(\sig_adjusted_addr_incr_ireg2[9]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hB888)) 
    \sig_adjusted_addr_incr_ireg2[9]_i_3 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[8] ),
        .I1(sig_btt_lt_b2mbaa_ireg1),
        .I2(sig_first_xfer_im0),
        .I3(sig_bytes_to_mbaa_ireg1[8]),
        .O(\sig_adjusted_addr_incr_ireg2[9]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_adjusted_addr_incr_ireg2_reg[0] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(sig_adjusted_addr_incr_im1[0]),
        .Q(\sig_adjusted_addr_incr_ireg2_reg_n_0_[0] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_adjusted_addr_incr_ireg2_reg[1] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(sig_adjusted_addr_incr_im1[1]),
        .Q(\sig_adjusted_addr_incr_ireg2_reg_n_0_[1] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_adjusted_addr_incr_ireg2_reg[2] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(sig_adjusted_addr_incr_im1[2]),
        .Q(\sig_adjusted_addr_incr_ireg2_reg_n_0_[2] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_adjusted_addr_incr_ireg2_reg[3] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(sig_adjusted_addr_incr_im1[3]),
        .Q(\sig_adjusted_addr_incr_ireg2_reg_n_0_[3] ),
        .R(sig_reset_reg));
  CARRY4 \sig_adjusted_addr_incr_ireg2_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\sig_adjusted_addr_incr_ireg2_reg[3]_i_1_n_0 ,\sig_adjusted_addr_incr_ireg2_reg[3]_i_1_n_1 ,\sig_adjusted_addr_incr_ireg2_reg[3]_i_1_n_2 ,\sig_adjusted_addr_incr_ireg2_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\sig_addr_cntr_lsh_im0_reg_n_0_[1] ,\sig_addr_cntr_lsh_im0_reg_n_0_[0] }),
        .O(sig_adjusted_addr_incr_im1[3:0]),
        .S({\sig_adjusted_addr_incr_ireg2[3]_i_2_n_0 ,\sig_adjusted_addr_incr_ireg2[3]_i_3_n_0 ,\sig_adjusted_addr_incr_ireg2[3]_i_4_n_0 ,\sig_adjusted_addr_incr_ireg2[3]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_adjusted_addr_incr_ireg2_reg[4] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(sig_adjusted_addr_incr_im1[4]),
        .Q(\sig_adjusted_addr_incr_ireg2_reg_n_0_[4] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_adjusted_addr_incr_ireg2_reg[5] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(sig_adjusted_addr_incr_im1[5]),
        .Q(\sig_adjusted_addr_incr_ireg2_reg_n_0_[5] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_adjusted_addr_incr_ireg2_reg[6] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(sig_adjusted_addr_incr_im1[6]),
        .Q(\sig_adjusted_addr_incr_ireg2_reg_n_0_[6] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_adjusted_addr_incr_ireg2_reg[7] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(sig_adjusted_addr_incr_im1[7]),
        .Q(\sig_adjusted_addr_incr_ireg2_reg_n_0_[7] ),
        .R(sig_reset_reg));
  CARRY4 \sig_adjusted_addr_incr_ireg2_reg[7]_i_1 
       (.CI(\sig_adjusted_addr_incr_ireg2_reg[3]_i_1_n_0 ),
        .CO({\sig_adjusted_addr_incr_ireg2_reg[7]_i_1_n_0 ,\sig_adjusted_addr_incr_ireg2_reg[7]_i_1_n_1 ,\sig_adjusted_addr_incr_ireg2_reg[7]_i_1_n_2 ,\sig_adjusted_addr_incr_ireg2_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sig_adjusted_addr_incr_im1[7:4]),
        .S({\sig_adjusted_addr_incr_ireg2[7]_i_2_n_0 ,\sig_adjusted_addr_incr_ireg2[7]_i_3_n_0 ,\sig_adjusted_addr_incr_ireg2[7]_i_4_n_0 ,\sig_adjusted_addr_incr_ireg2[7]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_adjusted_addr_incr_ireg2_reg[8] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(sig_adjusted_addr_incr_im1[8]),
        .Q(\sig_adjusted_addr_incr_ireg2_reg_n_0_[8] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_adjusted_addr_incr_ireg2_reg[9] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg),
        .D(sig_adjusted_addr_incr_im1[9]),
        .Q(\sig_adjusted_addr_incr_ireg2_reg_n_0_[9] ),
        .R(sig_reset_reg));
  CARRY4 \sig_adjusted_addr_incr_ireg2_reg[9]_i_1 
       (.CI(\sig_adjusted_addr_incr_ireg2_reg[7]_i_1_n_0 ),
        .CO({\NLW_sig_adjusted_addr_incr_ireg2_reg[9]_i_1_CO_UNCONNECTED [3:1],\sig_adjusted_addr_incr_ireg2_reg[9]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_sig_adjusted_addr_incr_ireg2_reg[9]_i_1_O_UNCONNECTED [3:2],sig_adjusted_addr_incr_im1[9:8]}),
        .S({1'b0,1'b0,\sig_adjusted_addr_incr_ireg2[9]_i_2_n_0 ,\sig_adjusted_addr_incr_ireg2[9]_i_3_n_0 }));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    sig_brst_cnt_eq_one_ireg1_i_1
       (.I0(sig_brst_cnt_eq_zero_ireg1_i_2_n_0),
        .I1(\sig_btt_cntr_im0_reg_n_0_[10] ),
        .I2(\sig_btt_cntr_im0_reg_n_0_[20] ),
        .I3(\sig_btt_cntr_im0_reg_n_0_[21] ),
        .I4(\sig_btt_cntr_im0_reg_n_0_[22] ),
        .I5(\sig_btt_cntr_im0_reg_n_0_[19] ),
        .O(sig_brst_cnt_eq_one_im0));
  FDRE #(
    .INIT(1'b0)) 
    sig_brst_cnt_eq_one_ireg1_reg
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(sig_brst_cnt_eq_one_im0),
        .Q(sig_brst_cnt_eq_one_ireg1),
        .R(sig_reset_reg));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    sig_brst_cnt_eq_zero_ireg1_i_1
       (.I0(sig_brst_cnt_eq_zero_ireg1_i_2_n_0),
        .I1(\sig_btt_cntr_im0_reg_n_0_[20] ),
        .I2(\sig_btt_cntr_im0_reg_n_0_[21] ),
        .I3(\sig_btt_cntr_im0_reg_n_0_[22] ),
        .I4(\sig_btt_cntr_im0_reg_n_0_[19] ),
        .I5(\sig_btt_cntr_im0_reg_n_0_[10] ),
        .O(sig_brst_cnt_eq_zero_im0));
  LUT5 #(
    .INIT(32'h00000001)) 
    sig_brst_cnt_eq_zero_ireg1_i_2
       (.I0(\sig_btt_cntr_im0_reg_n_0_[14] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[13] ),
        .I2(\sig_btt_cntr_im0_reg_n_0_[12] ),
        .I3(\sig_btt_cntr_im0_reg_n_0_[11] ),
        .I4(sig_brst_cnt_eq_zero_ireg1_i_3_n_0),
        .O(sig_brst_cnt_eq_zero_ireg1_i_2_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sig_brst_cnt_eq_zero_ireg1_i_3
       (.I0(\sig_btt_cntr_im0_reg_n_0_[17] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[18] ),
        .I2(\sig_btt_cntr_im0_reg_n_0_[16] ),
        .I3(\sig_btt_cntr_im0_reg_n_0_[15] ),
        .O(sig_brst_cnt_eq_zero_ireg1_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_brst_cnt_eq_zero_ireg1_reg
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(sig_brst_cnt_eq_zero_im0),
        .Q(sig_brst_cnt_eq_zero_ireg1),
        .R(sig_reset_reg));
  LUT5 #(
    .INIT(32'h55555155)) 
    \sig_btt_cntr_im0[11]_i_2 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[10] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .O(\sig_btt_cntr_im0[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h55555155)) 
    \sig_btt_cntr_im0[11]_i_3 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[9] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .O(\sig_btt_cntr_im0[11]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h55555155)) 
    \sig_btt_cntr_im0[11]_i_4 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[8] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .O(\sig_btt_cntr_im0[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h55555D5555555155)) 
    \sig_btt_cntr_im0[11]_i_5 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[11] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .I5(Q[11]),
        .O(\sig_btt_cntr_im0[11]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hF909)) 
    \sig_btt_cntr_im0[11]_i_6 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[10] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[10] ),
        .I2(sig_push_input_reg11_out),
        .I3(Q[10]),
        .O(\sig_btt_cntr_im0[11]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hF909)) 
    \sig_btt_cntr_im0[11]_i_7 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[9] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[9] ),
        .I2(sig_push_input_reg11_out),
        .I3(Q[9]),
        .O(\sig_btt_cntr_im0[11]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hF909)) 
    \sig_btt_cntr_im0[11]_i_8 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[8] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[8] ),
        .I2(sig_push_input_reg11_out),
        .I3(Q[8]),
        .O(\sig_btt_cntr_im0[11]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h55555D5555555155)) 
    \sig_btt_cntr_im0[15]_i_2 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[15] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .I5(Q[15]),
        .O(\sig_btt_cntr_im0[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h55555D5555555155)) 
    \sig_btt_cntr_im0[15]_i_3 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[14] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .I5(Q[14]),
        .O(\sig_btt_cntr_im0[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h55555D5555555155)) 
    \sig_btt_cntr_im0[15]_i_4 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[13] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .I5(Q[13]),
        .O(\sig_btt_cntr_im0[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h55555D5555555155)) 
    \sig_btt_cntr_im0[15]_i_5 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[12] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .I5(Q[12]),
        .O(\sig_btt_cntr_im0[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h55555D5555555155)) 
    \sig_btt_cntr_im0[19]_i_2 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[19] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .I5(Q[19]),
        .O(\sig_btt_cntr_im0[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h55555D5555555155)) 
    \sig_btt_cntr_im0[19]_i_3 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[18] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .I5(Q[18]),
        .O(\sig_btt_cntr_im0[19]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h55555D5555555155)) 
    \sig_btt_cntr_im0[19]_i_4 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[17] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .I5(Q[17]),
        .O(\sig_btt_cntr_im0[19]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h55555D5555555155)) 
    \sig_btt_cntr_im0[19]_i_5 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[16] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .I5(Q[16]),
        .O(\sig_btt_cntr_im0[19]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \sig_btt_cntr_im0[22]_i_2 
       (.I0(sig_input_reg_empty),
        .I1(sig_sm_halt_reg),
        .I2(sig_cmd2mstr_cmd_valid),
        .I3(in[41]),
        .O(\sig_btt_cntr_im0[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h55555D5555555155)) 
    \sig_btt_cntr_im0[22]_i_3 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[22] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .I5(Q[22]),
        .O(\sig_btt_cntr_im0[22]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h55555D5555555155)) 
    \sig_btt_cntr_im0[22]_i_4 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[21] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .I5(Q[21]),
        .O(\sig_btt_cntr_im0[22]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h55555D5555555155)) 
    \sig_btt_cntr_im0[22]_i_5 
       (.I0(\sig_btt_cntr_im0_reg_n_0_[20] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .I5(Q[20]),
        .O(\sig_btt_cntr_im0[22]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h55555155)) 
    \sig_btt_cntr_im0[3]_i_2 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[3] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .O(\sig_btt_cntr_im0[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h55555155)) 
    \sig_btt_cntr_im0[3]_i_3 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[2] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .O(\sig_btt_cntr_im0[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h55555155)) 
    \sig_btt_cntr_im0[3]_i_4 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[1] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .O(\sig_btt_cntr_im0[3]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h55555155)) 
    \sig_btt_cntr_im0[3]_i_5 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[0] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .O(\sig_btt_cntr_im0[3]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hF909)) 
    \sig_btt_cntr_im0[3]_i_6 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[3] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[3] ),
        .I2(sig_push_input_reg11_out),
        .I3(Q[3]),
        .O(\sig_btt_cntr_im0[3]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hF909)) 
    \sig_btt_cntr_im0[3]_i_7 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[2] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[2] ),
        .I2(sig_push_input_reg11_out),
        .I3(Q[2]),
        .O(\sig_btt_cntr_im0[3]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hF909)) 
    \sig_btt_cntr_im0[3]_i_8 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[1] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[1] ),
        .I2(sig_push_input_reg11_out),
        .I3(Q[1]),
        .O(\sig_btt_cntr_im0[3]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hF909)) 
    \sig_btt_cntr_im0[3]_i_9 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[0] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[0] ),
        .I2(sig_push_input_reg11_out),
        .I3(Q[0]),
        .O(\sig_btt_cntr_im0[3]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h55555155)) 
    \sig_btt_cntr_im0[7]_i_2 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[7] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .O(\sig_btt_cntr_im0[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h55555155)) 
    \sig_btt_cntr_im0[7]_i_3 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[6] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .O(\sig_btt_cntr_im0[7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h55555155)) 
    \sig_btt_cntr_im0[7]_i_4 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[5] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .O(\sig_btt_cntr_im0[7]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h55555155)) 
    \sig_btt_cntr_im0[7]_i_5 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[4] ),
        .I1(sig_input_reg_empty),
        .I2(sig_sm_halt_reg),
        .I3(sig_cmd2mstr_cmd_valid),
        .I4(in[41]),
        .O(\sig_btt_cntr_im0[7]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hF909)) 
    \sig_btt_cntr_im0[7]_i_6 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[7] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[7] ),
        .I2(sig_push_input_reg11_out),
        .I3(Q[7]),
        .O(\sig_btt_cntr_im0[7]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hF909)) 
    \sig_btt_cntr_im0[7]_i_7 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[6] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[6] ),
        .I2(sig_push_input_reg11_out),
        .I3(Q[6]),
        .O(\sig_btt_cntr_im0[7]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hF909)) 
    \sig_btt_cntr_im0[7]_i_8 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[5] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[5] ),
        .I2(sig_push_input_reg11_out),
        .I3(Q[5]),
        .O(\sig_btt_cntr_im0[7]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hF909)) 
    \sig_btt_cntr_im0[7]_i_9 
       (.I0(\sig_addr_cntr_incr_ireg2_reg_n_0_[4] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[4] ),
        .I2(sig_push_input_reg11_out),
        .I3(Q[4]),
        .O(\sig_btt_cntr_im0[7]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[0] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[3]_i_1_n_7 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[0] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[10] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[11]_i_1_n_5 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[10] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[11] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[11]_i_1_n_4 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[11] ),
        .R(sig_reset_reg));
  CARRY4 \sig_btt_cntr_im0_reg[11]_i_1 
       (.CI(\sig_btt_cntr_im0_reg[7]_i_1_n_0 ),
        .CO({\sig_btt_cntr_im0_reg[11]_i_1_n_0 ,\sig_btt_cntr_im0_reg[11]_i_1_n_1 ,\sig_btt_cntr_im0_reg[11]_i_1_n_2 ,\sig_btt_cntr_im0_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\sig_btt_cntr_im0[22]_i_2_n_0 ,\sig_btt_cntr_im0[11]_i_2_n_0 ,\sig_btt_cntr_im0[11]_i_3_n_0 ,\sig_btt_cntr_im0[11]_i_4_n_0 }),
        .O({\sig_btt_cntr_im0_reg[11]_i_1_n_4 ,\sig_btt_cntr_im0_reg[11]_i_1_n_5 ,\sig_btt_cntr_im0_reg[11]_i_1_n_6 ,\sig_btt_cntr_im0_reg[11]_i_1_n_7 }),
        .S({\sig_btt_cntr_im0[11]_i_5_n_0 ,\sig_btt_cntr_im0[11]_i_6_n_0 ,\sig_btt_cntr_im0[11]_i_7_n_0 ,\sig_btt_cntr_im0[11]_i_8_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[12] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[15]_i_1_n_7 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[12] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[13] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[15]_i_1_n_6 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[13] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[14] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[15]_i_1_n_5 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[14] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[15] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[15]_i_1_n_4 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[15] ),
        .R(sig_reset_reg));
  CARRY4 \sig_btt_cntr_im0_reg[15]_i_1 
       (.CI(\sig_btt_cntr_im0_reg[11]_i_1_n_0 ),
        .CO({\sig_btt_cntr_im0_reg[15]_i_1_n_0 ,\sig_btt_cntr_im0_reg[15]_i_1_n_1 ,\sig_btt_cntr_im0_reg[15]_i_1_n_2 ,\sig_btt_cntr_im0_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\sig_btt_cntr_im0[22]_i_2_n_0 ,\sig_btt_cntr_im0[22]_i_2_n_0 ,\sig_btt_cntr_im0[22]_i_2_n_0 ,\sig_btt_cntr_im0[22]_i_2_n_0 }),
        .O({\sig_btt_cntr_im0_reg[15]_i_1_n_4 ,\sig_btt_cntr_im0_reg[15]_i_1_n_5 ,\sig_btt_cntr_im0_reg[15]_i_1_n_6 ,\sig_btt_cntr_im0_reg[15]_i_1_n_7 }),
        .S({\sig_btt_cntr_im0[15]_i_2_n_0 ,\sig_btt_cntr_im0[15]_i_3_n_0 ,\sig_btt_cntr_im0[15]_i_4_n_0 ,\sig_btt_cntr_im0[15]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[16] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[19]_i_1_n_7 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[16] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[17] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[19]_i_1_n_6 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[17] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[18] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[19]_i_1_n_5 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[18] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[19] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[19]_i_1_n_4 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[19] ),
        .R(sig_reset_reg));
  CARRY4 \sig_btt_cntr_im0_reg[19]_i_1 
       (.CI(\sig_btt_cntr_im0_reg[15]_i_1_n_0 ),
        .CO({\sig_btt_cntr_im0_reg[19]_i_1_n_0 ,\sig_btt_cntr_im0_reg[19]_i_1_n_1 ,\sig_btt_cntr_im0_reg[19]_i_1_n_2 ,\sig_btt_cntr_im0_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\sig_btt_cntr_im0[22]_i_2_n_0 ,\sig_btt_cntr_im0[22]_i_2_n_0 ,\sig_btt_cntr_im0[22]_i_2_n_0 ,\sig_btt_cntr_im0[22]_i_2_n_0 }),
        .O({\sig_btt_cntr_im0_reg[19]_i_1_n_4 ,\sig_btt_cntr_im0_reg[19]_i_1_n_5 ,\sig_btt_cntr_im0_reg[19]_i_1_n_6 ,\sig_btt_cntr_im0_reg[19]_i_1_n_7 }),
        .S({\sig_btt_cntr_im0[19]_i_2_n_0 ,\sig_btt_cntr_im0[19]_i_3_n_0 ,\sig_btt_cntr_im0[19]_i_4_n_0 ,\sig_btt_cntr_im0[19]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[1] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[3]_i_1_n_6 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[1] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[20] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[22]_i_1_n_7 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[20] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[21] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[22]_i_1_n_6 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[21] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[22] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[22]_i_1_n_5 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[22] ),
        .R(sig_reset_reg));
  CARRY4 \sig_btt_cntr_im0_reg[22]_i_1 
       (.CI(\sig_btt_cntr_im0_reg[19]_i_1_n_0 ),
        .CO({\NLW_sig_btt_cntr_im0_reg[22]_i_1_CO_UNCONNECTED [3:2],\sig_btt_cntr_im0_reg[22]_i_1_n_2 ,\sig_btt_cntr_im0_reg[22]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\sig_btt_cntr_im0[22]_i_2_n_0 ,\sig_btt_cntr_im0[22]_i_2_n_0 }),
        .O({\NLW_sig_btt_cntr_im0_reg[22]_i_1_O_UNCONNECTED [3],\sig_btt_cntr_im0_reg[22]_i_1_n_5 ,\sig_btt_cntr_im0_reg[22]_i_1_n_6 ,\sig_btt_cntr_im0_reg[22]_i_1_n_7 }),
        .S({1'b0,\sig_btt_cntr_im0[22]_i_3_n_0 ,\sig_btt_cntr_im0[22]_i_4_n_0 ,\sig_btt_cntr_im0[22]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[2] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[3]_i_1_n_5 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[2] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[3] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[3]_i_1_n_4 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[3] ),
        .R(sig_reset_reg));
  CARRY4 \sig_btt_cntr_im0_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\sig_btt_cntr_im0_reg[3]_i_1_n_0 ,\sig_btt_cntr_im0_reg[3]_i_1_n_1 ,\sig_btt_cntr_im0_reg[3]_i_1_n_2 ,\sig_btt_cntr_im0_reg[3]_i_1_n_3 }),
        .CYINIT(\sig_btt_cntr_im0[22]_i_2_n_0 ),
        .DI({\sig_btt_cntr_im0[3]_i_2_n_0 ,\sig_btt_cntr_im0[3]_i_3_n_0 ,\sig_btt_cntr_im0[3]_i_4_n_0 ,\sig_btt_cntr_im0[3]_i_5_n_0 }),
        .O({\sig_btt_cntr_im0_reg[3]_i_1_n_4 ,\sig_btt_cntr_im0_reg[3]_i_1_n_5 ,\sig_btt_cntr_im0_reg[3]_i_1_n_6 ,\sig_btt_cntr_im0_reg[3]_i_1_n_7 }),
        .S({\sig_btt_cntr_im0[3]_i_6_n_0 ,\sig_btt_cntr_im0[3]_i_7_n_0 ,\sig_btt_cntr_im0[3]_i_8_n_0 ,\sig_btt_cntr_im0[3]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[4] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[7]_i_1_n_7 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[4] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[5] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[7]_i_1_n_6 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[5] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[6] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[7]_i_1_n_5 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[6] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[7] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[7]_i_1_n_4 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[7] ),
        .R(sig_reset_reg));
  CARRY4 \sig_btt_cntr_im0_reg[7]_i_1 
       (.CI(\sig_btt_cntr_im0_reg[3]_i_1_n_0 ),
        .CO({\sig_btt_cntr_im0_reg[7]_i_1_n_0 ,\sig_btt_cntr_im0_reg[7]_i_1_n_1 ,\sig_btt_cntr_im0_reg[7]_i_1_n_2 ,\sig_btt_cntr_im0_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\sig_btt_cntr_im0[7]_i_2_n_0 ,\sig_btt_cntr_im0[7]_i_3_n_0 ,\sig_btt_cntr_im0[7]_i_4_n_0 ,\sig_btt_cntr_im0[7]_i_5_n_0 }),
        .O({\sig_btt_cntr_im0_reg[7]_i_1_n_4 ,\sig_btt_cntr_im0_reg[7]_i_1_n_5 ,\sig_btt_cntr_im0_reg[7]_i_1_n_6 ,\sig_btt_cntr_im0_reg[7]_i_1_n_7 }),
        .S({\sig_btt_cntr_im0[7]_i_6_n_0 ,\sig_btt_cntr_im0[7]_i_7_n_0 ,\sig_btt_cntr_im0[7]_i_8_n_0 ,\sig_btt_cntr_im0[7]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[8] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[11]_i_1_n_7 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[8] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_btt_cntr_im0_reg[9] 
       (.C(clk),
        .CE(\sig_addr_cntr_lsh_im0[15]_i_1_n_0 ),
        .D(\sig_btt_cntr_im0_reg[11]_i_1_n_6 ),
        .Q(\sig_btt_cntr_im0_reg_n_0_[9] ),
        .R(sig_reset_reg));
  CARRY4 sig_btt_eq_b2mbaa_im01_carry
       (.CI(1'b0),
        .CO({sig_btt_eq_b2mbaa_im01,sig_btt_eq_b2mbaa_im01_carry_n_1,sig_btt_eq_b2mbaa_im01_carry_n_2,sig_btt_eq_b2mbaa_im01_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_sig_btt_eq_b2mbaa_im01_carry_O_UNCONNECTED[3:0]),
        .S({sig_btt_eq_b2mbaa_im01_carry_i_1_n_0,sig_btt_eq_b2mbaa_im01_carry_i_2_n_0,sig_btt_eq_b2mbaa_im01_carry_i_3_n_0,sig_btt_eq_b2mbaa_im01_carry_i_4_n_0}));
  LUT6 #(
    .INIT(64'h6666666666666668)) 
    sig_btt_eq_b2mbaa_im01_carry_i_1
       (.I0(\sig_btt_cntr_im0_reg_n_0_[9] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[9] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[8] ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[6] ),
        .I4(\sig_bytes_to_mbaa_ireg1[9]_i_2_n_0 ),
        .I5(\sig_addr_cntr_lsh_im0_reg_n_0_[7] ),
        .O(sig_btt_eq_b2mbaa_im01_carry_i_1_n_0));
  LUT6 #(
    .INIT(64'h55560000AAA90000)) 
    sig_btt_eq_b2mbaa_im01_carry_i_2
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[8] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[6] ),
        .I2(\sig_bytes_to_mbaa_ireg1[9]_i_2_n_0 ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[7] ),
        .I4(sig_btt_eq_b2mbaa_im01_carry_i_5_n_0),
        .I5(\sig_btt_cntr_im0_reg_n_0_[8] ),
        .O(sig_btt_eq_b2mbaa_im01_carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h2222222888888882)) 
    sig_btt_eq_b2mbaa_im01_carry_i_3
       (.I0(sig_btt_eq_b2mbaa_im01_carry_i_6_n_0),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[3] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .I4(\sig_addr_cntr_lsh_im0_reg_n_0_[2] ),
        .I5(\sig_btt_cntr_im0_reg_n_0_[3] ),
        .O(sig_btt_eq_b2mbaa_im01_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h0208041020804001)) 
    sig_btt_eq_b2mbaa_im01_carry_i_4
       (.I0(\sig_btt_cntr_im0_reg_n_0_[0] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[1] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[2] ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .I4(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .I5(\sig_btt_cntr_im0_reg_n_0_[2] ),
        .O(sig_btt_eq_b2mbaa_im01_carry_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT5 #(
    .INIT(32'h06606009)) 
    sig_btt_eq_b2mbaa_im01_carry_i_5
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[7] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[7] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[6] ),
        .I3(\sig_bytes_to_mbaa_ireg1[9]_i_2_n_0 ),
        .I4(\sig_btt_cntr_im0_reg_n_0_[6] ),
        .O(sig_btt_eq_b2mbaa_im01_carry_i_5_n_0));
  LUT5 #(
    .INIT(32'h06606009)) 
    sig_btt_eq_b2mbaa_im01_carry_i_6
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[5] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[5] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[4] ),
        .I3(sig_btt_lt_b2mbaa_im01_carry_i_9_n_0),
        .I4(\sig_btt_cntr_im0_reg_n_0_[4] ),
        .O(sig_btt_eq_b2mbaa_im01_carry_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h8)) 
    sig_btt_eq_b2mbaa_ireg1_i_1
       (.I0(sig_btt_eq_b2mbaa_im01),
        .I1(sig_brst_cnt_eq_zero_im0),
        .O(sig_btt_eq_b2mbaa_im0));
  FDRE #(
    .INIT(1'b0)) 
    sig_btt_eq_b2mbaa_ireg1_reg
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(sig_btt_eq_b2mbaa_im0),
        .Q(sig_btt_eq_b2mbaa_ireg1),
        .R(sig_reset_reg));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sig_btt_lt_b2mbaa_im01_carry
       (.CI(1'b0),
        .CO({sig_btt_lt_b2mbaa_im01_carry_n_0,sig_btt_lt_b2mbaa_im01_carry_n_1,sig_btt_lt_b2mbaa_im01_carry_n_2,sig_btt_lt_b2mbaa_im01_carry_n_3}),
        .CYINIT(1'b0),
        .DI({sig_btt_lt_b2mbaa_im01_carry_i_1_n_0,sig_btt_lt_b2mbaa_im01_carry_i_2_n_0,sig_btt_lt_b2mbaa_im01_carry_i_3_n_0,sig_btt_lt_b2mbaa_im01_carry_i_4_n_0}),
        .O(NLW_sig_btt_lt_b2mbaa_im01_carry_O_UNCONNECTED[3:0]),
        .S({sig_btt_lt_b2mbaa_im01_carry_i_5_n_0,sig_btt_lt_b2mbaa_im01_carry_i_6_n_0,sig_btt_lt_b2mbaa_im01_carry_i_7_n_0,sig_btt_lt_b2mbaa_im01_carry_i_8_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sig_btt_lt_b2mbaa_im01_carry__0
       (.CI(sig_btt_lt_b2mbaa_im01_carry_n_0),
        .CO({NLW_sig_btt_lt_b2mbaa_im01_carry__0_CO_UNCONNECTED[3:2],sig_btt_lt_b2mbaa_im01,sig_btt_lt_b2mbaa_im01_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,sig_addr_aligned_im0,sig_btt_lt_b2mbaa_im01_carry__0_i_1_n_0}),
        .O(NLW_sig_btt_lt_b2mbaa_im01_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,sig_btt_lt_b2mbaa_im01_carry__0_i_2_n_0,sig_btt_lt_b2mbaa_im01_carry__0_i_3_n_0}));
  LUT5 #(
    .INIT(32'h0154157C)) 
    sig_btt_lt_b2mbaa_im01_carry__0_i_1
       (.I0(\sig_btt_cntr_im0_reg_n_0_[9] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[8] ),
        .I2(sig_btt_lt_b2mbaa_im01_carry__0_i_4_n_0),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[9] ),
        .I4(\sig_btt_cntr_im0_reg_n_0_[8] ),
        .O(sig_btt_lt_b2mbaa_im01_carry__0_i_1_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    sig_btt_lt_b2mbaa_im01_carry__0_i_2
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[7] ),
        .I1(\sig_bytes_to_mbaa_ireg1[9]_i_2_n_0 ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[6] ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[8] ),
        .I4(\sig_addr_cntr_lsh_im0_reg_n_0_[9] ),
        .O(sig_btt_lt_b2mbaa_im01_carry__0_i_2_n_0));
  LUT5 #(
    .INIT(32'h06606009)) 
    sig_btt_lt_b2mbaa_im01_carry__0_i_3
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[9] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[9] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[8] ),
        .I3(sig_btt_lt_b2mbaa_im01_carry__0_i_4_n_0),
        .I4(\sig_btt_cntr_im0_reg_n_0_[8] ),
        .O(sig_btt_lt_b2mbaa_im01_carry__0_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    sig_btt_lt_b2mbaa_im01_carry__0_i_4
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[7] ),
        .I1(\sig_bytes_to_mbaa_ireg1[9]_i_2_n_0 ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[6] ),
        .O(sig_btt_lt_b2mbaa_im01_carry__0_i_4_n_0));
  LUT5 #(
    .INIT(32'h0154157C)) 
    sig_btt_lt_b2mbaa_im01_carry_i_1
       (.I0(\sig_btt_cntr_im0_reg_n_0_[7] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[6] ),
        .I2(\sig_bytes_to_mbaa_ireg1[9]_i_2_n_0 ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[7] ),
        .I4(\sig_btt_cntr_im0_reg_n_0_[6] ),
        .O(sig_btt_lt_b2mbaa_im01_carry_i_1_n_0));
  LUT5 #(
    .INIT(32'h0154157C)) 
    sig_btt_lt_b2mbaa_im01_carry_i_2
       (.I0(\sig_btt_cntr_im0_reg_n_0_[5] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[4] ),
        .I2(sig_btt_lt_b2mbaa_im01_carry_i_9_n_0),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[5] ),
        .I4(\sig_btt_cntr_im0_reg_n_0_[4] ),
        .O(sig_btt_lt_b2mbaa_im01_carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h000155541115777C)) 
    sig_btt_lt_b2mbaa_im01_carry_i_3
       (.I0(\sig_btt_cntr_im0_reg_n_0_[3] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[2] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .I4(\sig_addr_cntr_lsh_im0_reg_n_0_[3] ),
        .I5(\sig_btt_cntr_im0_reg_n_0_[2] ),
        .O(sig_btt_lt_b2mbaa_im01_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h1474)) 
    sig_btt_lt_b2mbaa_im01_carry_i_4
       (.I0(\sig_btt_cntr_im0_reg_n_0_[1] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .I3(\sig_btt_cntr_im0_reg_n_0_[0] ),
        .O(sig_btt_lt_b2mbaa_im01_carry_i_4_n_0));
  LUT5 #(
    .INIT(32'h06606009)) 
    sig_btt_lt_b2mbaa_im01_carry_i_5
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[7] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[7] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[6] ),
        .I3(\sig_bytes_to_mbaa_ireg1[9]_i_2_n_0 ),
        .I4(\sig_btt_cntr_im0_reg_n_0_[6] ),
        .O(sig_btt_lt_b2mbaa_im01_carry_i_5_n_0));
  LUT5 #(
    .INIT(32'h06606009)) 
    sig_btt_lt_b2mbaa_im01_carry_i_6
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[5] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[5] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[4] ),
        .I3(sig_btt_lt_b2mbaa_im01_carry_i_9_n_0),
        .I4(\sig_btt_cntr_im0_reg_n_0_[4] ),
        .O(sig_btt_lt_b2mbaa_im01_carry_i_6_n_0));
  LUT6 #(
    .INIT(64'h0606066060606009)) 
    sig_btt_lt_b2mbaa_im01_carry_i_7
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[3] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[3] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[2] ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .I4(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .I5(\sig_btt_cntr_im0_reg_n_0_[2] ),
        .O(sig_btt_lt_b2mbaa_im01_carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h6009)) 
    sig_btt_lt_b2mbaa_im01_carry_i_8
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[1] ),
        .I2(\sig_btt_cntr_im0_reg_n_0_[0] ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .O(sig_btt_lt_b2mbaa_im01_carry_i_8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    sig_btt_lt_b2mbaa_im01_carry_i_9
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[3] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[2] ),
        .O(sig_btt_lt_b2mbaa_im01_carry_i_9_n_0));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h8)) 
    sig_btt_lt_b2mbaa_ireg1_i_1
       (.I0(sig_btt_lt_b2mbaa_im01),
        .I1(sig_brst_cnt_eq_zero_im0),
        .O(sig_btt_lt_b2mbaa_im0));
  FDRE #(
    .INIT(1'b0)) 
    sig_btt_lt_b2mbaa_ireg1_reg
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(sig_btt_lt_b2mbaa_im0),
        .Q(sig_btt_lt_b2mbaa_ireg1),
        .R(sig_reset_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \sig_byte_change_minus1_im2/i_ 
       (.I0(\sig_adjusted_addr_incr_ireg2_reg_n_0_[4] ),
        .I1(\sig_adjusted_addr_incr_ireg2_reg_n_0_[2] ),
        .I2(\sig_adjusted_addr_incr_ireg2_reg_n_0_[0] ),
        .I3(\sig_adjusted_addr_incr_ireg2_reg_n_0_[1] ),
        .I4(\sig_adjusted_addr_incr_ireg2_reg_n_0_[3] ),
        .I5(\sig_adjusted_addr_incr_ireg2_reg_n_0_[5] ),
        .O(\sig_byte_change_minus1_im2/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sig_bytes_to_mbaa_ireg1[1]_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .O(sig_bytes_to_mbaa_im0[1]));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'h56)) 
    \sig_bytes_to_mbaa_ireg1[2]_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[2] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .O(sig_bytes_to_mbaa_im0[2]));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT4 #(
    .INIT(16'h5556)) 
    \sig_bytes_to_mbaa_ireg1[3]_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[3] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[2] ),
        .O(sig_bytes_to_mbaa_im0[3]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'h55555556)) 
    \sig_bytes_to_mbaa_ireg1[4]_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[4] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[2] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .I4(\sig_addr_cntr_lsh_im0_reg_n_0_[3] ),
        .O(sig_bytes_to_mbaa_im0[4]));
  LUT6 #(
    .INIT(64'h5555555555555556)) 
    \sig_bytes_to_mbaa_ireg1[5]_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[5] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[3] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .I4(\sig_addr_cntr_lsh_im0_reg_n_0_[2] ),
        .I5(\sig_addr_cntr_lsh_im0_reg_n_0_[4] ),
        .O(sig_bytes_to_mbaa_im0[5]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sig_bytes_to_mbaa_ireg1[6]_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[6] ),
        .I1(\sig_bytes_to_mbaa_ireg1[9]_i_2_n_0 ),
        .O(sig_bytes_to_mbaa_im0[6]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h56)) 
    \sig_bytes_to_mbaa_ireg1[7]_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[7] ),
        .I1(\sig_bytes_to_mbaa_ireg1[9]_i_2_n_0 ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[6] ),
        .O(\sig_bytes_to_mbaa_ireg1[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT4 #(
    .INIT(16'h5556)) 
    \sig_bytes_to_mbaa_ireg1[8]_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[8] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[6] ),
        .I2(\sig_bytes_to_mbaa_ireg1[9]_i_2_n_0 ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[7] ),
        .O(sig_bytes_to_mbaa_im0[8]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT5 #(
    .INIT(32'h0001FFFE)) 
    \sig_bytes_to_mbaa_ireg1[9]_i_1 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[8] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[6] ),
        .I2(\sig_bytes_to_mbaa_ireg1[9]_i_2_n_0 ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[7] ),
        .I4(\sig_addr_cntr_lsh_im0_reg_n_0_[9] ),
        .O(sig_bytes_to_mbaa_im0[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \sig_bytes_to_mbaa_ireg1[9]_i_2 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[5] ),
        .I1(\sig_addr_cntr_lsh_im0_reg_n_0_[3] ),
        .I2(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .I3(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .I4(\sig_addr_cntr_lsh_im0_reg_n_0_[2] ),
        .I5(\sig_addr_cntr_lsh_im0_reg_n_0_[4] ),
        .O(\sig_bytes_to_mbaa_ireg1[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_bytes_to_mbaa_ireg1_reg[0] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .Q(sig_bytes_to_mbaa_ireg1[0]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_bytes_to_mbaa_ireg1_reg[1] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(sig_bytes_to_mbaa_im0[1]),
        .Q(sig_bytes_to_mbaa_ireg1[1]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_bytes_to_mbaa_ireg1_reg[2] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(sig_bytes_to_mbaa_im0[2]),
        .Q(sig_bytes_to_mbaa_ireg1[2]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_bytes_to_mbaa_ireg1_reg[3] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(sig_bytes_to_mbaa_im0[3]),
        .Q(sig_bytes_to_mbaa_ireg1[3]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_bytes_to_mbaa_ireg1_reg[4] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(sig_bytes_to_mbaa_im0[4]),
        .Q(sig_bytes_to_mbaa_ireg1[4]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_bytes_to_mbaa_ireg1_reg[5] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(sig_bytes_to_mbaa_im0[5]),
        .Q(sig_bytes_to_mbaa_ireg1[5]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_bytes_to_mbaa_ireg1_reg[6] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(sig_bytes_to_mbaa_im0[6]),
        .Q(sig_bytes_to_mbaa_ireg1[6]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_bytes_to_mbaa_ireg1_reg[7] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(\sig_bytes_to_mbaa_ireg1[7]_i_1_n_0 ),
        .Q(sig_bytes_to_mbaa_ireg1[7]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_bytes_to_mbaa_ireg1_reg[8] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(sig_bytes_to_mbaa_im0[8]),
        .Q(sig_bytes_to_mbaa_ireg1[8]),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_bytes_to_mbaa_ireg1_reg[9] 
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(sig_bytes_to_mbaa_im0[9]),
        .Q(sig_bytes_to_mbaa_ireg1[9]),
        .R(sig_reset_reg));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT4 #(
    .INIT(16'hFF80)) 
    sig_calc_error_pushed_i_1
       (.I0(in[41]),
        .I1(sig_ld_xfer_reg),
        .I2(sig_xfer_reg_empty),
        .I3(sig_calc_error_pushed),
        .O(sig_calc_error_pushed_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_calc_error_pushed_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_calc_error_pushed_i_1_n_0),
        .Q(sig_calc_error_pushed),
        .R(sig_reset_reg));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    sig_calc_error_reg_i_2
       (.I0(Q[13]),
        .I1(Q[14]),
        .I2(Q[11]),
        .I3(Q[12]),
        .I4(Q[16]),
        .I5(Q[15]),
        .O(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[13] ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    sig_calc_error_reg_i_3
       (.I0(Q[19]),
        .I1(Q[20]),
        .I2(Q[17]),
        .I3(Q[18]),
        .I4(Q[22]),
        .I5(Q[21]),
        .O(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[19] ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    sig_calc_error_reg_i_4
       (.I0(Q[7]),
        .I1(Q[8]),
        .I2(Q[5]),
        .I3(Q[6]),
        .I4(Q[10]),
        .I5(Q[9]),
        .O(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[7] ));
  LUT5 #(
    .INIT(32'h00000001)) 
    sig_calc_error_reg_i_5
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[3]),
        .O(\USE_SINGLE_REG.sig_regfifo_dout_reg_reg[0] ));
  FDRE #(
    .INIT(1'b0)) 
    sig_calc_error_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_calc_error_reg_reg_1),
        .Q(in[41]),
        .R(sig_reset_reg));
  LUT5 #(
    .INIT(32'h50554444)) 
    sig_cmd2addr_valid_i_1
       (.I0(sig_reset_reg),
        .I1(sig_sm_ld_xfer_reg_ns),
        .I2(sig_cmd2addr_valid_reg_0),
        .I3(sig_inhibit_rdy_n_0),
        .I4(sig_mstr2addr_cmd_valid),
        .O(sig_cmd2addr_valid_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_cmd2addr_valid_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_cmd2addr_valid_i_1_n_0),
        .Q(sig_mstr2addr_cmd_valid),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h50554444)) 
    sig_cmd2data_valid_i_1
       (.I0(sig_reset_reg),
        .I1(sig_sm_ld_xfer_reg_ns),
        .I2(sig_cmd2data_valid_reg_0),
        .I3(sig_inhibit_rdy_n),
        .I4(sig_mstr2data_cmd_valid),
        .O(sig_cmd2data_valid_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_cmd2data_valid_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_cmd2data_valid_i_1_n_0),
        .Q(sig_mstr2data_cmd_valid),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h08)) 
    sig_cmd2dre_valid_i_1
       (.I0(sig_first_xfer_im0),
        .I1(sig_sm_ld_xfer_reg_ns),
        .I2(sig_cmd2dre_valid_reg_n_0),
        .O(sig_cmd2dre_valid_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_cmd2dre_valid_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_cmd2dre_valid_i_1_n_0),
        .Q(sig_cmd2dre_valid_reg_n_0),
        .R(sig_reset_reg));
  LUT4 #(
    .INIT(16'h000E)) 
    sig_first_xfer_im0_i_1
       (.I0(sig_first_xfer_im0),
        .I1(sig_push_input_reg11_out),
        .I2(\FSM_onehot_sig_pcc_sm_state[6]_i_2_n_0 ),
        .I3(sig_reset_reg),
        .O(sig_first_xfer_im0_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_first_xfer_im0_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_first_xfer_im0_i_1_n_0),
        .Q(sig_first_xfer_im0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000000000E2)) 
    sig_input_burst_type_reg_i_1
       (.I0(in[40]),
        .I1(sig_push_input_reg11_out),
        .I2(Q[23]),
        .I3(sig_reset_reg),
        .I4(sig_calc_error_pushed),
        .I5(sig_sm_pop_input_reg),
        .O(sig_input_burst_type_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_input_burst_type_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_input_burst_type_reg_i_1_n_0),
        .Q(in[40]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000000000E2)) 
    sig_input_eof_reg_i_1
       (.I0(sig_input_eof_reg_reg_n_0),
        .I1(sig_push_input_reg11_out),
        .I2(Q[24]),
        .I3(sig_reset_reg),
        .I4(sig_calc_error_pushed),
        .I5(sig_sm_pop_input_reg),
        .O(sig_input_eof_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_input_eof_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_input_eof_reg_i_1_n_0),
        .Q(sig_input_eof_reg_reg_n_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFF2)) 
    sig_input_reg_empty_i_1
       (.I0(sig_input_reg_empty),
        .I1(sig_push_input_reg11_out),
        .I2(sig_reset_reg),
        .I3(sig_calc_error_pushed),
        .I4(sig_sm_pop_input_reg),
        .O(sig_input_reg_empty_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_input_reg_empty_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_input_reg_empty_i_1_n_0),
        .Q(sig_input_reg_empty),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'h0454)) 
    sig_ld_xfer_reg_i_1
       (.I0(sig_reset_reg),
        .I1(sig_sm_ld_xfer_reg_ns),
        .I2(sig_ld_xfer_reg),
        .I3(sig_xfer_reg_empty),
        .O(sig_ld_xfer_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_ld_xfer_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_ld_xfer_reg_i_1_n_0),
        .Q(sig_ld_xfer_reg),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h000E)) 
    sig_ld_xfer_reg_tmp_i_1
       (.I0(sig_ld_xfer_reg_tmp),
        .I1(sig_sm_ld_xfer_reg_ns),
        .I2(\FSM_onehot_sig_pcc_sm_state[6]_i_2_n_0 ),
        .I3(sig_reset_reg),
        .O(sig_ld_xfer_reg_tmp_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_ld_xfer_reg_tmp_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_ld_xfer_reg_tmp_i_1_n_0),
        .Q(sig_ld_xfer_reg_tmp),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00000001)) 
    sig_no_btt_residue_ireg1_i_1
       (.I0(\sig_btt_cntr_im0_reg_n_0_[5] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[7] ),
        .I2(\sig_btt_cntr_im0_reg_n_0_[0] ),
        .I3(\sig_btt_cntr_im0_reg_n_0_[1] ),
        .I4(sig_no_btt_residue_ireg1_i_2_n_0),
        .O(sig_no_btt_residue_im0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    sig_no_btt_residue_ireg1_i_2
       (.I0(\sig_btt_cntr_im0_reg_n_0_[6] ),
        .I1(\sig_btt_cntr_im0_reg_n_0_[2] ),
        .I2(\sig_btt_cntr_im0_reg_n_0_[3] ),
        .I3(\sig_btt_cntr_im0_reg_n_0_[9] ),
        .I4(\sig_btt_cntr_im0_reg_n_0_[4] ),
        .I5(\sig_btt_cntr_im0_reg_n_0_[8] ),
        .O(sig_no_btt_residue_ireg1_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_no_btt_residue_ireg1_reg
       (.C(clk),
        .CE(sig_sm_ld_calc2_reg_ns),
        .D(sig_no_btt_residue_im0),
        .Q(sig_no_btt_residue_ireg1),
        .R(sig_reset_reg));
  LUT5 #(
    .INIT(32'h00001510)) 
    sig_parent_done_i_1
       (.I0(sig_reset_reg),
        .I1(sig_mstr2data_sequential),
        .I2(sig_ld_xfer_reg_tmp),
        .I3(sig_parent_done),
        .I4(sig_push_input_reg11_out),
        .O(sig_parent_done_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_parent_done_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_parent_done_i_1_n_0),
        .Q(sig_parent_done),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \sig_predict_addr_lsh_ireg3[11]_i_2 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[10] ),
        .I1(\sig_addr_cntr_incr_ireg2_reg_n_0_[10] ),
        .O(\sig_predict_addr_lsh_ireg3[11]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sig_predict_addr_lsh_ireg3[11]_i_3 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[9] ),
        .I1(\sig_addr_cntr_incr_ireg2_reg_n_0_[9] ),
        .O(\sig_predict_addr_lsh_ireg3[11]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sig_predict_addr_lsh_ireg3[11]_i_4 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[8] ),
        .I1(\sig_addr_cntr_incr_ireg2_reg_n_0_[8] ),
        .O(\sig_predict_addr_lsh_ireg3[11]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sig_predict_addr_lsh_ireg3[3]_i_2 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[3] ),
        .I1(\sig_addr_cntr_incr_ireg2_reg_n_0_[3] ),
        .O(\sig_predict_addr_lsh_ireg3[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sig_predict_addr_lsh_ireg3[3]_i_3 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[2] ),
        .I1(\sig_addr_cntr_incr_ireg2_reg_n_0_[2] ),
        .O(\sig_predict_addr_lsh_ireg3[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sig_predict_addr_lsh_ireg3[3]_i_4 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[1] ),
        .I1(\sig_addr_cntr_incr_ireg2_reg_n_0_[1] ),
        .O(\sig_predict_addr_lsh_ireg3[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sig_predict_addr_lsh_ireg3[3]_i_5 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[0] ),
        .I1(\sig_addr_cntr_incr_ireg2_reg_n_0_[0] ),
        .O(\sig_predict_addr_lsh_ireg3[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sig_predict_addr_lsh_ireg3[7]_i_2 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[7] ),
        .I1(\sig_addr_cntr_incr_ireg2_reg_n_0_[7] ),
        .O(\sig_predict_addr_lsh_ireg3[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sig_predict_addr_lsh_ireg3[7]_i_3 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[6] ),
        .I1(\sig_addr_cntr_incr_ireg2_reg_n_0_[6] ),
        .O(\sig_predict_addr_lsh_ireg3[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sig_predict_addr_lsh_ireg3[7]_i_4 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[5] ),
        .I1(\sig_addr_cntr_incr_ireg2_reg_n_0_[5] ),
        .O(\sig_predict_addr_lsh_ireg3[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sig_predict_addr_lsh_ireg3[7]_i_5 
       (.I0(\sig_addr_cntr_lsh_im0_reg_n_0_[4] ),
        .I1(\sig_addr_cntr_incr_ireg2_reg_n_0_[4] ),
        .O(\sig_predict_addr_lsh_ireg3[7]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[0] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[0]),
        .Q(\sig_predict_addr_lsh_ireg3_reg_n_0_[0] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[10] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[10]),
        .Q(\sig_predict_addr_lsh_ireg3_reg_n_0_[10] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[11] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[11]),
        .Q(\sig_predict_addr_lsh_ireg3_reg_n_0_[11] ),
        .R(sig_reset_reg));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \sig_predict_addr_lsh_ireg3_reg[11]_i_1 
       (.CI(\sig_predict_addr_lsh_ireg3_reg[7]_i_1_n_0 ),
        .CO({\sig_predict_addr_lsh_ireg3_reg[11]_i_1_n_0 ,\sig_predict_addr_lsh_ireg3_reg[11]_i_1_n_1 ,\sig_predict_addr_lsh_ireg3_reg[11]_i_1_n_2 ,\sig_predict_addr_lsh_ireg3_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\sig_addr_cntr_lsh_im0_reg_n_0_[11] ,\sig_addr_cntr_lsh_im0_reg_n_0_[10] ,\sig_addr_cntr_lsh_im0_reg_n_0_[9] ,\sig_addr_cntr_lsh_im0_reg_n_0_[8] }),
        .O(sig_predict_addr_lsh_im2[11:8]),
        .S({\sig_addr_cntr_lsh_im0_reg_n_0_[11] ,\sig_predict_addr_lsh_ireg3[11]_i_2_n_0 ,\sig_predict_addr_lsh_ireg3[11]_i_3_n_0 ,\sig_predict_addr_lsh_ireg3[11]_i_4_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[12] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[12]),
        .Q(\sig_predict_addr_lsh_ireg3_reg_n_0_[12] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[13] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[13]),
        .Q(\sig_predict_addr_lsh_ireg3_reg_n_0_[13] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[14] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[14]),
        .Q(\sig_predict_addr_lsh_ireg3_reg_n_0_[14] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[15] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[15]),
        .Q(sig_predict_addr_lsh_ireg3),
        .R(sig_reset_reg));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \sig_predict_addr_lsh_ireg3_reg[15]_i_1 
       (.CI(\sig_predict_addr_lsh_ireg3_reg[11]_i_1_n_0 ),
        .CO({\NLW_sig_predict_addr_lsh_ireg3_reg[15]_i_1_CO_UNCONNECTED [3],\sig_predict_addr_lsh_ireg3_reg[15]_i_1_n_1 ,\sig_predict_addr_lsh_ireg3_reg[15]_i_1_n_2 ,\sig_predict_addr_lsh_ireg3_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\sig_addr_cntr_lsh_im0_reg_n_0_[14] ,\sig_addr_cntr_lsh_im0_reg_n_0_[13] ,\sig_addr_cntr_lsh_im0_reg_n_0_[12] }),
        .O(sig_predict_addr_lsh_im2[15:12]),
        .S({p_1_in_0,\sig_addr_cntr_lsh_im0_reg_n_0_[14] ,\sig_addr_cntr_lsh_im0_reg_n_0_[13] ,\sig_addr_cntr_lsh_im0_reg_n_0_[12] }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[1] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[1]),
        .Q(\sig_predict_addr_lsh_ireg3_reg_n_0_[1] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[2] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[2]),
        .Q(\sig_predict_addr_lsh_ireg3_reg_n_0_[2] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[3] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[3]),
        .Q(\sig_predict_addr_lsh_ireg3_reg_n_0_[3] ),
        .R(sig_reset_reg));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \sig_predict_addr_lsh_ireg3_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\sig_predict_addr_lsh_ireg3_reg[3]_i_1_n_0 ,\sig_predict_addr_lsh_ireg3_reg[3]_i_1_n_1 ,\sig_predict_addr_lsh_ireg3_reg[3]_i_1_n_2 ,\sig_predict_addr_lsh_ireg3_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\sig_addr_cntr_lsh_im0_reg_n_0_[3] ,\sig_addr_cntr_lsh_im0_reg_n_0_[2] ,\sig_addr_cntr_lsh_im0_reg_n_0_[1] ,\sig_addr_cntr_lsh_im0_reg_n_0_[0] }),
        .O(sig_predict_addr_lsh_im2[3:0]),
        .S({\sig_predict_addr_lsh_ireg3[3]_i_2_n_0 ,\sig_predict_addr_lsh_ireg3[3]_i_3_n_0 ,\sig_predict_addr_lsh_ireg3[3]_i_4_n_0 ,\sig_predict_addr_lsh_ireg3[3]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[4] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[4]),
        .Q(\sig_predict_addr_lsh_ireg3_reg_n_0_[4] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[5] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[5]),
        .Q(\sig_predict_addr_lsh_ireg3_reg_n_0_[5] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[6] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[6]),
        .Q(\sig_predict_addr_lsh_ireg3_reg_n_0_[6] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[7] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[7]),
        .Q(\sig_predict_addr_lsh_ireg3_reg_n_0_[7] ),
        .R(sig_reset_reg));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \sig_predict_addr_lsh_ireg3_reg[7]_i_1 
       (.CI(\sig_predict_addr_lsh_ireg3_reg[3]_i_1_n_0 ),
        .CO({\sig_predict_addr_lsh_ireg3_reg[7]_i_1_n_0 ,\sig_predict_addr_lsh_ireg3_reg[7]_i_1_n_1 ,\sig_predict_addr_lsh_ireg3_reg[7]_i_1_n_2 ,\sig_predict_addr_lsh_ireg3_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\sig_addr_cntr_lsh_im0_reg_n_0_[7] ,\sig_addr_cntr_lsh_im0_reg_n_0_[6] ,\sig_addr_cntr_lsh_im0_reg_n_0_[5] ,\sig_addr_cntr_lsh_im0_reg_n_0_[4] }),
        .O(sig_predict_addr_lsh_im2[7:4]),
        .S({\sig_predict_addr_lsh_ireg3[7]_i_2_n_0 ,\sig_predict_addr_lsh_ireg3[7]_i_3_n_0 ,\sig_predict_addr_lsh_ireg3[7]_i_4_n_0 ,\sig_predict_addr_lsh_ireg3[7]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[8] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[8]),
        .Q(\sig_predict_addr_lsh_ireg3_reg_n_0_[8] ),
        .R(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    \sig_predict_addr_lsh_ireg3_reg[9] 
       (.C(clk),
        .CE(sig_sm_ld_xfer_reg_ns),
        .D(sig_predict_addr_lsh_im2[9]),
        .Q(\sig_predict_addr_lsh_ireg3_reg_n_0_[9] ),
        .R(sig_reset_reg));
  LUT4 #(
    .INIT(16'hFFEA)) 
    sig_sm_halt_reg_i_1
       (.I0(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[6] ),
        .I2(sig_calc_error_pushed),
        .I3(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[7] ),
        .O(sig_sm_halt_ns));
  FDSE #(
    .INIT(1'b0)) 
    sig_sm_halt_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_sm_halt_ns),
        .Q(sig_sm_halt_reg),
        .S(sig_reset_reg));
  FDRE #(
    .INIT(1'b0)) 
    sig_sm_ld_calc2_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_sm_ld_calc2_reg_ns),
        .Q(sig_sm_ld_calc2_reg),
        .R(sig_reset_reg));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'h08)) 
    sig_sm_pop_input_reg_i_1
       (.I0(\FSM_onehot_sig_pcc_sm_state_reg_n_0_[6] ),
        .I1(sig_parent_done),
        .I2(sig_calc_error_pushed),
        .O(sig_sm_pop_input_reg_ns));
  FDRE #(
    .INIT(1'b0)) 
    sig_sm_pop_input_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_sm_pop_input_reg_ns),
        .Q(sig_sm_pop_input_reg),
        .R(sig_reset_reg));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'hFF3A)) 
    sig_xfer_reg_empty_i_1
       (.I0(\FSM_onehot_sig_pcc_sm_state[6]_i_2_n_0 ),
        .I1(sig_ld_xfer_reg),
        .I2(sig_xfer_reg_empty),
        .I3(sig_reset_reg),
        .O(sig_xfer_reg_empty_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_xfer_reg_empty_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_xfer_reg_empty_i_1_n_0),
        .Q(sig_xfer_reg_empty),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dma_rd_status_cntl" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_rd_status_cntl
   (sig_rsc2stat_status_valid,
    sig_rsc2data_ready,
    clk,
    sig_data2rsc_valid,
    sig_cmd_stat_rst_user_reg_n_cdc_from,
    sig_stat2rsc_status_ready);
  output sig_rsc2stat_status_valid;
  output sig_rsc2data_ready;
  input clk;
  input sig_data2rsc_valid;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;
  input sig_stat2rsc_status_ready;

  wire clk;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_data2rsc_valid;
  wire sig_rd_sts_reg_empty_i_1_n_0;
  wire sig_rd_sts_reg_full_i_1_n_0;
  wire sig_rsc2data_ready;
  wire sig_rsc2stat_status_valid;
  wire sig_stat2rsc_status_ready;

  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT5 #(
    .INIT(32'hFF4F4F4F)) 
    sig_rd_sts_reg_empty_i_1
       (.I0(sig_data2rsc_valid),
        .I1(sig_rsc2data_ready),
        .I2(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .I3(sig_stat2rsc_status_ready),
        .I4(sig_rsc2stat_status_valid),
        .O(sig_rd_sts_reg_empty_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_rd_sts_reg_empty_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_rd_sts_reg_empty_i_1_n_0),
        .Q(sig_rsc2data_ready),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT5 #(
    .INIT(32'h00F08080)) 
    sig_rd_sts_reg_full_i_1
       (.I0(sig_data2rsc_valid),
        .I1(sig_rsc2data_ready),
        .I2(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .I3(sig_stat2rsc_status_ready),
        .I4(sig_rsc2stat_status_valid),
        .O(sig_rd_sts_reg_full_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_rd_sts_reg_full_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_rd_sts_reg_full_i_1_n_0),
        .Q(sig_rsc2stat_status_valid),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dma_rddata_cntl" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_rddata_cntl
   (FIFO_Full_reg,
    sig_next_eof_reg,
    sig_init_done,
    sig_inhibit_rdy_n,
    sig_data2rsc_valid,
    m_axi_mem_rready,
    sig_coelsc_cmd_cmplt_reg_reg_0,
    sig_rdc2sf_wlast,
    SR,
    clk,
    sig_init_done_reg,
    sig_mstr2data_cmd_valid,
    sig_cmd_stat_rst_user_reg_n_cdc_from,
    sig_rsc2stat_status_valid,
    sig_stat2rsc_status_ready,
    out,
    m_axi_mem_rlast,
    m_axi_mem_rvalid,
    sig_rsc2data_ready,
    in,
    \sig_addr_posted_cntr_reg[2]_0 );
  output FIFO_Full_reg;
  output sig_next_eof_reg;
  output sig_init_done;
  output sig_inhibit_rdy_n;
  output sig_data2rsc_valid;
  output m_axi_mem_rready;
  output sig_coelsc_cmd_cmplt_reg_reg_0;
  output sig_rdc2sf_wlast;
  input [0:0]SR;
  input clk;
  input sig_init_done_reg;
  input sig_mstr2data_cmd_valid;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;
  input sig_rsc2stat_status_valid;
  input sig_stat2rsc_status_ready;
  input out;
  input m_axi_mem_rlast;
  input m_axi_mem_rvalid;
  input sig_rsc2data_ready;
  input [11:0]in;
  input \sig_addr_posted_cntr_reg[2]_0 ;

  wire FIFO_Full_reg;
  wire \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_10 ;
  wire \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_11 ;
  wire \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_12 ;
  wire \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_13 ;
  wire \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_18 ;
  wire \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_19 ;
  wire \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_20 ;
  wire \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_4 ;
  wire \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_5 ;
  wire \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_6 ;
  wire \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_7 ;
  wire \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_8 ;
  wire \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_9 ;
  wire [0:0]SR;
  wire clk;
  wire [11:0]in;
  wire m_axi_mem_rlast;
  wire m_axi_mem_rready;
  wire m_axi_mem_rready_INST_0_i_1_n_0;
  wire m_axi_mem_rvalid;
  wire out;
  wire [2:0]sig_addr_posted_cntr;
  wire \sig_addr_posted_cntr[0]_i_1_n_0 ;
  wire \sig_addr_posted_cntr[1]_i_1_n_0 ;
  wire \sig_addr_posted_cntr[2]_i_1_n_0 ;
  wire \sig_addr_posted_cntr_reg[2]_0 ;
  wire [26:23]sig_cmd_fifo_data_out;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_coelsc_cmd_cmplt_reg_i_1_n_0;
  wire sig_coelsc_cmd_cmplt_reg_i_3_n_0;
  wire sig_coelsc_cmd_cmplt_reg_reg_0;
  wire sig_data2rsc_valid;
  wire [7:0]sig_dbeat_cntr;
  wire \sig_dbeat_cntr[5]_i_2_n_0 ;
  wire \sig_dbeat_cntr[7]_i_3_n_0 ;
  wire \sig_dbeat_cntr[7]_i_4_n_0 ;
  wire sig_dqual_reg_empty;
  wire sig_dqual_reg_full;
  wire sig_inhibit_rdy_n;
  wire sig_init_done;
  wire sig_init_done_reg;
  wire sig_last_dbeat_i_2_n_0;
  wire sig_last_dbeat_i_4_n_0;
  wire sig_last_dbeat_reg_n_0;
  wire sig_last_mmap_dbeat;
  wire sig_last_mmap_dbeat_reg;
  wire sig_ld_new_cmd_reg;
  wire sig_mstr2data_cmd_valid;
  wire sig_next_calc_error_reg;
  wire sig_next_cmd_cmplt_reg;
  wire sig_next_eof_reg;
  wire sig_next_sequential_reg;
  wire sig_push_coelsc_reg;
  wire sig_push_dqual_reg;
  wire sig_rdc2sf_wlast;
  wire sig_rsc2data_ready;
  wire sig_rsc2stat_status_valid;
  wire sig_stat2rsc_status_ready;

  dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_fifo__parameterized2 \GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO 
       (.D({\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_6 ,\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_7 ,\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_8 ,\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_9 ,\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_10 ,\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_11 ,\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_12 ,\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_13 }),
        .E(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_4 ),
        .FIFO_Full_reg(FIFO_Full_reg),
        .Q(sig_dbeat_cntr),
        .SR(SR),
        .clk(clk),
        .in(in),
        .m_axi_mem_rlast(m_axi_mem_rlast),
        .m_axi_mem_rlast_0(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_20 ),
        .m_axi_mem_rvalid(m_axi_mem_rvalid),
        .out(sig_cmd_fifo_data_out),
        .sig_addr_posted_cntr(sig_addr_posted_cntr),
        .sig_cmd_stat_rst_user_reg_n_cdc_from(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .sig_cmd_stat_rst_user_reg_n_cdc_from_reg(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_18 ),
        .sig_cmd_stat_rst_user_reg_n_cdc_from_reg_0(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_19 ),
        .\sig_dbeat_cntr_reg[0] (\sig_dbeat_cntr[7]_i_3_n_0 ),
        .\sig_dbeat_cntr_reg[4] (\sig_dbeat_cntr[5]_i_2_n_0 ),
        .\sig_dbeat_cntr_reg[6] (\sig_dbeat_cntr[7]_i_4_n_0 ),
        .sig_dqual_reg_empty(sig_dqual_reg_empty),
        .sig_dqual_reg_empty_reg(sig_last_dbeat_reg_n_0),
        .sig_dqual_reg_empty_reg_0(out),
        .sig_dqual_reg_empty_reg_1(m_axi_mem_rready_INST_0_i_1_n_0),
        .sig_dqual_reg_empty_reg_2(sig_data2rsc_valid),
        .sig_dqual_reg_full(sig_dqual_reg_full),
        .sig_inhibit_rdy_n_reg_0(sig_inhibit_rdy_n),
        .sig_init_done(sig_init_done),
        .sig_init_done_reg_0(sig_init_done_reg),
        .sig_last_dbeat_reg(sig_last_dbeat_i_2_n_0),
        .sig_ld_new_cmd_reg(sig_ld_new_cmd_reg),
        .sig_mstr2data_cmd_valid(sig_mstr2data_cmd_valid),
        .sig_next_calc_error_reg(sig_next_calc_error_reg),
        .sig_next_sequential_reg(sig_next_sequential_reg),
        .sig_push_dqual_reg(sig_push_dqual_reg),
        .sig_rsc2stat_status_valid(sig_rsc2stat_status_valid),
        .sig_s_ready_out_reg(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_5 ),
        .sig_stat2rsc_status_ready(sig_stat2rsc_status_ready));
  LUT5 #(
    .INIT(32'h00000020)) 
    m_axi_mem_rready_INST_0
       (.I0(out),
        .I1(sig_data2rsc_valid),
        .I2(sig_dqual_reg_full),
        .I3(sig_next_calc_error_reg),
        .I4(m_axi_mem_rready_INST_0_i_1_n_0),
        .O(m_axi_mem_rready));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'h01)) 
    m_axi_mem_rready_INST_0_i_1
       (.I0(sig_addr_posted_cntr[2]),
        .I1(sig_addr_posted_cntr[1]),
        .I2(sig_addr_posted_cntr[0]),
        .O(m_axi_mem_rready_INST_0_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT5 #(
    .INIT(32'hB9996662)) 
    \sig_addr_posted_cntr[0]_i_1 
       (.I0(\sig_addr_posted_cntr_reg[2]_0 ),
        .I1(sig_last_mmap_dbeat_reg),
        .I2(sig_addr_posted_cntr[1]),
        .I3(sig_addr_posted_cntr[2]),
        .I4(sig_addr_posted_cntr[0]),
        .O(\sig_addr_posted_cntr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT5 #(
    .INIT(32'hCCBCC2CC)) 
    \sig_addr_posted_cntr[1]_i_1 
       (.I0(sig_addr_posted_cntr[2]),
        .I1(sig_addr_posted_cntr[1]),
        .I2(sig_addr_posted_cntr[0]),
        .I3(sig_last_mmap_dbeat_reg),
        .I4(\sig_addr_posted_cntr_reg[2]_0 ),
        .O(\sig_addr_posted_cntr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT5 #(
    .INIT(32'hAAEAA8AA)) 
    \sig_addr_posted_cntr[2]_i_1 
       (.I0(sig_addr_posted_cntr[2]),
        .I1(sig_addr_posted_cntr[1]),
        .I2(sig_addr_posted_cntr[0]),
        .I3(sig_last_mmap_dbeat_reg),
        .I4(\sig_addr_posted_cntr_reg[2]_0 ),
        .O(\sig_addr_posted_cntr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_posted_cntr_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\sig_addr_posted_cntr[0]_i_1_n_0 ),
        .Q(sig_addr_posted_cntr[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_posted_cntr_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\sig_addr_posted_cntr[1]_i_1_n_0 ),
        .Q(sig_addr_posted_cntr[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_addr_posted_cntr_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\sig_addr_posted_cntr[2]_i_1_n_0 ),
        .Q(sig_addr_posted_cntr[2]),
        .R(SR));
  LUT6 #(
    .INIT(64'h00000000EEEEE222)) 
    sig_coelsc_cmd_cmplt_reg_i_1
       (.I0(sig_data2rsc_valid),
        .I1(sig_push_coelsc_reg),
        .I2(m_axi_mem_rlast),
        .I3(sig_next_cmd_cmplt_reg),
        .I4(sig_next_calc_error_reg),
        .I5(sig_coelsc_cmd_cmplt_reg_i_3_n_0),
        .O(sig_coelsc_cmd_cmplt_reg_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    sig_coelsc_cmd_cmplt_reg_i_2
       (.I0(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_5 ),
        .I1(sig_next_calc_error_reg),
        .I2(sig_ld_new_cmd_reg),
        .O(sig_push_coelsc_reg));
  LUT5 #(
    .INIT(32'h7000FFFF)) 
    sig_coelsc_cmd_cmplt_reg_i_3
       (.I0(sig_ld_new_cmd_reg),
        .I1(sig_next_calc_error_reg),
        .I2(sig_rsc2data_ready),
        .I3(sig_data2rsc_valid),
        .I4(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .O(sig_coelsc_cmd_cmplt_reg_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_coelsc_cmd_cmplt_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_coelsc_cmd_cmplt_reg_i_1_n_0),
        .Q(sig_data2rsc_valid),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \sig_dbeat_cntr[5]_i_2 
       (.I0(sig_dbeat_cntr[1]),
        .I1(sig_dbeat_cntr[0]),
        .I2(sig_dbeat_cntr[2]),
        .O(\sig_dbeat_cntr[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \sig_dbeat_cntr[7]_i_3 
       (.I0(\sig_dbeat_cntr[5]_i_2_n_0 ),
        .I1(sig_dbeat_cntr[3]),
        .I2(sig_dbeat_cntr[5]),
        .I3(sig_dbeat_cntr[4]),
        .I4(sig_dbeat_cntr[7]),
        .I5(sig_dbeat_cntr[6]),
        .O(\sig_dbeat_cntr[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \sig_dbeat_cntr[7]_i_4 
       (.I0(sig_dbeat_cntr[2]),
        .I1(sig_dbeat_cntr[0]),
        .I2(sig_dbeat_cntr[1]),
        .I3(sig_dbeat_cntr[4]),
        .I4(sig_dbeat_cntr[5]),
        .I5(sig_dbeat_cntr[3]),
        .O(\sig_dbeat_cntr[7]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sig_dbeat_cntr_reg[0] 
       (.C(clk),
        .CE(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_4 ),
        .D(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_13 ),
        .Q(sig_dbeat_cntr[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_dbeat_cntr_reg[1] 
       (.C(clk),
        .CE(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_4 ),
        .D(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_12 ),
        .Q(sig_dbeat_cntr[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_dbeat_cntr_reg[2] 
       (.C(clk),
        .CE(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_4 ),
        .D(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_11 ),
        .Q(sig_dbeat_cntr[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_dbeat_cntr_reg[3] 
       (.C(clk),
        .CE(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_4 ),
        .D(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_10 ),
        .Q(sig_dbeat_cntr[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_dbeat_cntr_reg[4] 
       (.C(clk),
        .CE(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_4 ),
        .D(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_9 ),
        .Q(sig_dbeat_cntr[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_dbeat_cntr_reg[5] 
       (.C(clk),
        .CE(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_4 ),
        .D(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_8 ),
        .Q(sig_dbeat_cntr[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_dbeat_cntr_reg[6] 
       (.C(clk),
        .CE(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_4 ),
        .D(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_7 ),
        .Q(sig_dbeat_cntr[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_dbeat_cntr_reg[7] 
       (.C(clk),
        .CE(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_4 ),
        .D(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_6 ),
        .Q(sig_dbeat_cntr[7]),
        .R(SR));
  FDSE #(
    .INIT(1'b0)) 
    sig_dqual_reg_empty_reg
       (.C(clk),
        .CE(sig_push_dqual_reg),
        .D(1'b0),
        .Q(sig_dqual_reg_empty),
        .S(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_20 ));
  FDRE #(
    .INIT(1'b0)) 
    sig_dqual_reg_full_reg
       (.C(clk),
        .CE(sig_push_dqual_reg),
        .D(sig_push_dqual_reg),
        .Q(sig_dqual_reg_full),
        .R(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_20 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'hFFFFFFDF)) 
    sig_last_dbeat_i_2
       (.I0(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_5 ),
        .I1(sig_dbeat_cntr[2]),
        .I2(sig_dbeat_cntr[0]),
        .I3(sig_dbeat_cntr[1]),
        .I4(sig_last_dbeat_i_4_n_0),
        .O(sig_last_dbeat_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    sig_last_dbeat_i_4
       (.I0(sig_dbeat_cntr[6]),
        .I1(sig_dbeat_cntr[7]),
        .I2(sig_dbeat_cntr[4]),
        .I3(sig_dbeat_cntr[5]),
        .I4(sig_dbeat_cntr[3]),
        .O(sig_last_dbeat_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sig_last_dbeat_reg
       (.C(clk),
        .CE(1'b1),
        .D(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_19 ),
        .Q(sig_last_dbeat_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h8)) 
    sig_last_mmap_dbeat_reg_i_1
       (.I0(m_axi_mem_rlast),
        .I1(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_5 ),
        .O(sig_last_mmap_dbeat));
  FDRE #(
    .INIT(1'b0)) 
    sig_last_mmap_dbeat_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_last_mmap_dbeat),
        .Q(sig_last_mmap_dbeat_reg),
        .R(SR));
  LUT2 #(
    .INIT(4'h8)) 
    sig_last_skid_reg_i_1
       (.I0(m_axi_mem_rlast),
        .I1(sig_next_eof_reg),
        .O(sig_rdc2sf_wlast));
  FDRE #(
    .INIT(1'b0)) 
    sig_ld_new_cmd_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_18 ),
        .Q(sig_ld_new_cmd_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    sig_next_calc_error_reg_reg
       (.C(clk),
        .CE(sig_push_dqual_reg),
        .D(sig_cmd_fifo_data_out[26]),
        .Q(sig_next_calc_error_reg),
        .R(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_20 ));
  FDRE #(
    .INIT(1'b0)) 
    sig_next_cmd_cmplt_reg_reg
       (.C(clk),
        .CE(sig_push_dqual_reg),
        .D(sig_cmd_fifo_data_out[25]),
        .Q(sig_next_cmd_cmplt_reg),
        .R(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_20 ));
  FDRE #(
    .INIT(1'b0)) 
    sig_next_eof_reg_reg
       (.C(clk),
        .CE(sig_push_dqual_reg),
        .D(sig_cmd_fifo_data_out[23]),
        .Q(sig_next_eof_reg),
        .R(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_20 ));
  FDRE #(
    .INIT(1'b0)) 
    sig_next_sequential_reg_reg
       (.C(clk),
        .CE(sig_push_dqual_reg),
        .D(sig_cmd_fifo_data_out[24]),
        .Q(sig_next_sequential_reg),
        .R(\GEN_DATA_CNTL_FIFO.I_DATA_CNTL_FIFO_n_20 ));
  LUT5 #(
    .INIT(32'hFFFBFFFF)) 
    sig_s_ready_dup_i_2
       (.I0(sig_data2rsc_valid),
        .I1(sig_dqual_reg_full),
        .I2(sig_next_calc_error_reg),
        .I3(m_axi_mem_rready_INST_0_i_1_n_0),
        .I4(m_axi_mem_rvalid),
        .O(sig_coelsc_cmd_cmplt_reg_reg_0));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dma_reset" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_reset
   (sig_cmd_stat_rst_user_reg_n_cdc_from,
    SR,
    reset,
    clk);
  output sig_cmd_stat_rst_user_reg_n_cdc_from;
  output [0:0]SR;
  input reset;
  input clk;

  wire [0:0]SR;
  wire clk;
  wire reset;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;

  FDRE #(
    .INIT(1'b0)) 
    sig_cmd_stat_rst_user_reg_n_cdc_from_reg
       (.C(clk),
        .CE(1'b1),
        .D(reset),
        .Q(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    sig_init_reg_i_1
       (.I0(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .O(SR));
endmodule

(* ORIG_REF_NAME = "dfx_controller_dma_skid_buf" *) 
module dfx_controller_setup_dfx_controller_0_0_dfx_controller_dma_skid_buf
   (out,
    sig_m_valid_out_reg_0,
    D,
    recheck_id_reg_source0,
    first_word_seen_reg,
    sig_last_reg_out_reg_0,
    E,
    sig_last_reg_out_reg_1,
    clk,
    SR,
    sig_rdc2sf_wlast,
    sig_last_reg_out_reg_2,
    first_word_seen,
    id_fifo_write,
    Q,
    fsm_cs,
    \FSM_sequential_b_fsm.fsm_cs[2]_i_3 ,
    sig_m_valid_out_reg_1,
    sig_cmd_stat_rst_user_reg_n_cdc_from,
    sig_reset_reg,
    m_axi_mem_rlast,
    sig_next_eof_reg,
    m_axi_mem_rvalid,
    m_axi_mem_rresp,
    m_axi_mem_rdata);
  output out;
  output sig_m_valid_out_reg_0;
  output [33:0]D;
  output recheck_id_reg_source0;
  output first_word_seen_reg;
  output sig_last_reg_out_reg_0;
  output [0:0]E;
  output sig_last_reg_out_reg_1;
  input clk;
  input [0:0]SR;
  input sig_rdc2sf_wlast;
  input sig_last_reg_out_reg_2;
  input first_word_seen;
  input id_fifo_write;
  input [0:0]Q;
  input [2:0]fsm_cs;
  input \FSM_sequential_b_fsm.fsm_cs[2]_i_3 ;
  input sig_m_valid_out_reg_1;
  input sig_cmd_stat_rst_user_reg_n_cdc_from;
  input sig_reset_reg;
  input m_axi_mem_rlast;
  input sig_next_eof_reg;
  input m_axi_mem_rvalid;
  input [0:0]m_axi_mem_rresp;
  input [31:0]m_axi_mem_rdata;

  wire [33:0]D;
  wire [0:0]E;
  wire \FSM_sequential_b_fsm.fsm_cs[2]_i_3 ;
  wire [0:0]Q;
  wire [0:0]SR;
  wire clk;
  wire fetch_error_aximm_side;
  wire first_word_seen;
  wire first_word_seen_reg;
  wire [2:0]fsm_cs;
  wire id_fifo_write;
  wire [31:0]m_axi_mem_rdata;
  wire m_axi_mem_rlast;
  wire [0:0]m_axi_mem_rresp;
  wire m_axi_mem_rvalid;
  wire recheck_id_reg_source0;
  wire sig_cmd_stat_rst_user_reg_n_cdc_from;
  wire sig_data_reg_out_en;
  wire [31:0]sig_data_skid_mux_out;
  wire [31:0]sig_data_skid_reg;
  wire sig_last_reg_out_reg_0;
  wire sig_last_reg_out_reg_1;
  wire sig_last_reg_out_reg_2;
  wire sig_last_skid_mux_out;
  wire sig_last_skid_reg;
  (* RTL_KEEP = "true" *) (* equivalent_register_removal = "no" *) wire sig_m_valid_dup;
  wire sig_m_valid_dup_i_1_n_0;
  (* RTL_KEEP = "true" *) (* equivalent_register_removal = "no" *) wire sig_m_valid_out;
  wire sig_m_valid_out_reg_1;
  wire sig_next_eof_reg;
  wire sig_rdc2sf_wlast;
  wire sig_reset_reg;
  (* RTL_KEEP = "true" *) (* equivalent_register_removal = "no" *) wire sig_s_ready_dup;
  wire sig_s_ready_dup_i_1_n_0;
  (* RTL_KEEP = "true" *) (* equivalent_register_removal = "no" *) wire sig_s_ready_out;
  wire sig_user_skid_mux_out;
  wire sig_user_skid_reg;

  assign out = sig_s_ready_out;
  assign sig_m_valid_out_reg_0 = sig_m_valid_out;
  LUT6 #(
    .INIT(64'hFFFFFFFFF0F0FE0E)) 
    \FSM_sequential_b_fsm.fsm_cs[2]_i_5 
       (.I0(first_word_seen),
        .I1(sig_last_reg_out_reg_0),
        .I2(fsm_cs[0]),
        .I3(\FSM_sequential_b_fsm.fsm_cs[2]_i_3 ),
        .I4(fsm_cs[1]),
        .I5(fsm_cs[2]),
        .O(first_word_seen_reg));
  LUT2 #(
    .INIT(4'h2)) 
    \data_reg0[36]_i_1 
       (.I0(sig_m_valid_out),
        .I1(sig_last_reg_out_reg_2),
        .O(E));
  LUT4 #(
    .INIT(16'hDF10)) 
    first_word_seen_i_1
       (.I0(D[33]),
        .I1(sig_last_reg_out_reg_2),
        .I2(sig_m_valid_out),
        .I3(first_word_seen),
        .O(sig_last_reg_out_reg_1));
  LUT3 #(
    .INIT(8'h08)) 
    one_word_bs_detected_i_4
       (.I0(D[33]),
        .I1(sig_m_valid_out),
        .I2(sig_last_reg_out_reg_2),
        .O(sig_last_reg_out_reg_0));
  LUT6 #(
    .INIT(64'hF700000000000000)) 
    recheck_id_reg_source_i_1
       (.I0(D[33]),
        .I1(sig_m_valid_out),
        .I2(sig_last_reg_out_reg_2),
        .I3(first_word_seen),
        .I4(id_fifo_write),
        .I5(Q),
        .O(recheck_id_reg_source0));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[0]_i_1 
       (.I0(m_axi_mem_rdata[0]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[0]),
        .O(sig_data_skid_mux_out[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[10]_i_1 
       (.I0(m_axi_mem_rdata[10]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[10]),
        .O(sig_data_skid_mux_out[10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[11]_i_1 
       (.I0(m_axi_mem_rdata[11]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[11]),
        .O(sig_data_skid_mux_out[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[12]_i_1 
       (.I0(m_axi_mem_rdata[12]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[12]),
        .O(sig_data_skid_mux_out[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[13]_i_1 
       (.I0(m_axi_mem_rdata[13]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[13]),
        .O(sig_data_skid_mux_out[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[14]_i_1 
       (.I0(m_axi_mem_rdata[14]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[14]),
        .O(sig_data_skid_mux_out[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[15]_i_1 
       (.I0(m_axi_mem_rdata[15]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[15]),
        .O(sig_data_skid_mux_out[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[16]_i_1 
       (.I0(m_axi_mem_rdata[16]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[16]),
        .O(sig_data_skid_mux_out[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[17]_i_1 
       (.I0(m_axi_mem_rdata[17]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[17]),
        .O(sig_data_skid_mux_out[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[18]_i_1 
       (.I0(m_axi_mem_rdata[18]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[18]),
        .O(sig_data_skid_mux_out[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[19]_i_1 
       (.I0(m_axi_mem_rdata[19]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[19]),
        .O(sig_data_skid_mux_out[19]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[1]_i_1 
       (.I0(m_axi_mem_rdata[1]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[1]),
        .O(sig_data_skid_mux_out[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[20]_i_1 
       (.I0(m_axi_mem_rdata[20]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[20]),
        .O(sig_data_skid_mux_out[20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[21]_i_1 
       (.I0(m_axi_mem_rdata[21]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[21]),
        .O(sig_data_skid_mux_out[21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[22]_i_1 
       (.I0(m_axi_mem_rdata[22]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[22]),
        .O(sig_data_skid_mux_out[22]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[23]_i_1 
       (.I0(m_axi_mem_rdata[23]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[23]),
        .O(sig_data_skid_mux_out[23]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[24]_i_1 
       (.I0(m_axi_mem_rdata[24]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[24]),
        .O(sig_data_skid_mux_out[24]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[25]_i_1 
       (.I0(m_axi_mem_rdata[25]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[25]),
        .O(sig_data_skid_mux_out[25]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[26]_i_1 
       (.I0(m_axi_mem_rdata[26]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[26]),
        .O(sig_data_skid_mux_out[26]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[27]_i_1 
       (.I0(m_axi_mem_rdata[27]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[27]),
        .O(sig_data_skid_mux_out[27]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[28]_i_1 
       (.I0(m_axi_mem_rdata[28]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[28]),
        .O(sig_data_skid_mux_out[28]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[29]_i_1 
       (.I0(m_axi_mem_rdata[29]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[29]),
        .O(sig_data_skid_mux_out[29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[2]_i_1 
       (.I0(m_axi_mem_rdata[2]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[2]),
        .O(sig_data_skid_mux_out[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[30]_i_1 
       (.I0(m_axi_mem_rdata[30]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[30]),
        .O(sig_data_skid_mux_out[30]));
  LUT2 #(
    .INIT(4'h7)) 
    \sig_data_reg_out[31]_i_1 
       (.I0(sig_m_valid_dup),
        .I1(sig_last_reg_out_reg_2),
        .O(sig_data_reg_out_en));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[31]_i_2 
       (.I0(m_axi_mem_rdata[31]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[31]),
        .O(sig_data_skid_mux_out[31]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[3]_i_1 
       (.I0(m_axi_mem_rdata[3]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[3]),
        .O(sig_data_skid_mux_out[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[4]_i_1 
       (.I0(m_axi_mem_rdata[4]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[4]),
        .O(sig_data_skid_mux_out[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[5]_i_1 
       (.I0(m_axi_mem_rdata[5]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[5]),
        .O(sig_data_skid_mux_out[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[6]_i_1 
       (.I0(m_axi_mem_rdata[6]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[6]),
        .O(sig_data_skid_mux_out[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[7]_i_1 
       (.I0(m_axi_mem_rdata[7]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[7]),
        .O(sig_data_skid_mux_out[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[8]_i_1 
       (.I0(m_axi_mem_rdata[8]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[8]),
        .O(sig_data_skid_mux_out[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sig_data_reg_out[9]_i_1 
       (.I0(m_axi_mem_rdata[9]),
        .I1(sig_s_ready_dup),
        .I2(sig_data_skid_reg[9]),
        .O(sig_data_skid_mux_out[9]));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[0] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[0]),
        .Q(D[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[10] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[10]),
        .Q(D[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[11] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[11]),
        .Q(D[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[12] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[12]),
        .Q(D[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[13] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[13]),
        .Q(D[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[14] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[14]),
        .Q(D[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[15] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[15]),
        .Q(D[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[16] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[16]),
        .Q(D[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[17] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[17]),
        .Q(D[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[18] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[18]),
        .Q(D[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[19] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[19]),
        .Q(D[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[1] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[1]),
        .Q(D[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[20] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[20]),
        .Q(D[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[21] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[21]),
        .Q(D[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[22] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[22]),
        .Q(D[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[23] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[23]),
        .Q(D[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[24] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[24]),
        .Q(D[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[25] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[25]),
        .Q(D[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[26] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[26]),
        .Q(D[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[27] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[27]),
        .Q(D[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[28] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[28]),
        .Q(D[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[29] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[29]),
        .Q(D[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[2] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[2]),
        .Q(D[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[30] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[30]),
        .Q(D[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[31] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[31]),
        .Q(D[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[3] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[3]),
        .Q(D[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[4] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[4]),
        .Q(D[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[5] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[5]),
        .Q(D[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[6] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[6]),
        .Q(D[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[7] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[7]),
        .Q(D[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[8] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[8]),
        .Q(D[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_reg_out_reg[9] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_data_skid_mux_out[9]),
        .Q(D[9]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[0] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[0]),
        .Q(sig_data_skid_reg[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[10] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[10]),
        .Q(sig_data_skid_reg[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[11] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[11]),
        .Q(sig_data_skid_reg[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[12] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[12]),
        .Q(sig_data_skid_reg[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[13] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[13]),
        .Q(sig_data_skid_reg[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[14] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[14]),
        .Q(sig_data_skid_reg[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[15] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[15]),
        .Q(sig_data_skid_reg[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[16] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[16]),
        .Q(sig_data_skid_reg[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[17] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[17]),
        .Q(sig_data_skid_reg[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[18] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[18]),
        .Q(sig_data_skid_reg[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[19] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[19]),
        .Q(sig_data_skid_reg[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[1] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[1]),
        .Q(sig_data_skid_reg[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[20] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[20]),
        .Q(sig_data_skid_reg[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[21] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[21]),
        .Q(sig_data_skid_reg[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[22] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[22]),
        .Q(sig_data_skid_reg[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[23] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[23]),
        .Q(sig_data_skid_reg[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[24] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[24]),
        .Q(sig_data_skid_reg[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[25] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[25]),
        .Q(sig_data_skid_reg[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[26] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[26]),
        .Q(sig_data_skid_reg[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[27] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[27]),
        .Q(sig_data_skid_reg[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[28] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[28]),
        .Q(sig_data_skid_reg[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[29] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[29]),
        .Q(sig_data_skid_reg[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[2] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[2]),
        .Q(sig_data_skid_reg[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[30] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[30]),
        .Q(sig_data_skid_reg[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[31] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[31]),
        .Q(sig_data_skid_reg[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[3] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[3]),
        .Q(sig_data_skid_reg[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[4] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[4]),
        .Q(sig_data_skid_reg[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[5] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[5]),
        .Q(sig_data_skid_reg[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[6] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[6]),
        .Q(sig_data_skid_reg[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[7] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[7]),
        .Q(sig_data_skid_reg[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[8] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[8]),
        .Q(sig_data_skid_reg[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \sig_data_skid_reg_reg[9] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(m_axi_mem_rdata[9]),
        .Q(sig_data_skid_reg[9]),
        .R(SR));
  LUT4 #(
    .INIT(16'h8F80)) 
    sig_last_reg_out_i_1
       (.I0(m_axi_mem_rlast),
        .I1(sig_next_eof_reg),
        .I2(sig_s_ready_dup),
        .I3(sig_last_skid_reg),
        .O(sig_last_skid_mux_out));
  FDRE #(
    .INIT(1'b0)) 
    sig_last_reg_out_reg
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_last_skid_mux_out),
        .Q(D[33]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    sig_last_skid_reg_reg
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(sig_rdc2sf_wlast),
        .Q(sig_last_skid_reg),
        .R(SR));
  LUT6 #(
    .INIT(64'h00000000D5DD0000)) 
    sig_m_valid_dup_i_1
       (.I0(sig_m_valid_out_reg_1),
        .I1(sig_m_valid_dup),
        .I2(sig_last_reg_out_reg_2),
        .I3(sig_s_ready_dup),
        .I4(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .I5(sig_reset_reg),
        .O(sig_m_valid_dup_i_1_n_0));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    sig_m_valid_dup_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_m_valid_dup_i_1_n_0),
        .Q(sig_m_valid_dup),
        .R(1'b0));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    sig_m_valid_out_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_m_valid_dup_i_1_n_0),
        .Q(sig_m_valid_out),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAA8AAAAA8A8A8A8A)) 
    sig_s_ready_dup_i_1
       (.I0(sig_cmd_stat_rst_user_reg_n_cdc_from),
        .I1(sig_reset_reg),
        .I2(sig_last_reg_out_reg_2),
        .I3(sig_m_valid_out_reg_1),
        .I4(sig_m_valid_dup),
        .I5(sig_s_ready_dup),
        .O(sig_s_ready_dup_i_1_n_0));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    sig_s_ready_dup_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_s_ready_dup_i_1_n_0),
        .Q(sig_s_ready_dup),
        .R(1'b0));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    sig_s_ready_out_reg
       (.C(clk),
        .CE(1'b1),
        .D(sig_s_ready_dup_i_1_n_0),
        .Q(sig_s_ready_out),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h8F80)) 
    \sig_user_reg_out[0]_i_1 
       (.I0(m_axi_mem_rvalid),
        .I1(m_axi_mem_rresp),
        .I2(sig_s_ready_dup),
        .I3(sig_user_skid_reg),
        .O(sig_user_skid_mux_out));
  FDRE #(
    .INIT(1'b0)) 
    \sig_user_reg_out_reg[0] 
       (.C(clk),
        .CE(sig_data_reg_out_en),
        .D(sig_user_skid_mux_out),
        .Q(D[32]),
        .R(SR));
  LUT2 #(
    .INIT(4'h8)) 
    \sig_user_skid_reg[0]_i_1 
       (.I0(m_axi_mem_rvalid),
        .I1(m_axi_mem_rresp),
        .O(fetch_error_aximm_side));
  FDRE #(
    .INIT(1'b0)) 
    \sig_user_skid_reg_reg[0] 
       (.C(clk),
        .CE(sig_s_ready_dup),
        .D(fetch_error_aximm_side),
        .Q(sig_user_skid_reg),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "glb_srl_fifo" *) 
module dfx_controller_setup_dfx_controller_0_0_glb_srl_fifo
   (fifo_not_full,
    vsm_VS_0_rm_shutdown_ack_0,
    access_address,
    vsm_VS_0_rm_shutdown_ack_1,
    \FSM_sequential_current_state_reg[1] ,
    fifo_write,
    D,
    clk,
    SS,
    not_full_1_reg_0,
    CARRYS_OUT,
    trigger_selector_valid_out,
    vsm_VS_0_rm_shutdown_ack,
    Q,
    reset,
    \current_state_reg[2] ,
    \current_state_reg[2]_0 ,
    current_state);
  output fifo_not_full;
  output vsm_VS_0_rm_shutdown_ack_0;
  output access_address;
  output vsm_VS_0_rm_shutdown_ack_1;
  output \FSM_sequential_current_state_reg[1] ;
  input fifo_write;
  input [0:0]D;
  input clk;
  input [0:0]SS;
  input not_full_1_reg_0;
  input [0:0]CARRYS_OUT;
  input trigger_selector_valid_out;
  input vsm_VS_0_rm_shutdown_ack;
  input [3:0]Q;
  input reset;
  input \current_state_reg[2] ;
  input \current_state_reg[2]_0 ;
  input [1:0]current_state;

  wire [0:0]CARRYS_OUT;
  wire [0:0]D;
  wire \FSM_sequential_current_state_reg[1] ;
  wire GLB_if;
  wire [3:0]Q;
  wire [0:0]SS;
  wire access_address;
  wire \add_1[0]_i_1_n_0 ;
  wire \add_1[1]_i_1_n_0 ;
  wire \add_1[2]_i_1_n_0 ;
  wire \add_1_reg_n_0_[0] ;
  wire \add_1_reg_n_0_[1] ;
  wire \add_1_reg_n_0_[2] ;
  wire clk;
  wire [1:0]current_state;
  wire \current_state_reg[2] ;
  wire \current_state_reg[2]_0 ;
  wire \fifo_1_reg[3][0]_srl4_n_0 ;
  wire \fifo_2_reg_n_0_[0] ;
  wire fifo_not_full;
  wire fifo_write;
  wire not_full_1_i_1_n_0;
  wire not_full_1_reg_0;
  wire rd_avail_2_reg_n_0;
  wire reset;
  wire trigger_selector_valid_out;
  wire vsm_VS_0_rm_shutdown_ack;
  wire vsm_VS_0_rm_shutdown_ack_0;
  wire vsm_VS_0_rm_shutdown_ack_1;

  LUT5 #(
    .INIT(32'hBB4B44B4)) 
    \add_1[0]_i_1 
       (.I0(\add_1_reg_n_0_[2] ),
        .I1(not_full_1_reg_0),
        .I2(trigger_selector_valid_out),
        .I3(CARRYS_OUT),
        .I4(\add_1_reg_n_0_[0] ),
        .O(\add_1[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFD2FFDFD02D00202)) 
    \add_1[1]_i_1 
       (.I0(not_full_1_reg_0),
        .I1(\add_1_reg_n_0_[2] ),
        .I2(\add_1_reg_n_0_[0] ),
        .I3(CARRYS_OUT),
        .I4(trigger_selector_valid_out),
        .I5(\add_1_reg_n_0_[1] ),
        .O(\add_1[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCC46CCCCDCCCDCDC)) 
    \add_1[2]_i_1 
       (.I0(\add_1_reg_n_0_[0] ),
        .I1(\add_1_reg_n_0_[2] ),
        .I2(not_full_1_reg_0),
        .I3(CARRYS_OUT),
        .I4(trigger_selector_valid_out),
        .I5(\add_1_reg_n_0_[1] ),
        .O(\add_1[2]_i_1_n_0 ));
  (* register_duplication = "no" *) 
  (* use_carry_chain = "yes" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    \add_1_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\add_1[0]_i_1_n_0 ),
        .Q(\add_1_reg_n_0_[0] ),
        .S(SS));
  (* register_duplication = "no" *) 
  (* use_carry_chain = "yes" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    \add_1_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\add_1[1]_i_1_n_0 ),
        .Q(\add_1_reg_n_0_[1] ),
        .S(SS));
  (* register_duplication = "no" *) 
  (* use_carry_chain = "yes" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    \add_1_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\add_1[2]_i_1_n_0 ),
        .Q(\add_1_reg_n_0_[2] ),
        .S(SS));
  LUT5 #(
    .INIT(32'h00000200)) 
    \b_trigger_table.gen_address_reg.access_address_del[0]_i_1 
       (.I0(\fifo_2_reg_n_0_[0] ),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[1]),
        .O(access_address));
  LUT6 #(
    .INIT(64'h0000000050503F30)) 
    \current_state[0]_i_3 
       (.I0(vsm_VS_0_rm_shutdown_ack),
        .I1(rd_avail_2_reg_n_0),
        .I2(Q[0]),
        .I3(reset),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(vsm_VS_0_rm_shutdown_ack_0));
  LUT6 #(
    .INIT(64'hEECCEECCFCFFFCCC)) 
    \current_state[2]_i_2 
       (.I0(vsm_VS_0_rm_shutdown_ack),
        .I1(\current_state_reg[2] ),
        .I2(rd_avail_2_reg_n_0),
        .I3(Q[0]),
        .I4(\current_state_reg[2]_0 ),
        .I5(Q[1]),
        .O(vsm_VS_0_rm_shutdown_ack_1));
  (* srl_bus_name = "U0/\i_vsm_VS_0/i_trigger_manager/i_trigger_fifo/fifo_1_reg[3] " *) 
  (* srl_name = "U0/\i_vsm_VS_0/i_trigger_manager/i_trigger_fifo/fifo_1_reg[3][0]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[3][0]_srl4 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(fifo_write),
        .CLK(clk),
        .D(D),
        .Q(\fifo_1_reg[3][0]_srl4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[3][0]_srl4_n_0 ),
        .Q(\fifo_2_reg_n_0_[0] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hBFFFBFBF000F0000)) 
    not_full_1_i_1
       (.I0(\add_1_reg_n_0_[0] ),
        .I1(\add_1_reg_n_0_[1] ),
        .I2(fifo_write),
        .I3(\add_1_reg_n_0_[2] ),
        .I4(not_full_1_reg_0),
        .I5(fifo_not_full),
        .O(not_full_1_i_1_n_0));
  (* register_duplication = "no" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    not_full_1_reg
       (.C(clk),
        .CE(1'b1),
        .D(not_full_1_i_1_n_0),
        .Q(fifo_not_full),
        .S(SS));
  LUT3 #(
    .INIT(8'h40)) 
    \opt_has_pipe.first_q[0]_i_1__3 
       (.I0(current_state[1]),
        .I1(current_state[0]),
        .I2(fifo_not_full),
        .O(\FSM_sequential_current_state_reg[1] ));
  LUT1 #(
    .INIT(2'h1)) 
    rd_avail_2_i_1
       (.I0(\add_1_reg_n_0_[2] ),
        .O(GLB_if));
  (* use_clock_enable = "no" *) 
  (* use_sync_set = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    rd_avail_2_reg
       (.C(clk),
        .CE(1'b1),
        .D(GLB_if),
        .Q(rd_avail_2_reg_n_0),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "glb_srl_fifo" *) 
module dfx_controller_setup_dfx_controller_0_0_glb_srl_fifo__parameterized1
   (rd_avail,
    Q,
    id_fifo_write,
    S,
    \fifo_2_reg[15]_0 ,
    \fifo_2_reg[7]_0 ,
    O,
    CO,
    \fifo_2_reg[9]_0 ,
    ready_for_hw_trigger_reg,
    SS,
    clk,
    ready_for_hw_trigger,
    reqs_stored,
    fsm_cs,
    v_dma_size_reg,
    id_fifo_not_full,
    cmd_fifo_write,
    \v_dma_size_reg[4] ,
    \v_dma_size_reg[8] ,
    in);
  output rd_avail;
  output [0:0]Q;
  output id_fifo_write;
  output [0:0]S;
  output [0:0]\fifo_2_reg[15]_0 ;
  output \fifo_2_reg[7]_0 ;
  output [3:0]O;
  output [0:0]CO;
  output [3:0]\fifo_2_reg[9]_0 ;
  output ready_for_hw_trigger_reg;
  input [0:0]SS;
  input clk;
  input ready_for_hw_trigger;
  input reqs_stored;
  input [2:0]fsm_cs;
  input [6:0]v_dma_size_reg;
  input id_fifo_not_full;
  input cmd_fifo_write;
  input [1:0]\v_dma_size_reg[4] ;
  input [0:0]\v_dma_size_reg[8] ;
  input [1:0]in;

  wire [0:0]CO;
  wire \FSM_sequential_b_fsm.fsm_cs[1]_i_4_n_0 ;
  wire GLB_if;
  wire [3:0]O;
  wire [0:0]Q;
  wire [0:0]S;
  wire [0:0]SS;
  wire \add_1[0]_i_1__0_n_0 ;
  wire \add_1[1]_i_1__0_n_0 ;
  wire \add_1[2]_i_1__2_n_0 ;
  wire \add_1[2]_i_2_n_0 ;
  wire \add_1_reg_n_0_[0] ;
  wire \add_1_reg_n_0_[1] ;
  wire \add_1_reg_n_0_[2] ;
  wire clk;
  wire cmd_fifo_write;
  wire \fifo_1_reg[3][11]_srl4_n_0 ;
  wire \fifo_1_reg[3][15]_srl4_n_0 ;
  wire \fifo_1_reg[3][3]_srl4_n_0 ;
  wire \fifo_1_reg[3][5]_srl4_n_0 ;
  wire \fifo_1_reg[3][66]_srl4_n_0 ;
  wire \fifo_1_reg[3][7]_srl4_n_0 ;
  wire \fifo_1_reg[3][8]_srl4_n_0 ;
  wire \fifo_1_reg[3][9]_srl4_n_0 ;
  wire [0:0]\fifo_2_reg[15]_0 ;
  wire \fifo_2_reg[7]_0 ;
  wire [3:0]\fifo_2_reg[9]_0 ;
  wire fifo_write;
  wire [2:0]fsm_cs;
  wire full;
  wire full_1_i_1_n_0;
  wire id_fifo_not_full;
  wire id_fifo_write;
  wire [1:0]in;
  wire not_full;
  wire not_full_1_i_1__2_n_0;
  wire rd_avail;
  wire [15:3]rd_data;
  wire ready_for_hw_trigger;
  wire ready_for_hw_trigger_reg;
  wire reqs_stored;
  wire \v_dma_size[1]_i_2_n_0 ;
  wire \v_dma_size[1]_i_4_n_0 ;
  wire \v_dma_size[5]_i_2_n_0 ;
  wire \v_dma_size[5]_i_3_n_0 ;
  wire \v_dma_size[5]_i_4_n_0 ;
  wire [6:0]v_dma_size_reg;
  wire \v_dma_size_reg[1]_i_1_n_0 ;
  wire \v_dma_size_reg[1]_i_1_n_1 ;
  wire \v_dma_size_reg[1]_i_1_n_2 ;
  wire \v_dma_size_reg[1]_i_1_n_3 ;
  wire [1:0]\v_dma_size_reg[4] ;
  wire \v_dma_size_reg[5]_i_1_n_1 ;
  wire \v_dma_size_reg[5]_i_1_n_2 ;
  wire \v_dma_size_reg[5]_i_1_n_3 ;
  wire [0:0]\v_dma_size_reg[8] ;

  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_sequential_b_fsm.fsm_cs[1]_i_2 
       (.I0(id_fifo_write),
        .I1(rd_data[7]),
        .I2(rd_data[11]),
        .I3(\FSM_sequential_b_fsm.fsm_cs[1]_i_4_n_0 ),
        .O(\fifo_2_reg[7]_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_sequential_b_fsm.fsm_cs[1]_i_4 
       (.I0(rd_data[9]),
        .I1(rd_data[8]),
        .I2(rd_data[5]),
        .I3(rd_data[3]),
        .I4(rd_data[15]),
        .O(\FSM_sequential_b_fsm.fsm_cs[1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hA95556AA)) 
    \add_1[0]_i_1__0 
       (.I0(\add_1_reg_n_0_[0] ),
        .I1(ready_for_hw_trigger),
        .I2(reqs_stored),
        .I3(not_full),
        .I4(\add_1[2]_i_2_n_0 ),
        .O(\add_1[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBBBDDDDD44422222)) 
    \add_1[1]_i_1__0 
       (.I0(\add_1[2]_i_2_n_0 ),
        .I1(\add_1_reg_n_0_[0] ),
        .I2(ready_for_hw_trigger),
        .I3(reqs_stored),
        .I4(not_full),
        .I5(\add_1_reg_n_0_[1] ),
        .O(\add_1[1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hAA6AA9AA)) 
    \add_1[2]_i_1__2 
       (.I0(\add_1_reg_n_0_[2] ),
        .I1(\add_1_reg_n_0_[0] ),
        .I2(fifo_write),
        .I3(\add_1[2]_i_2_n_0 ),
        .I4(\add_1_reg_n_0_[1] ),
        .O(\add_1[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT5 #(
    .INIT(32'h00000400)) 
    \add_1[2]_i_2 
       (.I0(fsm_cs[2]),
        .I1(fsm_cs[0]),
        .I2(fsm_cs[1]),
        .I3(rd_avail),
        .I4(\add_1_reg_n_0_[2] ),
        .O(\add_1[2]_i_2_n_0 ));
  (* register_duplication = "no" *) 
  (* use_carry_chain = "yes" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    \add_1_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\add_1[0]_i_1__0_n_0 ),
        .Q(\add_1_reg_n_0_[0] ),
        .S(SS));
  (* register_duplication = "no" *) 
  (* use_carry_chain = "yes" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    \add_1_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\add_1[1]_i_1__0_n_0 ),
        .Q(\add_1_reg_n_0_[1] ),
        .S(SS));
  (* register_duplication = "no" *) 
  (* use_carry_chain = "yes" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    \add_1_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\add_1[2]_i_1__2_n_0 ),
        .Q(\add_1_reg_n_0_[2] ),
        .S(SS));
  LUT3 #(
    .INIT(8'hC8)) 
    \b_find_req.gen_vsm_input_vectors[0].reqs_stored[0]_i_1 
       (.I0(ready_for_hw_trigger),
        .I1(full),
        .I2(reqs_stored),
        .O(ready_for_hw_trigger_reg));
  (* srl_bus_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3] " *) 
  (* srl_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3][11]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[3][11]_srl4 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(fifo_write),
        .CLK(clk),
        .D(in[0]),
        .Q(\fifo_1_reg[3][11]_srl4_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3] " *) 
  (* srl_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3][15]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[3][15]_srl4 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(fifo_write),
        .CLK(clk),
        .D(in[0]),
        .Q(\fifo_1_reg[3][15]_srl4_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3] " *) 
  (* srl_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3][3]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[3][3]_srl4 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(fifo_write),
        .CLK(clk),
        .D(in[0]),
        .Q(\fifo_1_reg[3][3]_srl4_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \fifo_1_reg[3][3]_srl4_i_1 
       (.I0(not_full),
        .I1(reqs_stored),
        .I2(ready_for_hw_trigger),
        .O(fifo_write));
  (* srl_bus_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3] " *) 
  (* srl_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3][5]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[3][5]_srl4 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(fifo_write),
        .CLK(clk),
        .D(in[0]),
        .Q(\fifo_1_reg[3][5]_srl4_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3] " *) 
  (* srl_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3][66]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[3][66]_srl4 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(fifo_write),
        .CLK(clk),
        .D(in[1]),
        .Q(\fifo_1_reg[3][66]_srl4_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3] " *) 
  (* srl_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3][7]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[3][7]_srl4 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(fifo_write),
        .CLK(clk),
        .D(in[0]),
        .Q(\fifo_1_reg[3][7]_srl4_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3] " *) 
  (* srl_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3][8]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[3][8]_srl4 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(fifo_write),
        .CLK(clk),
        .D(in[0]),
        .Q(\fifo_1_reg[3][8]_srl4_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3] " *) 
  (* srl_name = "U0/\i_fetch0/i_req_fifo/fifo_1_reg[3][9]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[3][9]_srl4 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(fifo_write),
        .CLK(clk),
        .D(in[0]),
        .Q(\fifo_1_reg[3][9]_srl4_n_0 ));
  LUT5 #(
    .INIT(32'h04000000)) 
    \fifo_1_reg[7][1]_srl8_i_1 
       (.I0(fsm_cs[2]),
        .I1(fsm_cs[0]),
        .I2(fsm_cs[1]),
        .I3(rd_avail),
        .I4(id_fifo_not_full),
        .O(id_fifo_write));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[3][11]_srl4_n_0 ),
        .Q(rd_data[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[3][15]_srl4_n_0 ),
        .Q(rd_data[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[3][3]_srl4_n_0 ),
        .Q(rd_data[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[3][5]_srl4_n_0 ),
        .Q(rd_data[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[66] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[3][66]_srl4_n_0 ),
        .Q(Q),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[3][7]_srl4_n_0 ),
        .Q(rd_data[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[3][8]_srl4_n_0 ),
        .Q(rd_data[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[3][9]_srl4_n_0 ),
        .Q(rd_data[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hDDDD0040)) 
    full_1_i_1
       (.I0(\add_1[2]_i_2_n_0 ),
        .I1(fifo_write),
        .I2(\add_1_reg_n_0_[1] ),
        .I3(\add_1_reg_n_0_[0] ),
        .I4(full),
        .O(full_1_i_1_n_0));
  (* register_duplication = "no" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_set = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    full_1_reg
       (.C(clk),
        .CE(1'b1),
        .D(full_1_i_1_n_0),
        .Q(full),
        .R(SS));
  LUT6 #(
    .INIT(64'hFFAAFFAAABAAFFAA)) 
    not_full_1_i_1__2
       (.I0(\add_1[2]_i_2_n_0 ),
        .I1(ready_for_hw_trigger),
        .I2(reqs_stored),
        .I3(not_full),
        .I4(\add_1_reg_n_0_[1] ),
        .I5(\add_1_reg_n_0_[0] ),
        .O(not_full_1_i_1__2_n_0));
  (* register_duplication = "no" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    not_full_1_reg
       (.C(clk),
        .CE(1'b1),
        .D(not_full_1_i_1__2_n_0),
        .Q(not_full),
        .S(SS));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT1 #(
    .INIT(2'h1)) 
    rd_avail_2_i_1__0
       (.I0(\add_1_reg_n_0_[2] ),
        .O(GLB_if));
  (* use_clock_enable = "no" *) 
  (* use_sync_set = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    rd_avail_2_reg
       (.C(clk),
        .CE(1'b1),
        .D(GLB_if),
        .Q(rd_avail),
        .R(SS));
  LUT3 #(
    .INIT(8'hB8)) 
    \v_dma_size[13]_i_4 
       (.I0(rd_data[15]),
        .I1(id_fifo_write),
        .I2(v_dma_size_reg[6]),
        .O(\fifo_2_reg[15]_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \v_dma_size[1]_i_2 
       (.I0(rd_data[5]),
        .I1(id_fifo_write),
        .I2(v_dma_size_reg[1]),
        .O(\v_dma_size[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h56A6)) 
    \v_dma_size[1]_i_4 
       (.I0(cmd_fifo_write),
        .I1(v_dma_size_reg[0]),
        .I2(id_fifo_write),
        .I3(rd_data[3]),
        .O(\v_dma_size[1]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \v_dma_size[5]_i_2 
       (.I0(rd_data[9]),
        .I1(id_fifo_write),
        .I2(v_dma_size_reg[4]),
        .O(\v_dma_size[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \v_dma_size[5]_i_3 
       (.I0(rd_data[8]),
        .I1(id_fifo_write),
        .I2(v_dma_size_reg[3]),
        .O(\v_dma_size[5]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \v_dma_size[5]_i_4 
       (.I0(rd_data[7]),
        .I1(id_fifo_write),
        .I2(v_dma_size_reg[2]),
        .O(\v_dma_size[5]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \v_dma_size[9]_i_4 
       (.I0(rd_data[11]),
        .I1(id_fifo_write),
        .I2(v_dma_size_reg[5]),
        .O(S));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \v_dma_size_reg[1]_i_1 
       (.CI(1'b0),
        .CO({\v_dma_size_reg[1]_i_1_n_0 ,\v_dma_size_reg[1]_i_1_n_1 ,\v_dma_size_reg[1]_i_1_n_2 ,\v_dma_size_reg[1]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,cmd_fifo_write,1'b0}),
        .O(O),
        .S({\v_dma_size[1]_i_2_n_0 ,\v_dma_size_reg[4] [1],\v_dma_size[1]_i_4_n_0 ,\v_dma_size_reg[4] [0]}));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \v_dma_size_reg[5]_i_1 
       (.CI(\v_dma_size_reg[1]_i_1_n_0 ),
        .CO({CO,\v_dma_size_reg[5]_i_1_n_1 ,\v_dma_size_reg[5]_i_1_n_2 ,\v_dma_size_reg[5]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\fifo_2_reg[9]_0 ),
        .S({\v_dma_size[5]_i_2_n_0 ,\v_dma_size[5]_i_3_n_0 ,\v_dma_size[5]_i_4_n_0 ,\v_dma_size_reg[8] }));
endmodule

(* ORIG_REF_NAME = "glb_srl_fifo" *) 
module dfx_controller_setup_dfx_controller_0_0_glb_srl_fifo__parameterized3
   (id_fifo_not_full,
    aempty,
    not_full_1_reg_0,
    \add_1_reg[3]_0 ,
    bad_config_error_i,
    id_fifo_read,
    not_full_1_reg_1,
    O,
    \v_dma_size_reg[16] ,
    \v_dma_size_reg[20] ,
    \v_dma_size_reg[20]_0 ,
    not_full_1_reg_2,
    not_full_1_reg_3,
    not_full_1_reg_4,
    not_full_1_reg_5,
    not_full_1_reg_6,
    not_full_1_reg_7,
    \dma_addr_reg[28] ,
    \dma_addr_reg[31] ,
    one_word_bs_detected_reg,
    two_word_bs_detected_reg,
    \v_dma_size_reg[3] ,
    \v_dma_size_reg[5] ,
    \v_dma_size_reg[22] ,
    \fifo_2_reg[1]_0 ,
    \FSM_sequential_b_fsm.fsm_cs_reg[0] ,
    \FSM_sequential_b_fsm.fsm_cs_reg[2] ,
    \FSM_sequential_b_fsm.fsm_cs_reg[0]_0 ,
    id_fifo_write,
    Q,
    clk,
    SS,
    rd_avail,
    fsm_cs,
    cmd_fifo_not_full,
    recheck_id_reg_source,
    first_word_seen,
    one_word_bs_detected_reg_0,
    id_fifo_read_d2,
    one_word_bs_detected_reg_1,
    \FSM_sequential_b_fsm.fsm_cs_reg[1] ,
    \FSM_sequential_b_fsm.fsm_cs_reg[2]_0 ,
    \FSM_sequential_b_fsm.fsm_cs_reg[2]_1 ,
    upper_segment_is_zero,
    \add_1_reg[3]_1 ,
    out,
    id_fifo_read_d1_reg,
    reset,
    CO,
    S,
    \v_dma_size_reg[16]_0 ,
    two_word_bs_detected_reg_0,
    id_fifo_almost_empty_d1,
    id_fifo_read_d1,
    in,
    v_dma_size_reg,
    D);
  output id_fifo_not_full;
  output aempty;
  output not_full_1_reg_0;
  output [0:0]\add_1_reg[3]_0 ;
  output bad_config_error_i;
  output id_fifo_read;
  output not_full_1_reg_1;
  output [3:0]O;
  output [3:0]\v_dma_size_reg[16] ;
  output [0:0]\v_dma_size_reg[20] ;
  output [3:0]\v_dma_size_reg[20]_0 ;
  output [3:0]not_full_1_reg_2;
  output [3:0]not_full_1_reg_3;
  output [3:0]not_full_1_reg_4;
  output [3:0]not_full_1_reg_5;
  output [3:0]not_full_1_reg_6;
  output [3:0]not_full_1_reg_7;
  output [3:0]\dma_addr_reg[28] ;
  output [2:0]\dma_addr_reg[31] ;
  output one_word_bs_detected_reg;
  output two_word_bs_detected_reg;
  output [1:0]\v_dma_size_reg[3] ;
  output [0:0]\v_dma_size_reg[5] ;
  output [1:0]\v_dma_size_reg[22] ;
  output \fifo_2_reg[1]_0 ;
  output \FSM_sequential_b_fsm.fsm_cs_reg[0] ;
  output \FSM_sequential_b_fsm.fsm_cs_reg[2] ;
  output \FSM_sequential_b_fsm.fsm_cs_reg[0]_0 ;
  input id_fifo_write;
  input [0:0]Q;
  input clk;
  input [0:0]SS;
  input rd_avail;
  input [2:0]fsm_cs;
  input cmd_fifo_not_full;
  input recheck_id_reg_source;
  input first_word_seen;
  input one_word_bs_detected_reg_0;
  input id_fifo_read_d2;
  input one_word_bs_detected_reg_1;
  input \FSM_sequential_b_fsm.fsm_cs_reg[1] ;
  input \FSM_sequential_b_fsm.fsm_cs_reg[2]_0 ;
  input \FSM_sequential_b_fsm.fsm_cs_reg[2]_1 ;
  input upper_segment_is_zero;
  input \add_1_reg[3]_1 ;
  input out;
  input id_fifo_read_d1_reg;
  input reset;
  input [0:0]CO;
  input [0:0]S;
  input [0:0]\v_dma_size_reg[16]_0 ;
  input two_word_bs_detected_reg_0;
  input id_fifo_almost_empty_d1;
  input id_fifo_read_d1;
  input [30:0]in;
  input [14:0]v_dma_size_reg;
  input [0:0]D;

  wire [0:0]CO;
  wire [0:0]D;
  wire \FSM_sequential_b_fsm.fsm_cs[0]_i_2_n_0 ;
  wire \FSM_sequential_b_fsm.fsm_cs[1]_i_3_n_0 ;
  wire \FSM_sequential_b_fsm.fsm_cs[2]_i_2_n_0 ;
  wire \FSM_sequential_b_fsm.fsm_cs[2]_i_3_n_0 ;
  wire \FSM_sequential_b_fsm.fsm_cs[2]_i_4_n_0 ;
  wire \FSM_sequential_b_fsm.fsm_cs_reg[0] ;
  wire \FSM_sequential_b_fsm.fsm_cs_reg[0]_0 ;
  wire \FSM_sequential_b_fsm.fsm_cs_reg[1] ;
  wire \FSM_sequential_b_fsm.fsm_cs_reg[2] ;
  wire \FSM_sequential_b_fsm.fsm_cs_reg[2]_0 ;
  wire \FSM_sequential_b_fsm.fsm_cs_reg[2]_1 ;
  wire GLB_if;
  wire [3:0]O;
  wire [0:0]Q;
  wire [0:0]S;
  wire [0:0]SS;
  wire \add_1[0]_i_1__1_n_0 ;
  wire \add_1[1]_i_1__1_n_0 ;
  wire \add_1[2]_i_1__0_n_0 ;
  wire \add_1[3]_i_1__0_n_0 ;
  wire \add_1[3]_i_2_n_0 ;
  wire [0:0]\add_1_reg[3]_0 ;
  wire \add_1_reg[3]_1 ;
  wire \add_1_reg_n_0_[0] ;
  wire \add_1_reg_n_0_[1] ;
  wire \add_1_reg_n_0_[2] ;
  wire aempty;
  wire aempty_1_i_1_n_0;
  wire bad_config_error_i;
  wire clk;
  wire cmd_fifo_not_full;
  wire \dma_addr[13]_i_2_n_0 ;
  wire \dma_addr[13]_i_3_n_0 ;
  wire \dma_addr[13]_i_4_n_0 ;
  wire \dma_addr[13]_i_5_n_0 ;
  wire \dma_addr[17]_i_2_n_0 ;
  wire \dma_addr[17]_i_3_n_0 ;
  wire \dma_addr[17]_i_4_n_0 ;
  wire \dma_addr[17]_i_5_n_0 ;
  wire \dma_addr[1]_i_3_n_0 ;
  wire \dma_addr[1]_i_4_n_0 ;
  wire \dma_addr[1]_i_5_n_0 ;
  wire \dma_addr[1]_i_6_n_0 ;
  wire \dma_addr[1]_i_7_n_0 ;
  wire \dma_addr[21]_i_2_n_0 ;
  wire \dma_addr[21]_i_3_n_0 ;
  wire \dma_addr[21]_i_4_n_0 ;
  wire \dma_addr[21]_i_5_n_0 ;
  wire \dma_addr[25]_i_2_n_0 ;
  wire \dma_addr[25]_i_3_n_0 ;
  wire \dma_addr[25]_i_4_n_0 ;
  wire \dma_addr[25]_i_5_n_0 ;
  wire \dma_addr[29]_i_2_n_0 ;
  wire \dma_addr[29]_i_3_n_0 ;
  wire \dma_addr[29]_i_4_n_0 ;
  wire \dma_addr[5]_i_2_n_0 ;
  wire \dma_addr[5]_i_3_n_0 ;
  wire \dma_addr[5]_i_4_n_0 ;
  wire \dma_addr[5]_i_5_n_0 ;
  wire \dma_addr[9]_i_2_n_0 ;
  wire \dma_addr[9]_i_3_n_0 ;
  wire \dma_addr[9]_i_4_n_0 ;
  wire \dma_addr[9]_i_5_n_0 ;
  wire \dma_addr_reg[13]_i_1_n_0 ;
  wire \dma_addr_reg[13]_i_1_n_1 ;
  wire \dma_addr_reg[13]_i_1_n_2 ;
  wire \dma_addr_reg[13]_i_1_n_3 ;
  wire \dma_addr_reg[17]_i_1_n_0 ;
  wire \dma_addr_reg[17]_i_1_n_1 ;
  wire \dma_addr_reg[17]_i_1_n_2 ;
  wire \dma_addr_reg[17]_i_1_n_3 ;
  wire \dma_addr_reg[1]_i_2_n_0 ;
  wire \dma_addr_reg[1]_i_2_n_1 ;
  wire \dma_addr_reg[1]_i_2_n_2 ;
  wire \dma_addr_reg[1]_i_2_n_3 ;
  wire \dma_addr_reg[21]_i_1_n_0 ;
  wire \dma_addr_reg[21]_i_1_n_1 ;
  wire \dma_addr_reg[21]_i_1_n_2 ;
  wire \dma_addr_reg[21]_i_1_n_3 ;
  wire \dma_addr_reg[25]_i_1_n_0 ;
  wire \dma_addr_reg[25]_i_1_n_1 ;
  wire \dma_addr_reg[25]_i_1_n_2 ;
  wire \dma_addr_reg[25]_i_1_n_3 ;
  wire [3:0]\dma_addr_reg[28] ;
  wire \dma_addr_reg[29]_i_1_n_2 ;
  wire \dma_addr_reg[29]_i_1_n_3 ;
  wire [2:0]\dma_addr_reg[31] ;
  wire \dma_addr_reg[5]_i_1_n_0 ;
  wire \dma_addr_reg[5]_i_1_n_1 ;
  wire \dma_addr_reg[5]_i_1_n_2 ;
  wire \dma_addr_reg[5]_i_1_n_3 ;
  wire \dma_addr_reg[9]_i_1_n_0 ;
  wire \dma_addr_reg[9]_i_1_n_1 ;
  wire \dma_addr_reg[9]_i_1_n_2 ;
  wire \dma_addr_reg[9]_i_1_n_3 ;
  wire \fifo_1_reg[7][1]_srl8_n_0 ;
  wire \fifo_2_reg[1]_0 ;
  wire \fifo_2_reg_n_0_[1] ;
  wire first_word_seen;
  wire [2:0]fsm_cs;
  wire id_fifo_almost_empty_d1;
  wire id_fifo_not_full;
  wire id_fifo_read;
  wire id_fifo_read_d1;
  wire id_fifo_read_d1_reg;
  wire id_fifo_read_d2;
  wire id_fifo_write;
  wire ids_avail;
  wire [30:0]in;
  wire not_full_1_i_1__0_n_0;
  wire not_full_1_reg_0;
  wire not_full_1_reg_1;
  wire [3:0]not_full_1_reg_2;
  wire [3:0]not_full_1_reg_3;
  wire [3:0]not_full_1_reg_4;
  wire [3:0]not_full_1_reg_5;
  wire [3:0]not_full_1_reg_6;
  wire [3:0]not_full_1_reg_7;
  wire one_word_bs_detected_i_2_n_0;
  wire one_word_bs_detected_i_3_n_0;
  wire one_word_bs_detected_reg;
  wire one_word_bs_detected_reg_0;
  wire one_word_bs_detected_reg_1;
  wire out;
  wire rd_avail;
  wire recheck_id_reg_source;
  wire reset;
  wire \rm_id_o[0]_i_2_n_0 ;
  wire two_word_bs_detected_i_2_n_0;
  wire two_word_bs_detected_reg;
  wire two_word_bs_detected_reg_0;
  wire upper_segment_is_zero;
  wire \v_dma_size[13]_i_2_n_0 ;
  wire \v_dma_size[13]_i_3_n_0 ;
  wire \v_dma_size[13]_i_5_n_0 ;
  wire \v_dma_size[17]_i_2_n_0 ;
  wire \v_dma_size[17]_i_3_n_0 ;
  wire \v_dma_size[17]_i_4_n_0 ;
  wire \v_dma_size[17]_i_5_n_0 ;
  wire \v_dma_size[9]_i_2_n_0 ;
  wire \v_dma_size[9]_i_3_n_0 ;
  wire \v_dma_size[9]_i_5_n_0 ;
  wire [14:0]v_dma_size_reg;
  wire \v_dma_size_reg[13]_i_1_n_0 ;
  wire \v_dma_size_reg[13]_i_1_n_1 ;
  wire \v_dma_size_reg[13]_i_1_n_2 ;
  wire \v_dma_size_reg[13]_i_1_n_3 ;
  wire [3:0]\v_dma_size_reg[16] ;
  wire [0:0]\v_dma_size_reg[16]_0 ;
  wire \v_dma_size_reg[17]_i_1_n_1 ;
  wire \v_dma_size_reg[17]_i_1_n_2 ;
  wire \v_dma_size_reg[17]_i_1_n_3 ;
  wire [0:0]\v_dma_size_reg[20] ;
  wire [3:0]\v_dma_size_reg[20]_0 ;
  wire [1:0]\v_dma_size_reg[22] ;
  wire [1:0]\v_dma_size_reg[3] ;
  wire [0:0]\v_dma_size_reg[5] ;
  wire \v_dma_size_reg[9]_i_1_n_0 ;
  wire \v_dma_size_reg[9]_i_1_n_1 ;
  wire \v_dma_size_reg[9]_i_1_n_2 ;
  wire \v_dma_size_reg[9]_i_1_n_3 ;
  wire [3:2]\NLW_dma_addr_reg[29]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_dma_addr_reg[29]_i_1_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hBAFEFFFFAFEF0000)) 
    \FSM_sequential_b_fsm.fsm_cs[0]_i_1 
       (.I0(\FSM_sequential_b_fsm.fsm_cs_reg[1] ),
        .I1(fsm_cs[2]),
        .I2(fsm_cs[1]),
        .I3(\FSM_sequential_b_fsm.fsm_cs[0]_i_2_n_0 ),
        .I4(\FSM_sequential_b_fsm.fsm_cs[2]_i_3_n_0 ),
        .I5(fsm_cs[0]),
        .O(\FSM_sequential_b_fsm.fsm_cs_reg[2] ));
  LUT6 #(
    .INIT(64'hFFFB0000FFFBFFFB)) 
    \FSM_sequential_b_fsm.fsm_cs[0]_i_2 
       (.I0(\add_1_reg[3]_0 ),
        .I1(aempty),
        .I2(first_word_seen),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(reset),
        .O(\FSM_sequential_b_fsm.fsm_cs[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0F00FFFF0F440000)) 
    \FSM_sequential_b_fsm.fsm_cs[1]_i_1 
       (.I0(\FSM_sequential_b_fsm.fsm_cs_reg[1] ),
        .I1(fsm_cs[0]),
        .I2(\FSM_sequential_b_fsm.fsm_cs[1]_i_3_n_0 ),
        .I3(fsm_cs[2]),
        .I4(\FSM_sequential_b_fsm.fsm_cs[2]_i_3_n_0 ),
        .I5(fsm_cs[1]),
        .O(\FSM_sequential_b_fsm.fsm_cs_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFF00FBFB0000)) 
    \FSM_sequential_b_fsm.fsm_cs[1]_i_3 
       (.I0(\add_1_reg[3]_0 ),
        .I1(aempty),
        .I2(first_word_seen),
        .I3(reset),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[1]),
        .O(\FSM_sequential_b_fsm.fsm_cs[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT5 #(
    .INIT(32'h04FF0400)) 
    \FSM_sequential_b_fsm.fsm_cs[2]_i_1 
       (.I0(\FSM_sequential_b_fsm.fsm_cs[2]_i_2_n_0 ),
        .I1(fsm_cs[0]),
        .I2(fsm_cs[1]),
        .I3(\FSM_sequential_b_fsm.fsm_cs[2]_i_3_n_0 ),
        .I4(fsm_cs[2]),
        .O(\FSM_sequential_b_fsm.fsm_cs_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT5 #(
    .INIT(32'h00005575)) 
    \FSM_sequential_b_fsm.fsm_cs[2]_i_2 
       (.I0(fsm_cs[2]),
        .I1(\add_1_reg[3]_0 ),
        .I2(aempty),
        .I3(first_word_seen),
        .I4(\FSM_sequential_b_fsm.fsm_cs_reg[1] ),
        .O(\FSM_sequential_b_fsm.fsm_cs[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFE00FEFEFE00FE00)) 
    \FSM_sequential_b_fsm.fsm_cs[2]_i_3 
       (.I0(fsm_cs[1]),
        .I1(fsm_cs[0]),
        .I2(\FSM_sequential_b_fsm.fsm_cs[2]_i_4_n_0 ),
        .I3(\FSM_sequential_b_fsm.fsm_cs_reg[2]_0 ),
        .I4(\FSM_sequential_b_fsm.fsm_cs_reg[2]_1 ),
        .I5(upper_segment_is_zero),
        .O(\FSM_sequential_b_fsm.fsm_cs[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT4 #(
    .INIT(16'h04FF)) 
    \FSM_sequential_b_fsm.fsm_cs[2]_i_4 
       (.I0(first_word_seen),
        .I1(aempty),
        .I2(\add_1_reg[3]_0 ),
        .I3(fsm_cs[2]),
        .O(\FSM_sequential_b_fsm.fsm_cs[2]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_sequential_b_fsm.fsm_cs[2]_i_7 
       (.I0(id_fifo_not_full),
        .I1(rd_avail),
        .O(not_full_1_reg_1));
  LUT3 #(
    .INIT(8'h69)) 
    \add_1[0]_i_1__1 
       (.I0(\add_1[3]_i_2_n_0 ),
        .I1(id_fifo_write),
        .I2(\add_1_reg_n_0_[0] ),
        .O(\add_1[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT4 #(
    .INIT(16'h7E81)) 
    \add_1[1]_i_1__1 
       (.I0(\add_1[3]_i_2_n_0 ),
        .I1(\add_1_reg_n_0_[0] ),
        .I2(id_fifo_write),
        .I3(\add_1_reg_n_0_[1] ),
        .O(\add_1[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT5 #(
    .INIT(32'h7FFE8001)) 
    \add_1[2]_i_1__0 
       (.I0(id_fifo_write),
        .I1(\add_1[3]_i_2_n_0 ),
        .I2(\add_1_reg_n_0_[0] ),
        .I3(\add_1_reg_n_0_[1] ),
        .I4(\add_1_reg_n_0_[2] ),
        .O(\add_1[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAA9)) 
    \add_1[3]_i_1__0 
       (.I0(\add_1_reg[3]_0 ),
        .I1(\add_1_reg_n_0_[2] ),
        .I2(\add_1_reg_n_0_[1] ),
        .I3(id_fifo_write),
        .I4(\add_1[3]_i_2_n_0 ),
        .I5(\add_1_reg_n_0_[0] ),
        .O(\add_1[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBBFFFFFBFF)) 
    \add_1[3]_i_2 
       (.I0(\add_1_reg[3]_0 ),
        .I1(ids_avail),
        .I2(\add_1_reg[3]_1 ),
        .I3(out),
        .I4(first_word_seen),
        .I5(bad_config_error_i),
        .O(\add_1[3]_i_2_n_0 ));
  (* register_duplication = "no" *) 
  (* use_carry_chain = "yes" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    \add_1_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\add_1[0]_i_1__1_n_0 ),
        .Q(\add_1_reg_n_0_[0] ),
        .S(SS));
  (* register_duplication = "no" *) 
  (* use_carry_chain = "yes" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    \add_1_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\add_1[1]_i_1__1_n_0 ),
        .Q(\add_1_reg_n_0_[1] ),
        .S(SS));
  (* register_duplication = "no" *) 
  (* use_carry_chain = "yes" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    \add_1_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\add_1[2]_i_1__0_n_0 ),
        .Q(\add_1_reg_n_0_[2] ),
        .S(SS));
  (* register_duplication = "no" *) 
  (* use_carry_chain = "yes" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    \add_1_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\add_1[3]_i_1__0_n_0 ),
        .Q(\add_1_reg[3]_0 ),
        .S(SS));
  LUT6 #(
    .INIT(64'hFEFFFFFF00000002)) 
    aempty_1_i_1
       (.I0(\add_1_reg_n_0_[0] ),
        .I1(\add_1_reg_n_0_[1] ),
        .I2(\add_1_reg_n_0_[2] ),
        .I3(\add_1[3]_i_2_n_0 ),
        .I4(id_fifo_write),
        .I5(aempty),
        .O(aempty_1_i_1_n_0));
  (* register_duplication = "no" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_1_reg
       (.C(clk),
        .CE(1'b1),
        .D(aempty_1_i_1_n_0),
        .Q(aempty),
        .S(SS));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'h08)) 
    bad_config_error_i_i_1
       (.I0(fsm_cs[0]),
        .I1(fsm_cs[1]),
        .I2(fsm_cs[2]),
        .O(bad_config_error_i));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[13]_i_2 
       (.I0(in[15]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[13]_i_3 
       (.I0(in[14]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[13]_i_4 
       (.I0(in[13]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[13]_i_5 
       (.I0(in[12]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[13]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[17]_i_2 
       (.I0(in[19]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[17]_i_3 
       (.I0(in[18]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[17]_i_4 
       (.I0(in[17]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[17]_i_5 
       (.I0(in[16]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0008000800F00000)) 
    \dma_addr[1]_i_1 
       (.I0(id_fifo_not_full),
        .I1(rd_avail),
        .I2(fsm_cs[1]),
        .I3(fsm_cs[2]),
        .I4(cmd_fifo_not_full),
        .I5(fsm_cs[0]),
        .O(not_full_1_reg_0));
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    \dma_addr[1]_i_3 
       (.I0(id_fifo_not_full),
        .I1(rd_avail),
        .I2(fsm_cs[1]),
        .I3(fsm_cs[0]),
        .I4(fsm_cs[2]),
        .O(\dma_addr[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[1]_i_4 
       (.I0(in[3]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[1]_i_5 
       (.I0(in[2]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[1]_i_6 
       (.I0(in[1]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \dma_addr[1]_i_7 
       (.I0(in[0]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \dma_addr[21]_i_2 
       (.I0(in[23]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \dma_addr[21]_i_3 
       (.I0(in[22]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[21]_i_4 
       (.I0(in[21]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[21]_i_5 
       (.I0(in[20]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[21]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \dma_addr[25]_i_2 
       (.I0(in[27]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \dma_addr[25]_i_3 
       (.I0(in[26]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \dma_addr[25]_i_4 
       (.I0(in[25]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \dma_addr[25]_i_5 
       (.I0(in[24]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[25]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \dma_addr[29]_i_2 
       (.I0(in[30]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \dma_addr[29]_i_3 
       (.I0(in[29]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[29]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \dma_addr[29]_i_4 
       (.I0(in[28]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[5]_i_2 
       (.I0(in[7]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[5]_i_3 
       (.I0(in[6]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[5]_i_4 
       (.I0(in[5]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[5]_i_5 
       (.I0(in[4]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[9]_i_2 
       (.I0(in[11]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[9]_i_3 
       (.I0(in[10]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[9]_i_4 
       (.I0(in[9]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555155555)) 
    \dma_addr[9]_i_5 
       (.I0(in[8]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\dma_addr[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \dma_addr_reg[13]_i_1 
       (.CI(\dma_addr_reg[9]_i_1_n_0 ),
        .CO({\dma_addr_reg[13]_i_1_n_0 ,\dma_addr_reg[13]_i_1_n_1 ,\dma_addr_reg[13]_i_1_n_2 ,\dma_addr_reg[13]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\dma_addr[1]_i_3_n_0 ,\dma_addr[1]_i_3_n_0 ,\dma_addr[1]_i_3_n_0 ,\dma_addr[1]_i_3_n_0 }),
        .O(not_full_1_reg_5),
        .S({\dma_addr[13]_i_2_n_0 ,\dma_addr[13]_i_3_n_0 ,\dma_addr[13]_i_4_n_0 ,\dma_addr[13]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \dma_addr_reg[17]_i_1 
       (.CI(\dma_addr_reg[13]_i_1_n_0 ),
        .CO({\dma_addr_reg[17]_i_1_n_0 ,\dma_addr_reg[17]_i_1_n_1 ,\dma_addr_reg[17]_i_1_n_2 ,\dma_addr_reg[17]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\dma_addr[1]_i_3_n_0 ,\dma_addr[1]_i_3_n_0 ,\dma_addr[1]_i_3_n_0 ,\dma_addr[1]_i_3_n_0 }),
        .O(not_full_1_reg_6),
        .S({\dma_addr[17]_i_2_n_0 ,\dma_addr[17]_i_3_n_0 ,\dma_addr[17]_i_4_n_0 ,\dma_addr[17]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \dma_addr_reg[1]_i_2 
       (.CI(1'b0),
        .CO({\dma_addr_reg[1]_i_2_n_0 ,\dma_addr_reg[1]_i_2_n_1 ,\dma_addr_reg[1]_i_2_n_2 ,\dma_addr_reg[1]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({\dma_addr[1]_i_3_n_0 ,\dma_addr[1]_i_3_n_0 ,\dma_addr[1]_i_3_n_0 ,1'b0}),
        .O(not_full_1_reg_2),
        .S({\dma_addr[1]_i_4_n_0 ,\dma_addr[1]_i_5_n_0 ,\dma_addr[1]_i_6_n_0 ,\dma_addr[1]_i_7_n_0 }));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \dma_addr_reg[21]_i_1 
       (.CI(\dma_addr_reg[17]_i_1_n_0 ),
        .CO({\dma_addr_reg[21]_i_1_n_0 ,\dma_addr_reg[21]_i_1_n_1 ,\dma_addr_reg[21]_i_1_n_2 ,\dma_addr_reg[21]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\dma_addr[1]_i_3_n_0 ,\dma_addr[1]_i_3_n_0 }),
        .O(not_full_1_reg_7),
        .S({\dma_addr[21]_i_2_n_0 ,\dma_addr[21]_i_3_n_0 ,\dma_addr[21]_i_4_n_0 ,\dma_addr[21]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \dma_addr_reg[25]_i_1 
       (.CI(\dma_addr_reg[21]_i_1_n_0 ),
        .CO({\dma_addr_reg[25]_i_1_n_0 ,\dma_addr_reg[25]_i_1_n_1 ,\dma_addr_reg[25]_i_1_n_2 ,\dma_addr_reg[25]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\dma_addr_reg[28] ),
        .S({\dma_addr[25]_i_2_n_0 ,\dma_addr[25]_i_3_n_0 ,\dma_addr[25]_i_4_n_0 ,\dma_addr[25]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \dma_addr_reg[29]_i_1 
       (.CI(\dma_addr_reg[25]_i_1_n_0 ),
        .CO({\NLW_dma_addr_reg[29]_i_1_CO_UNCONNECTED [3:2],\dma_addr_reg[29]_i_1_n_2 ,\dma_addr_reg[29]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_dma_addr_reg[29]_i_1_O_UNCONNECTED [3],\dma_addr_reg[31] }),
        .S({1'b0,\dma_addr[29]_i_2_n_0 ,\dma_addr[29]_i_3_n_0 ,\dma_addr[29]_i_4_n_0 }));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \dma_addr_reg[5]_i_1 
       (.CI(\dma_addr_reg[1]_i_2_n_0 ),
        .CO({\dma_addr_reg[5]_i_1_n_0 ,\dma_addr_reg[5]_i_1_n_1 ,\dma_addr_reg[5]_i_1_n_2 ,\dma_addr_reg[5]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\dma_addr[1]_i_3_n_0 ,\dma_addr[1]_i_3_n_0 ,\dma_addr[1]_i_3_n_0 ,\dma_addr[1]_i_3_n_0 }),
        .O(not_full_1_reg_3),
        .S({\dma_addr[5]_i_2_n_0 ,\dma_addr[5]_i_3_n_0 ,\dma_addr[5]_i_4_n_0 ,\dma_addr[5]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \dma_addr_reg[9]_i_1 
       (.CI(\dma_addr_reg[5]_i_1_n_0 ),
        .CO({\dma_addr_reg[9]_i_1_n_0 ,\dma_addr_reg[9]_i_1_n_1 ,\dma_addr_reg[9]_i_1_n_2 ,\dma_addr_reg[9]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\dma_addr[1]_i_3_n_0 ,\dma_addr[1]_i_3_n_0 ,\dma_addr[1]_i_3_n_0 ,\dma_addr[1]_i_3_n_0 }),
        .O(not_full_1_reg_4),
        .S({\dma_addr[9]_i_2_n_0 ,\dma_addr[9]_i_3_n_0 ,\dma_addr[9]_i_4_n_0 ,\dma_addr[9]_i_5_n_0 }));
  (* srl_bus_name = "U0/\i_fetch0/i_id_fifo/fifo_1_reg[7] " *) 
  (* srl_name = "U0/\i_fetch0/i_id_fifo/fifo_1_reg[7][1]_srl8 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[7][1]_srl8 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(1'b0),
        .CE(id_fifo_write),
        .CLK(clk),
        .D(Q),
        .Q(\fifo_1_reg[7][1]_srl8_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[7][1]_srl8_n_0 ),
        .Q(\fifo_2_reg_n_0_[1] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h02AA020202020202)) 
    id_fifo_read_d1_i_1
       (.I0(ids_avail),
        .I1(id_fifo_read_d1_reg),
        .I2(first_word_seen),
        .I3(fsm_cs[2]),
        .I4(fsm_cs[1]),
        .I5(fsm_cs[0]),
        .O(id_fifo_read));
  LUT6 #(
    .INIT(64'hBFFFFFFF000000FF)) 
    not_full_1_i_1__0
       (.I0(\add_1_reg_n_0_[0] ),
        .I1(\add_1_reg_n_0_[1] ),
        .I2(\add_1_reg_n_0_[2] ),
        .I3(\add_1[3]_i_2_n_0 ),
        .I4(id_fifo_write),
        .I5(id_fifo_not_full),
        .O(not_full_1_i_1__0_n_0));
  (* register_duplication = "no" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    not_full_1_reg
       (.C(clk),
        .CE(1'b1),
        .D(not_full_1_i_1__0_n_0),
        .Q(id_fifo_not_full),
        .S(SS));
  LUT6 #(
    .INIT(64'h8C8C8C8C8CFF8C8C)) 
    one_word_bs_detected_i_1
       (.I0(one_word_bs_detected_i_2_n_0),
        .I1(one_word_bs_detected_reg_1),
        .I2(id_fifo_read_d2),
        .I3(one_word_bs_detected_i_3_n_0),
        .I4(one_word_bs_detected_reg_0),
        .I5(aempty),
        .O(one_word_bs_detected_reg));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT5 #(
    .INIT(32'hFFFFAAEA)) 
    one_word_bs_detected_i_2
       (.I0(bad_config_error_i),
        .I1(\add_1_reg[3]_0 ),
        .I2(id_fifo_write),
        .I3(first_word_seen),
        .I4(one_word_bs_detected_reg_0),
        .O(one_word_bs_detected_i_2_n_0));
  LUT6 #(
    .INIT(64'hF7F7F700FFFFFFFF)) 
    one_word_bs_detected_i_3
       (.I0(fsm_cs[0]),
        .I1(fsm_cs[1]),
        .I2(fsm_cs[2]),
        .I3(first_word_seen),
        .I4(id_fifo_read_d1_reg),
        .I5(ids_avail),
        .O(one_word_bs_detected_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT1 #(
    .INIT(2'h1)) 
    rd_avail_2_i_1__1
       (.I0(\add_1_reg[3]_0 ),
        .O(GLB_if));
  (* use_clock_enable = "no" *) 
  (* use_sync_set = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    rd_avail_2_reg
       (.C(clk),
        .CE(1'b1),
        .D(GLB_if),
        .Q(ids_avail),
        .R(SS));
  LUT6 #(
    .INIT(64'hB8B8B8FFB8B8B800)) 
    \rm_id_o[0]_i_1__0 
       (.I0(\fifo_2_reg_n_0_[1] ),
        .I1(\rm_id_o[0]_i_2_n_0 ),
        .I2(Q),
        .I3(two_word_bs_detected_reg_0),
        .I4(two_word_bs_detected_i_2_n_0),
        .I5(D),
        .O(\fifo_2_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h1515FF3F)) 
    \rm_id_o[0]_i_2 
       (.I0(recheck_id_reg_source),
        .I1(\add_1_reg[3]_0 ),
        .I2(id_fifo_write),
        .I3(first_word_seen),
        .I4(one_word_bs_detected_reg_0),
        .O(\rm_id_o[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h8F888888)) 
    two_word_bs_detected_i_1
       (.I0(two_word_bs_detected_i_2_n_0),
        .I1(two_word_bs_detected_reg_0),
        .I2(id_fifo_almost_empty_d1),
        .I3(id_fifo_read_d1),
        .I4(one_word_bs_detected_reg_0),
        .O(two_word_bs_detected_reg));
  LUT3 #(
    .INIT(8'hF8)) 
    two_word_bs_detected_i_2
       (.I0(id_fifo_read_d2),
        .I1(one_word_bs_detected_reg_1),
        .I2(one_word_bs_detected_i_2_n_0),
        .O(two_word_bs_detected_i_2_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \v_dma_size[13]_i_2 
       (.I0(v_dma_size_reg[8]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\v_dma_size[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \v_dma_size[13]_i_3 
       (.I0(v_dma_size_reg[7]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\v_dma_size[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \v_dma_size[13]_i_5 
       (.I0(v_dma_size_reg[6]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\v_dma_size[13]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \v_dma_size[17]_i_2 
       (.I0(v_dma_size_reg[12]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\v_dma_size[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \v_dma_size[17]_i_3 
       (.I0(v_dma_size_reg[11]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\v_dma_size[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \v_dma_size[17]_i_4 
       (.I0(v_dma_size_reg[10]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\v_dma_size[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \v_dma_size[17]_i_5 
       (.I0(v_dma_size_reg[9]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\v_dma_size[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \v_dma_size[1]_i_3 
       (.I0(v_dma_size_reg[1]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\v_dma_size_reg[3] [1]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \v_dma_size[1]_i_5 
       (.I0(v_dma_size_reg[0]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\v_dma_size_reg[3] [0]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \v_dma_size[21]_i_4 
       (.I0(v_dma_size_reg[14]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\v_dma_size_reg[22] [1]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \v_dma_size[21]_i_5 
       (.I0(v_dma_size_reg[13]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\v_dma_size_reg[22] [0]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \v_dma_size[5]_i_5 
       (.I0(v_dma_size_reg[2]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\v_dma_size_reg[5] ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \v_dma_size[9]_i_2 
       (.I0(v_dma_size_reg[5]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\v_dma_size[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \v_dma_size[9]_i_3 
       (.I0(v_dma_size_reg[4]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\v_dma_size[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA2AAAAA)) 
    \v_dma_size[9]_i_5 
       (.I0(v_dma_size_reg[3]),
        .I1(id_fifo_not_full),
        .I2(rd_avail),
        .I3(fsm_cs[1]),
        .I4(fsm_cs[0]),
        .I5(fsm_cs[2]),
        .O(\v_dma_size[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \v_dma_size_reg[13]_i_1 
       (.CI(\v_dma_size_reg[9]_i_1_n_0 ),
        .CO({\v_dma_size_reg[13]_i_1_n_0 ,\v_dma_size_reg[13]_i_1_n_1 ,\v_dma_size_reg[13]_i_1_n_2 ,\v_dma_size_reg[13]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\v_dma_size_reg[16] ),
        .S({\v_dma_size[13]_i_2_n_0 ,\v_dma_size[13]_i_3_n_0 ,\v_dma_size_reg[16]_0 ,\v_dma_size[13]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \v_dma_size_reg[17]_i_1 
       (.CI(\v_dma_size_reg[13]_i_1_n_0 ),
        .CO({\v_dma_size_reg[20] ,\v_dma_size_reg[17]_i_1_n_1 ,\v_dma_size_reg[17]_i_1_n_2 ,\v_dma_size_reg[17]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\v_dma_size_reg[20]_0 ),
        .S({\v_dma_size[17]_i_2_n_0 ,\v_dma_size[17]_i_3_n_0 ,\v_dma_size[17]_i_4_n_0 ,\v_dma_size[17]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \v_dma_size_reg[9]_i_1 
       (.CI(CO),
        .CO({\v_dma_size_reg[9]_i_1_n_0 ,\v_dma_size_reg[9]_i_1_n_1 ,\v_dma_size_reg[9]_i_1_n_2 ,\v_dma_size_reg[9]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(O),
        .S({\v_dma_size[9]_i_2_n_0 ,\v_dma_size[9]_i_3_n_0 ,S,\v_dma_size[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "glb_srl_fifo" *) 
module dfx_controller_setup_dfx_controller_0_0_glb_srl_fifo__parameterized5
   (cmd_avail,
    cmd_fifo_not_full,
    cmd_fifo_write,
    DI,
    \FSM_sequential_b_fsm.fsm_cs_reg[1] ,
    upper_segment_is_zero,
    O,
    \FSM_sequential_b_fsm.fsm_cs_reg[0] ,
    \FSM_sequential_b_fsm.fsm_cs_reg[0]_0 ,
    \v_dma_size_reg[2] ,
    \FSM_sequential_b_fsm.fsm_cs_reg[1]_0 ,
    Q,
    SS,
    clk,
    E,
    s_axis_mm2s_cmd_tready,
    fsm_cs,
    v_dma_size_reg,
    upper_segment,
    id_fifo_write,
    CO,
    S,
    in);
  output cmd_avail;
  output cmd_fifo_not_full;
  output cmd_fifo_write;
  output [0:0]DI;
  output \FSM_sequential_b_fsm.fsm_cs_reg[1] ;
  output upper_segment_is_zero;
  output [3:0]O;
  output [3:0]\FSM_sequential_b_fsm.fsm_cs_reg[0] ;
  output [2:0]\FSM_sequential_b_fsm.fsm_cs_reg[0]_0 ;
  output [0:0]\v_dma_size_reg[2] ;
  output [1:0]\FSM_sequential_b_fsm.fsm_cs_reg[1]_0 ;
  output [55:0]Q;
  input [0:0]SS;
  input clk;
  input [0:0]E;
  input s_axis_mm2s_cmd_tready;
  input [2:0]fsm_cs;
  input [30:0]v_dma_size_reg;
  input [8:0]upper_segment;
  input id_fifo_write;
  input [0:0]CO;
  input [1:0]S;
  input [30:0]in;

  wire [0:0]CO;
  wire [0:0]DI;
  wire [0:0]E;
  wire [3:0]\FSM_sequential_b_fsm.fsm_cs_reg[0] ;
  wire [2:0]\FSM_sequential_b_fsm.fsm_cs_reg[0]_0 ;
  wire \FSM_sequential_b_fsm.fsm_cs_reg[1] ;
  wire [1:0]\FSM_sequential_b_fsm.fsm_cs_reg[1]_0 ;
  wire GLB_if;
  wire [3:0]O;
  wire [55:0]Q;
  wire [1:0]S;
  wire [0:0]SS;
  wire \add_1[0]_i_1__2_n_0 ;
  wire \add_1[1]_i_1__2_n_0 ;
  wire \add_1[2]_i_1__1_n_0 ;
  wire \add_1[3]_i_1_n_0 ;
  wire \add_1[4]_i_1_n_0 ;
  wire \add_1[4]_i_2_n_0 ;
  wire \add_1_reg_n_0_[0] ;
  wire \add_1_reg_n_0_[1] ;
  wire \add_1_reg_n_0_[2] ;
  wire \add_1_reg_n_0_[3] ;
  wire \add_1_reg_n_0_[4] ;
  wire clk;
  wire cmd_avail;
  wire cmd_fifo_not_full;
  wire cmd_fifo_write;
  wire \fifo_1_reg[15][0]_srl16_n_0 ;
  wire \fifo_1_reg[15][10]_srl16_n_0 ;
  wire \fifo_1_reg[15][11]_srl16_n_0 ;
  wire \fifo_1_reg[15][12]_srl16_n_0 ;
  wire \fifo_1_reg[15][13]_srl16_n_0 ;
  wire \fifo_1_reg[15][14]_srl16_n_0 ;
  wire \fifo_1_reg[15][15]_srl16_n_0 ;
  wire \fifo_1_reg[15][16]_srl16_n_0 ;
  wire \fifo_1_reg[15][17]_srl16_n_0 ;
  wire \fifo_1_reg[15][18]_srl16_n_0 ;
  wire \fifo_1_reg[15][19]_srl16_n_0 ;
  wire \fifo_1_reg[15][1]_srl16_n_0 ;
  wire \fifo_1_reg[15][20]_srl16_n_0 ;
  wire \fifo_1_reg[15][21]_srl16_n_0 ;
  wire \fifo_1_reg[15][22]_srl16_n_0 ;
  wire \fifo_1_reg[15][23]_srl16_i_2_n_0 ;
  wire \fifo_1_reg[15][23]_srl16_n_0 ;
  wire \fifo_1_reg[15][24]_srl16_n_0 ;
  wire \fifo_1_reg[15][25]_srl16_n_0 ;
  wire \fifo_1_reg[15][26]_srl16_n_0 ;
  wire \fifo_1_reg[15][27]_srl16_n_0 ;
  wire \fifo_1_reg[15][28]_srl16_n_0 ;
  wire \fifo_1_reg[15][29]_srl16_n_0 ;
  wire \fifo_1_reg[15][2]_srl16_n_0 ;
  wire \fifo_1_reg[15][30]_srl16_n_0 ;
  wire \fifo_1_reg[15][31]_srl16_n_0 ;
  wire \fifo_1_reg[15][32]_srl16_n_0 ;
  wire \fifo_1_reg[15][33]_srl16_n_0 ;
  wire \fifo_1_reg[15][34]_srl16_n_0 ;
  wire \fifo_1_reg[15][35]_srl16_n_0 ;
  wire \fifo_1_reg[15][36]_srl16_n_0 ;
  wire \fifo_1_reg[15][37]_srl16_n_0 ;
  wire \fifo_1_reg[15][38]_srl16_n_0 ;
  wire \fifo_1_reg[15][39]_srl16_n_0 ;
  wire \fifo_1_reg[15][3]_srl16_n_0 ;
  wire \fifo_1_reg[15][40]_srl16_n_0 ;
  wire \fifo_1_reg[15][41]_srl16_n_0 ;
  wire \fifo_1_reg[15][42]_srl16_n_0 ;
  wire \fifo_1_reg[15][43]_srl16_n_0 ;
  wire \fifo_1_reg[15][44]_srl16_n_0 ;
  wire \fifo_1_reg[15][45]_srl16_n_0 ;
  wire \fifo_1_reg[15][46]_srl16_n_0 ;
  wire \fifo_1_reg[15][47]_srl16_n_0 ;
  wire \fifo_1_reg[15][48]_srl16_n_0 ;
  wire \fifo_1_reg[15][49]_srl16_n_0 ;
  wire \fifo_1_reg[15][4]_srl16_n_0 ;
  wire \fifo_1_reg[15][50]_srl16_n_0 ;
  wire \fifo_1_reg[15][51]_srl16_n_0 ;
  wire \fifo_1_reg[15][52]_srl16_n_0 ;
  wire \fifo_1_reg[15][53]_srl16_n_0 ;
  wire \fifo_1_reg[15][54]_srl16_n_0 ;
  wire \fifo_1_reg[15][55]_srl16_n_0 ;
  wire \fifo_1_reg[15][5]_srl16_n_0 ;
  wire \fifo_1_reg[15][6]_srl16_n_0 ;
  wire \fifo_1_reg[15][7]_srl16_n_0 ;
  wire \fifo_1_reg[15][8]_srl16_n_0 ;
  wire \fifo_1_reg[15][9]_srl16_n_0 ;
  wire [2:0]fsm_cs;
  wire id_fifo_write;
  wire [30:0]in;
  wire not_full_1_i_1__1_n_0;
  wire not_full_1_i_2_n_0;
  wire not_full_1_i_3_n_0;
  wire s_axis_mm2s_cmd_tready;
  wire [8:0]upper_segment;
  wire upper_segment_is_zero;
  wire \v_dma_size[21]_i_2_n_0 ;
  wire \v_dma_size[21]_i_3_n_0 ;
  wire \v_dma_size[25]_i_2_n_0 ;
  wire \v_dma_size[25]_i_3_n_0 ;
  wire \v_dma_size[25]_i_4_n_0 ;
  wire \v_dma_size[25]_i_5_n_0 ;
  wire \v_dma_size[29]_i_2_n_0 ;
  wire \v_dma_size[29]_i_3_n_0 ;
  wire \v_dma_size[29]_i_4_n_0 ;
  wire [30:0]v_dma_size_reg;
  wire \v_dma_size_reg[21]_i_1_n_0 ;
  wire \v_dma_size_reg[21]_i_1_n_1 ;
  wire \v_dma_size_reg[21]_i_1_n_2 ;
  wire \v_dma_size_reg[21]_i_1_n_3 ;
  wire \v_dma_size_reg[25]_i_1_n_0 ;
  wire \v_dma_size_reg[25]_i_1_n_1 ;
  wire \v_dma_size_reg[25]_i_1_n_2 ;
  wire \v_dma_size_reg[25]_i_1_n_3 ;
  wire \v_dma_size_reg[29]_i_1_n_2 ;
  wire \v_dma_size_reg[29]_i_1_n_3 ;
  wire [0:0]\v_dma_size_reg[2] ;
  wire [22:1]vector_out;
  wire [3:2]\NLW_v_dma_size_reg[29]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_v_dma_size_reg[29]_i_1_O_UNCONNECTED ;

  LUT3 #(
    .INIT(8'hDF)) 
    \FSM_sequential_b_fsm.fsm_cs[2]_i_6 
       (.I0(fsm_cs[1]),
        .I1(fsm_cs[2]),
        .I2(cmd_fifo_not_full),
        .O(\FSM_sequential_b_fsm.fsm_cs_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT5 #(
    .INIT(32'h5595AA6A)) 
    \add_1[0]_i_1__2 
       (.I0(\add_1_reg_n_0_[0] ),
        .I1(cmd_avail),
        .I2(s_axis_mm2s_cmd_tready),
        .I3(\add_1_reg_n_0_[4] ),
        .I4(cmd_fifo_write),
        .O(\add_1[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h6A6A6A6AA96A6A6A)) 
    \add_1[1]_i_1__2 
       (.I0(\add_1_reg_n_0_[1] ),
        .I1(\add_1_reg_n_0_[0] ),
        .I2(cmd_fifo_write),
        .I3(cmd_avail),
        .I4(s_axis_mm2s_cmd_tready),
        .I5(\add_1_reg_n_0_[4] ),
        .O(\add_1[1]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h4FFFB000FFFB0004)) 
    \add_1[2]_i_1__1 
       (.I0(\add_1_reg_n_0_[4] ),
        .I1(E),
        .I2(cmd_fifo_write),
        .I3(\add_1_reg_n_0_[0] ),
        .I4(\add_1_reg_n_0_[2] ),
        .I5(\add_1_reg_n_0_[1] ),
        .O(\add_1[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT4 #(
    .INIT(16'h6AA9)) 
    \add_1[3]_i_1 
       (.I0(\add_1_reg_n_0_[3] ),
        .I1(\add_1[4]_i_2_n_0 ),
        .I2(\add_1_reg_n_0_[2] ),
        .I3(\add_1_reg_n_0_[1] ),
        .O(\add_1[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT5 #(
    .INIT(32'h6AAAAAA9)) 
    \add_1[4]_i_1 
       (.I0(\add_1_reg_n_0_[4] ),
        .I1(\add_1_reg_n_0_[3] ),
        .I2(\add_1[4]_i_2_n_0 ),
        .I3(\add_1_reg_n_0_[1] ),
        .I4(\add_1_reg_n_0_[2] ),
        .O(\add_1[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88880888FFFFEFFF)) 
    \add_1[4]_i_2 
       (.I0(\add_1_reg_n_0_[0] ),
        .I1(cmd_fifo_write),
        .I2(cmd_avail),
        .I3(s_axis_mm2s_cmd_tready),
        .I4(\add_1_reg_n_0_[4] ),
        .I5(\add_1_reg_n_0_[1] ),
        .O(\add_1[4]_i_2_n_0 ));
  (* register_duplication = "no" *) 
  (* use_carry_chain = "yes" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    \add_1_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\add_1[0]_i_1__2_n_0 ),
        .Q(\add_1_reg_n_0_[0] ),
        .S(SS));
  (* register_duplication = "no" *) 
  (* use_carry_chain = "yes" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    \add_1_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\add_1[1]_i_1__2_n_0 ),
        .Q(\add_1_reg_n_0_[1] ),
        .S(SS));
  (* register_duplication = "no" *) 
  (* use_carry_chain = "yes" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    \add_1_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\add_1[2]_i_1__1_n_0 ),
        .Q(\add_1_reg_n_0_[2] ),
        .S(SS));
  (* register_duplication = "no" *) 
  (* use_carry_chain = "yes" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    \add_1_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\add_1[3]_i_1_n_0 ),
        .Q(\add_1_reg_n_0_[3] ),
        .S(SS));
  (* register_duplication = "no" *) 
  (* use_carry_chain = "yes" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    \add_1_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\add_1[4]_i_1_n_0 ),
        .Q(\add_1_reg_n_0_[4] ),
        .S(SS));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][0]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][0]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(1'b0),
        .Q(\fifo_1_reg[15][0]_srl16_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \fifo_1_reg[15][0]_srl16_i_1 
       (.I0(fsm_cs[0]),
        .I1(cmd_fifo_not_full),
        .I2(fsm_cs[2]),
        .I3(fsm_cs[1]),
        .O(cmd_fifo_write));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][10]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][10]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[10]),
        .Q(\fifo_1_reg[15][10]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][10]_srl16_i_1 
       (.I0(v_dma_size_reg[9]),
        .I1(upper_segment_is_zero),
        .O(vector_out[10]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][11]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][11]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[11]),
        .Q(\fifo_1_reg[15][11]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][11]_srl16_i_1 
       (.I0(v_dma_size_reg[10]),
        .I1(upper_segment_is_zero),
        .O(vector_out[11]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][12]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][12]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[12]),
        .Q(\fifo_1_reg[15][12]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][12]_srl16_i_1 
       (.I0(v_dma_size_reg[11]),
        .I1(upper_segment_is_zero),
        .O(vector_out[12]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][13]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][13]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[13]),
        .Q(\fifo_1_reg[15][13]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][13]_srl16_i_1 
       (.I0(v_dma_size_reg[12]),
        .I1(upper_segment_is_zero),
        .O(vector_out[13]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][14]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][14]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[14]),
        .Q(\fifo_1_reg[15][14]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][14]_srl16_i_1 
       (.I0(v_dma_size_reg[13]),
        .I1(upper_segment_is_zero),
        .O(vector_out[14]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][15]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][15]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[15]),
        .Q(\fifo_1_reg[15][15]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][15]_srl16_i_1 
       (.I0(v_dma_size_reg[14]),
        .I1(upper_segment_is_zero),
        .O(vector_out[15]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][16]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][16]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[16]),
        .Q(\fifo_1_reg[15][16]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][16]_srl16_i_1 
       (.I0(v_dma_size_reg[15]),
        .I1(upper_segment_is_zero),
        .O(vector_out[16]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][17]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][17]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[17]),
        .Q(\fifo_1_reg[15][17]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][17]_srl16_i_1 
       (.I0(v_dma_size_reg[16]),
        .I1(upper_segment_is_zero),
        .O(vector_out[17]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][18]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][18]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[18]),
        .Q(\fifo_1_reg[15][18]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][18]_srl16_i_1 
       (.I0(v_dma_size_reg[17]),
        .I1(upper_segment_is_zero),
        .O(vector_out[18]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][19]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][19]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[19]),
        .Q(\fifo_1_reg[15][19]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][19]_srl16_i_1 
       (.I0(v_dma_size_reg[18]),
        .I1(upper_segment_is_zero),
        .O(vector_out[19]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][1]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][1]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[1]),
        .Q(\fifo_1_reg[15][1]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \fifo_1_reg[15][1]_srl16_i_1 
       (.I0(v_dma_size_reg[0]),
        .I1(upper_segment_is_zero),
        .O(vector_out[1]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][20]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][20]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[20]),
        .Q(\fifo_1_reg[15][20]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][20]_srl16_i_1 
       (.I0(v_dma_size_reg[19]),
        .I1(upper_segment_is_zero),
        .O(vector_out[20]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][21]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][21]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[21]),
        .Q(\fifo_1_reg[15][21]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][21]_srl16_i_1 
       (.I0(v_dma_size_reg[20]),
        .I1(upper_segment_is_zero),
        .O(vector_out[21]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][22]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][22]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[22]),
        .Q(\fifo_1_reg[15][22]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][22]_srl16_i_1 
       (.I0(v_dma_size_reg[21]),
        .I1(upper_segment_is_zero),
        .O(vector_out[22]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][23]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][23]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(upper_segment_is_zero),
        .Q(\fifo_1_reg[15][23]_srl16_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \fifo_1_reg[15][23]_srl16_i_1 
       (.I0(upper_segment[5]),
        .I1(upper_segment[8]),
        .I2(upper_segment[1]),
        .I3(\fifo_1_reg[15][23]_srl16_i_2_n_0 ),
        .O(upper_segment_is_zero));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \fifo_1_reg[15][23]_srl16_i_2 
       (.I0(upper_segment[6]),
        .I1(upper_segment[2]),
        .I2(upper_segment[0]),
        .I3(upper_segment[7]),
        .I4(upper_segment[3]),
        .I5(upper_segment[4]),
        .O(\fifo_1_reg[15][23]_srl16_i_2_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][24]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][24]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(1'b0),
        .Q(\fifo_1_reg[15][24]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][25]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][25]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[0]),
        .Q(\fifo_1_reg[15][25]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][26]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][26]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[1]),
        .Q(\fifo_1_reg[15][26]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][27]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][27]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[2]),
        .Q(\fifo_1_reg[15][27]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][28]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][28]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[3]),
        .Q(\fifo_1_reg[15][28]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][29]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][29]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[4]),
        .Q(\fifo_1_reg[15][29]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][2]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][2]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[2]),
        .Q(\fifo_1_reg[15][2]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][2]_srl16_i_1 
       (.I0(v_dma_size_reg[1]),
        .I1(upper_segment_is_zero),
        .O(vector_out[2]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][30]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][30]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[5]),
        .Q(\fifo_1_reg[15][30]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][31]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][31]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[6]),
        .Q(\fifo_1_reg[15][31]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][32]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][32]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[7]),
        .Q(\fifo_1_reg[15][32]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][33]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][33]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[8]),
        .Q(\fifo_1_reg[15][33]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][34]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][34]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[9]),
        .Q(\fifo_1_reg[15][34]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][35]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][35]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[10]),
        .Q(\fifo_1_reg[15][35]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][36]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][36]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[11]),
        .Q(\fifo_1_reg[15][36]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][37]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][37]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[12]),
        .Q(\fifo_1_reg[15][37]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][38]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][38]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[13]),
        .Q(\fifo_1_reg[15][38]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][39]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][39]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[14]),
        .Q(\fifo_1_reg[15][39]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][3]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][3]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[3]),
        .Q(\fifo_1_reg[15][3]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][3]_srl16_i_1 
       (.I0(v_dma_size_reg[2]),
        .I1(upper_segment_is_zero),
        .O(vector_out[3]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][40]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][40]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[15]),
        .Q(\fifo_1_reg[15][40]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][41]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][41]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[16]),
        .Q(\fifo_1_reg[15][41]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][42]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][42]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[17]),
        .Q(\fifo_1_reg[15][42]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][43]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][43]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[18]),
        .Q(\fifo_1_reg[15][43]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][44]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][44]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[19]),
        .Q(\fifo_1_reg[15][44]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][45]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][45]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[20]),
        .Q(\fifo_1_reg[15][45]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][46]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][46]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[21]),
        .Q(\fifo_1_reg[15][46]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][47]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][47]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[22]),
        .Q(\fifo_1_reg[15][47]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][48]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][48]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[23]),
        .Q(\fifo_1_reg[15][48]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][49]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][49]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[24]),
        .Q(\fifo_1_reg[15][49]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][4]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][4]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[4]),
        .Q(\fifo_1_reg[15][4]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][4]_srl16_i_1 
       (.I0(v_dma_size_reg[3]),
        .I1(upper_segment_is_zero),
        .O(vector_out[4]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][50]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][50]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[25]),
        .Q(\fifo_1_reg[15][50]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][51]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][51]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[26]),
        .Q(\fifo_1_reg[15][51]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][52]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][52]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[27]),
        .Q(\fifo_1_reg[15][52]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][53]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][53]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[28]),
        .Q(\fifo_1_reg[15][53]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][54]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][54]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[29]),
        .Q(\fifo_1_reg[15][54]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][55]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][55]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(in[30]),
        .Q(\fifo_1_reg[15][55]_srl16_n_0 ));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][5]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][5]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[5]),
        .Q(\fifo_1_reg[15][5]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][5]_srl16_i_1 
       (.I0(v_dma_size_reg[4]),
        .I1(upper_segment_is_zero),
        .O(vector_out[5]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][6]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][6]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[6]),
        .Q(\fifo_1_reg[15][6]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][6]_srl16_i_1 
       (.I0(v_dma_size_reg[5]),
        .I1(upper_segment_is_zero),
        .O(vector_out[6]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][7]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][7]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[7]),
        .Q(\fifo_1_reg[15][7]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][7]_srl16_i_1 
       (.I0(v_dma_size_reg[6]),
        .I1(upper_segment_is_zero),
        .O(vector_out[7]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][8]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][8]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[8]),
        .Q(\fifo_1_reg[15][8]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][8]_srl16_i_1 
       (.I0(v_dma_size_reg[7]),
        .I1(upper_segment_is_zero),
        .O(vector_out[8]));
  (* srl_bus_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15] " *) 
  (* srl_name = "U0/\i_fetch0/i_cmd_fifo/fifo_1_reg[15][9]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \fifo_1_reg[15][9]_srl16 
       (.A0(\add_1_reg_n_0_[0] ),
        .A1(\add_1_reg_n_0_[1] ),
        .A2(\add_1_reg_n_0_[2] ),
        .A3(\add_1_reg_n_0_[3] ),
        .CE(cmd_fifo_write),
        .CLK(clk),
        .D(vector_out[9]),
        .Q(\fifo_1_reg[15][9]_srl16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_1_reg[15][9]_srl16_i_1 
       (.I0(v_dma_size_reg[8]),
        .I1(upper_segment_is_zero),
        .O(vector_out[9]));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][0]_srl16_n_0 ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][10]_srl16_n_0 ),
        .Q(Q[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][11]_srl16_n_0 ),
        .Q(Q[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][12]_srl16_n_0 ),
        .Q(Q[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][13]_srl16_n_0 ),
        .Q(Q[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][14]_srl16_n_0 ),
        .Q(Q[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][15]_srl16_n_0 ),
        .Q(Q[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][16]_srl16_n_0 ),
        .Q(Q[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][17]_srl16_n_0 ),
        .Q(Q[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][18]_srl16_n_0 ),
        .Q(Q[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][19]_srl16_n_0 ),
        .Q(Q[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][1]_srl16_n_0 ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][20]_srl16_n_0 ),
        .Q(Q[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][21]_srl16_n_0 ),
        .Q(Q[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][22]_srl16_n_0 ),
        .Q(Q[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][23]_srl16_n_0 ),
        .Q(Q[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][24]_srl16_n_0 ),
        .Q(Q[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][25]_srl16_n_0 ),
        .Q(Q[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][26]_srl16_n_0 ),
        .Q(Q[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][27]_srl16_n_0 ),
        .Q(Q[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][28]_srl16_n_0 ),
        .Q(Q[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][29]_srl16_n_0 ),
        .Q(Q[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][2]_srl16_n_0 ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][30]_srl16_n_0 ),
        .Q(Q[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][31]_srl16_n_0 ),
        .Q(Q[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[32] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][32]_srl16_n_0 ),
        .Q(Q[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[33] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][33]_srl16_n_0 ),
        .Q(Q[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[34] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][34]_srl16_n_0 ),
        .Q(Q[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[35] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][35]_srl16_n_0 ),
        .Q(Q[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[36] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][36]_srl16_n_0 ),
        .Q(Q[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[37] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][37]_srl16_n_0 ),
        .Q(Q[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[38] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][38]_srl16_n_0 ),
        .Q(Q[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[39] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][39]_srl16_n_0 ),
        .Q(Q[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][3]_srl16_n_0 ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[40] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][40]_srl16_n_0 ),
        .Q(Q[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[41] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][41]_srl16_n_0 ),
        .Q(Q[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[42] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][42]_srl16_n_0 ),
        .Q(Q[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[43] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][43]_srl16_n_0 ),
        .Q(Q[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[44] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][44]_srl16_n_0 ),
        .Q(Q[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[45] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][45]_srl16_n_0 ),
        .Q(Q[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[46] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][46]_srl16_n_0 ),
        .Q(Q[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[47] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][47]_srl16_n_0 ),
        .Q(Q[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[48] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][48]_srl16_n_0 ),
        .Q(Q[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[49] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][49]_srl16_n_0 ),
        .Q(Q[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][4]_srl16_n_0 ),
        .Q(Q[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[50] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][50]_srl16_n_0 ),
        .Q(Q[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[51] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][51]_srl16_n_0 ),
        .Q(Q[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[52] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][52]_srl16_n_0 ),
        .Q(Q[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[53] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][53]_srl16_n_0 ),
        .Q(Q[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[54] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][54]_srl16_n_0 ),
        .Q(Q[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[55] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][55]_srl16_n_0 ),
        .Q(Q[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][5]_srl16_n_0 ),
        .Q(Q[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][6]_srl16_n_0 ),
        .Q(Q[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][7]_srl16_n_0 ),
        .Q(Q[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][8]_srl16_n_0 ),
        .Q(Q[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fifo_2_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\fifo_1_reg[15][9]_srl16_n_0 ),
        .Q(Q[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFBFFF22222222)) 
    not_full_1_i_1__1
       (.I0(not_full_1_i_2_n_0),
        .I1(cmd_fifo_write),
        .I2(not_full_1_i_3_n_0),
        .I3(\add_1_reg_n_0_[3] ),
        .I4(\add_1_reg_n_0_[0] ),
        .I5(cmd_fifo_not_full),
        .O(not_full_1_i_1__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'h08)) 
    not_full_1_i_2
       (.I0(cmd_avail),
        .I1(s_axis_mm2s_cmd_tready),
        .I2(\add_1_reg_n_0_[4] ),
        .O(not_full_1_i_2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    not_full_1_i_3
       (.I0(\add_1_reg_n_0_[1] ),
        .I1(\add_1_reg_n_0_[2] ),
        .O(not_full_1_i_3_n_0));
  (* register_duplication = "no" *) 
  (* use_clock_enable = "no" *) 
  (* use_sync_reset = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    not_full_1_reg
       (.C(clk),
        .CE(1'b1),
        .D(not_full_1_i_1__1_n_0),
        .Q(cmd_fifo_not_full),
        .S(SS));
  LUT1 #(
    .INIT(2'h1)) 
    rd_avail_2_i_1__2
       (.I0(\add_1_reg_n_0_[4] ),
        .O(GLB_if));
  (* use_clock_enable = "no" *) 
  (* use_sync_set = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    rd_avail_2_reg
       (.C(clk),
        .CE(1'b1),
        .D(GLB_if),
        .Q(cmd_avail),
        .R(SS));
  LUT4 #(
    .INIT(16'hFFDF)) 
    v_dma_size0_carry__4_i_1
       (.I0(fsm_cs[1]),
        .I1(fsm_cs[2]),
        .I2(cmd_fifo_not_full),
        .I3(fsm_cs[0]),
        .O(DI));
  LUT5 #(
    .INIT(32'hFFDF0020)) 
    v_dma_size0_carry__4_i_2
       (.I0(fsm_cs[1]),
        .I1(fsm_cs[2]),
        .I2(cmd_fifo_not_full),
        .I3(fsm_cs[0]),
        .I4(v_dma_size_reg[23]),
        .O(\FSM_sequential_b_fsm.fsm_cs_reg[1]_0 [1]));
  LUT5 #(
    .INIT(32'hFFDF0020)) 
    v_dma_size0_carry__4_i_3
       (.I0(fsm_cs[1]),
        .I1(fsm_cs[2]),
        .I2(cmd_fifo_not_full),
        .I3(fsm_cs[0]),
        .I4(v_dma_size_reg[22]),
        .O(\FSM_sequential_b_fsm.fsm_cs_reg[1]_0 [0]));
  LUT5 #(
    .INIT(32'hAAAAA6AA)) 
    v_dma_size0_carry_i_1
       (.I0(v_dma_size_reg[1]),
        .I1(fsm_cs[1]),
        .I2(fsm_cs[2]),
        .I3(cmd_fifo_not_full),
        .I4(fsm_cs[0]),
        .O(\v_dma_size_reg[2] ));
  LUT6 #(
    .INIT(64'h0020FFDF00200020)) 
    \v_dma_size[21]_i_2 
       (.I0(fsm_cs[1]),
        .I1(fsm_cs[2]),
        .I2(cmd_fifo_not_full),
        .I3(fsm_cs[0]),
        .I4(id_fifo_write),
        .I5(v_dma_size_reg[23]),
        .O(\v_dma_size[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0020FFDF00200020)) 
    \v_dma_size[21]_i_3 
       (.I0(fsm_cs[1]),
        .I1(fsm_cs[2]),
        .I2(cmd_fifo_not_full),
        .I3(fsm_cs[0]),
        .I4(id_fifo_write),
        .I5(v_dma_size_reg[22]),
        .O(\v_dma_size[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0020FFDF00200020)) 
    \v_dma_size[25]_i_2 
       (.I0(fsm_cs[1]),
        .I1(fsm_cs[2]),
        .I2(cmd_fifo_not_full),
        .I3(fsm_cs[0]),
        .I4(id_fifo_write),
        .I5(v_dma_size_reg[27]),
        .O(\v_dma_size[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0020FFDF00200020)) 
    \v_dma_size[25]_i_3 
       (.I0(fsm_cs[1]),
        .I1(fsm_cs[2]),
        .I2(cmd_fifo_not_full),
        .I3(fsm_cs[0]),
        .I4(id_fifo_write),
        .I5(v_dma_size_reg[26]),
        .O(\v_dma_size[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0020FFDF00200020)) 
    \v_dma_size[25]_i_4 
       (.I0(fsm_cs[1]),
        .I1(fsm_cs[2]),
        .I2(cmd_fifo_not_full),
        .I3(fsm_cs[0]),
        .I4(id_fifo_write),
        .I5(v_dma_size_reg[25]),
        .O(\v_dma_size[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0020FFDF00200020)) 
    \v_dma_size[25]_i_5 
       (.I0(fsm_cs[1]),
        .I1(fsm_cs[2]),
        .I2(cmd_fifo_not_full),
        .I3(fsm_cs[0]),
        .I4(id_fifo_write),
        .I5(v_dma_size_reg[24]),
        .O(\v_dma_size[25]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0020FFDF00200020)) 
    \v_dma_size[29]_i_2 
       (.I0(fsm_cs[1]),
        .I1(fsm_cs[2]),
        .I2(cmd_fifo_not_full),
        .I3(fsm_cs[0]),
        .I4(id_fifo_write),
        .I5(v_dma_size_reg[30]),
        .O(\v_dma_size[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0020FFDF00200020)) 
    \v_dma_size[29]_i_3 
       (.I0(fsm_cs[1]),
        .I1(fsm_cs[2]),
        .I2(cmd_fifo_not_full),
        .I3(fsm_cs[0]),
        .I4(id_fifo_write),
        .I5(v_dma_size_reg[29]),
        .O(\v_dma_size[29]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0020FFDF00200020)) 
    \v_dma_size[29]_i_4 
       (.I0(fsm_cs[1]),
        .I1(fsm_cs[2]),
        .I2(cmd_fifo_not_full),
        .I3(fsm_cs[0]),
        .I4(id_fifo_write),
        .I5(v_dma_size_reg[28]),
        .O(\v_dma_size[29]_i_4_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \v_dma_size_reg[21]_i_1 
       (.CI(CO),
        .CO({\v_dma_size_reg[21]_i_1_n_0 ,\v_dma_size_reg[21]_i_1_n_1 ,\v_dma_size_reg[21]_i_1_n_2 ,\v_dma_size_reg[21]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({cmd_fifo_write,cmd_fifo_write,1'b0,1'b0}),
        .O(O),
        .S({\v_dma_size[21]_i_2_n_0 ,\v_dma_size[21]_i_3_n_0 ,S}));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \v_dma_size_reg[25]_i_1 
       (.CI(\v_dma_size_reg[21]_i_1_n_0 ),
        .CO({\v_dma_size_reg[25]_i_1_n_0 ,\v_dma_size_reg[25]_i_1_n_1 ,\v_dma_size_reg[25]_i_1_n_2 ,\v_dma_size_reg[25]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({cmd_fifo_write,cmd_fifo_write,cmd_fifo_write,cmd_fifo_write}),
        .O(\FSM_sequential_b_fsm.fsm_cs_reg[0] ),
        .S({\v_dma_size[25]_i_2_n_0 ,\v_dma_size[25]_i_3_n_0 ,\v_dma_size[25]_i_4_n_0 ,\v_dma_size[25]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \v_dma_size_reg[29]_i_1 
       (.CI(\v_dma_size_reg[25]_i_1_n_0 ),
        .CO({\NLW_v_dma_size_reg[29]_i_1_CO_UNCONNECTED [3:2],\v_dma_size_reg[29]_i_1_n_2 ,\v_dma_size_reg[29]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,cmd_fifo_write,cmd_fifo_write}),
        .O({\NLW_v_dma_size_reg[29]_i_1_O_UNCONNECTED [3],\FSM_sequential_b_fsm.fsm_cs_reg[0]_0 }),
        .S({1'b0,\v_dma_size[29]_i_2_n_0 ,\v_dma_size[29]_i_3_n_0 ,\v_dma_size[29]_i_4_n_0 }));
endmodule

(* ORIG_REF_NAME = "trigger_manager" *) 
module dfx_controller_setup_dfx_controller_0_0_trigger_manager
   (vsm_VS_0_rm_shutdown_ack_0,
    access_address,
    vsm_VS_0_rm_shutdown_ack_1,
    clk,
    SS,
    not_full_1_reg,
    vsm_VS_0_rm_shutdown_ack,
    Q,
    reset,
    \current_state_reg[2] ,
    \current_state_reg[2]_0 ,
    vsm_VS_0_hw_triggers);
  output vsm_VS_0_rm_shutdown_ack_0;
  output access_address;
  output vsm_VS_0_rm_shutdown_ack_1;
  input clk;
  input [0:0]SS;
  input not_full_1_reg;
  input vsm_VS_0_rm_shutdown_ack;
  input [3:0]Q;
  input reset;
  input \current_state_reg[2] ;
  input \current_state_reg[2]_0 ;
  input [1:0]vsm_VS_0_hw_triggers;

  wire [3:0]Q;
  wire [0:0]SS;
  wire a;
  wire access_address;
  wire all_triggers_zero;
  wire \b_trigger_id_to_one_hot.trigger_id_one_hot_reg_n_0_[0] ;
  wire \b_trigger_id_to_one_hot.trigger_id_one_hot_reg_n_0_[1] ;
  wire clk;
  wire [1:0]current_state;
  wire \current_state_reg[2] ;
  wire \current_state_reg[2]_0 ;
  wire fifo_not_full;
  wire fifo_write;
  wire [1:0]hw_triggers_prev;
  wire \hw_triggers_prev[0]_i_1_n_0 ;
  wire \hw_triggers_prev[1]_i_1_n_0 ;
  wire i_trigger_fifo_n_4;
  wire i_trigger_selector_n_6;
  wire i_trigger_selector_n_7;
  wire i_trigger_selector_n_8;
  wire not_full_1_reg;
  wire reset;
  wire trigger_id_i;
  wire trigger_id_one_hot_valid;
  wire trigger_id_one_hot_valid0;
  wire trigger_selector_valid_out;
  wire trigger_valid_prev;
  wire \triggers_req[0]_i_1_n_0 ;
  wire \triggers_req[1]_i_1_n_0 ;
  wire \triggers_req_reg_n_0_[0] ;
  wire \triggers_req_reg_n_0_[1] ;
  wire [1:0]vsm_VS_0_hw_triggers;
  wire vsm_VS_0_rm_shutdown_ack;
  wire vsm_VS_0_rm_shutdown_ack_0;
  wire vsm_VS_0_rm_shutdown_ack_1;

  (* FSM_ENCODED_STATES = "st_por:00,st_wait_for_selector_to_complete:10,st_remove_trigger:11,st_kick_selector:01" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_current_state_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(i_trigger_selector_n_8),
        .Q(current_state[0]),
        .R(SS));
  (* FSM_ENCODED_STATES = "st_por:00,st_wait_for_selector_to_complete:10,st_remove_trigger:11,st_kick_selector:01" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_current_state_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(i_trigger_selector_n_7),
        .Q(current_state[1]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \b_trigger_id_to_one_hot.trigger_id_one_hot_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(a),
        .Q(\b_trigger_id_to_one_hot.trigger_id_one_hot_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \b_trigger_id_to_one_hot.trigger_id_one_hot_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(trigger_id_i),
        .Q(\b_trigger_id_to_one_hot.trigger_id_one_hot_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \b_trigger_id_to_one_hot.trigger_id_one_hot_valid_reg 
       (.C(clk),
        .CE(1'b1),
        .D(trigger_id_one_hot_valid0),
        .Q(trigger_id_one_hot_valid),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \b_trigger_id_to_one_hot.trigger_valid_prev_reg 
       (.C(clk),
        .CE(1'b1),
        .D(i_trigger_selector_n_6),
        .Q(trigger_valid_prev),
        .R(SS));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hw_triggers_prev[0]_i_1 
       (.I0(vsm_VS_0_hw_triggers[0]),
        .I1(reset),
        .I2(hw_triggers_prev[0]),
        .O(\hw_triggers_prev[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hw_triggers_prev[1]_i_1 
       (.I0(vsm_VS_0_hw_triggers[1]),
        .I1(reset),
        .I2(hw_triggers_prev[1]),
        .O(\hw_triggers_prev[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hw_triggers_prev_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\hw_triggers_prev[0]_i_1_n_0 ),
        .Q(hw_triggers_prev[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \hw_triggers_prev_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\hw_triggers_prev[1]_i_1_n_0 ),
        .Q(hw_triggers_prev[1]),
        .R(1'b0));
  dfx_controller_setup_dfx_controller_0_0_glb_srl_fifo i_trigger_fifo
       (.CARRYS_OUT(all_triggers_zero),
        .D(trigger_id_i),
        .\FSM_sequential_current_state_reg[1] (i_trigger_fifo_n_4),
        .Q(Q),
        .SS(SS),
        .access_address(access_address),
        .clk(clk),
        .current_state(current_state),
        .\current_state_reg[2] (\current_state_reg[2] ),
        .\current_state_reg[2]_0 (\current_state_reg[2]_0 ),
        .fifo_not_full(fifo_not_full),
        .fifo_write(fifo_write),
        .not_full_1_reg_0(not_full_1_reg),
        .reset(reset),
        .trigger_selector_valid_out(trigger_selector_valid_out),
        .vsm_VS_0_rm_shutdown_ack(vsm_VS_0_rm_shutdown_ack),
        .vsm_VS_0_rm_shutdown_ack_0(vsm_VS_0_rm_shutdown_ack_0),
        .vsm_VS_0_rm_shutdown_ack_1(vsm_VS_0_rm_shutdown_ack_1));
  dfx_controller_setup_dfx_controller_0_0_trigger_select i_trigger_selector
       (.CARRY_OUT(all_triggers_zero),
        .\CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD (i_trigger_selector_n_6),
        .\CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_0 (i_trigger_selector_n_7),
        .\CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_1 (\triggers_req_reg_n_0_[1] ),
        .D({trigger_id_i,a}),
        .SS(SS),
        .clk(clk),
        .current_state(current_state),
        .\data_del_reg[0]_0 (\triggers_req_reg_n_0_[0] ),
        .fifo_not_full(fifo_not_full),
        .fifo_write(fifo_write),
        .\opt_has_pipe.first_q_reg[0] (i_trigger_selector_n_8),
        .\opt_has_pipe.first_q_reg[0]_0 (i_trigger_fifo_n_4),
        .trigger_id_one_hot_valid0(trigger_id_one_hot_valid0),
        .trigger_selector_valid_out(trigger_selector_valid_out),
        .trigger_valid_prev(trigger_valid_prev));
  LUT6 #(
    .INIT(64'h7777070000000000)) 
    \triggers_req[0]_i_1 
       (.I0(\b_trigger_id_to_one_hot.trigger_id_one_hot_reg_n_0_[0] ),
        .I1(trigger_id_one_hot_valid),
        .I2(hw_triggers_prev[0]),
        .I3(vsm_VS_0_hw_triggers[0]),
        .I4(\triggers_req_reg_n_0_[0] ),
        .I5(reset),
        .O(\triggers_req[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0FFF044400000000)) 
    \triggers_req[1]_i_1 
       (.I0(hw_triggers_prev[1]),
        .I1(vsm_VS_0_hw_triggers[1]),
        .I2(\b_trigger_id_to_one_hot.trigger_id_one_hot_reg_n_0_[1] ),
        .I3(trigger_id_one_hot_valid),
        .I4(\triggers_req_reg_n_0_[1] ),
        .I5(reset),
        .O(\triggers_req[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \triggers_req_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\triggers_req[0]_i_1_n_0 ),
        .Q(\triggers_req_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \triggers_req_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\triggers_req[1]_i_1_n_0 ),
        .Q(\triggers_req_reg_n_0_[1] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "trigger_select" *) 
module dfx_controller_setup_dfx_controller_0_0_trigger_select
   (trigger_selector_valid_out,
    D,
    fifo_write,
    CARRY_OUT,
    trigger_id_one_hot_valid0,
    \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD ,
    \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_0 ,
    \opt_has_pipe.first_q_reg[0] ,
    SS,
    \opt_has_pipe.first_q_reg[0]_0 ,
    clk,
    \data_del_reg[0]_0 ,
    trigger_valid_prev,
    \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_1 ,
    fifo_not_full,
    current_state);
  output trigger_selector_valid_out;
  output [1:0]D;
  output fifo_write;
  output CARRY_OUT;
  output trigger_id_one_hot_valid0;
  output \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD ;
  output \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_0 ;
  output \opt_has_pipe.first_q_reg[0] ;
  input [0:0]SS;
  input \opt_has_pipe.first_q_reg[0]_0 ;
  input clk;
  input \data_del_reg[0]_0 ;
  input trigger_valid_prev;
  input \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_1 ;
  input fifo_not_full;
  input [1:0]current_state;

  wire CARRY_OUT;
  wire \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD ;
  wire \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_0 ;
  wire \CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_1 ;
  wire [1:0]D;
  wire [0:0]SS;
  wire clk;
  wire [1:0]current_state;
  wire \data_del_reg[0]_0 ;
  wire fifo_not_full;
  wire fifo_write;
  wire \opt_has_pipe.first_q_reg[0] ;
  wire \opt_has_pipe.first_q_reg[0]_0 ;
  wire trigger_id_one_hot_valid0;
  wire trigger_selector_valid_out;
  wire trigger_valid_prev;

  dfx_controller_setup_dfx_controller_0_0_delay__parameterized9 VALID_DEL
       (.CARRY_OUT(CARRY_OUT),
        .SS(SS),
        .clk(clk),
        .current_state(current_state),
        .fifo_not_full(fifo_not_full),
        .fifo_write(fifo_write),
        .\opt_has_pipe.first_q_reg[0] (trigger_selector_valid_out),
        .\opt_has_pipe.first_q_reg[0]_0 (\opt_has_pipe.first_q_reg[0] ),
        .\opt_has_pipe.first_q_reg[0]_1 (\opt_has_pipe.first_q_reg[0]_0 ),
        .trigger_id_one_hot_valid0(trigger_id_one_hot_valid0),
        .trigger_valid_prev(trigger_valid_prev));
  dfx_controller_setup_dfx_controller_0_0_carry_chain ZERO_DET_CC_1
       (.CARRYS_OUT(CARRY_OUT),
        .\CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_0 (\CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD ),
        .\CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_1 (\CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_0 ),
        .\CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_2 (\data_del_reg[0]_0 ),
        .\CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_3 (\CHAIN_GEN[0].CARRYS_DEL.NEED_DEL.CARRYS_FD_1 ),
        .clk(clk),
        .current_state(current_state),
        .fifo_not_full(fifo_not_full),
        .trigger_selector_valid_out(trigger_selector_valid_out));
  FDRE \data_del_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\data_del_reg[0]_0 ),
        .Q(D[0]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \fifo_1_reg[3][0]_srl4_i_2 
       (.I0(D[0]),
        .O(D[1]));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized15
   (\opt_has_pipe.first_q_reg[0]_0 ,
    fifo_write,
    trigger_id_one_hot_valid0,
    \opt_has_pipe.first_q_reg[0]_1 ,
    SS,
    \opt_has_pipe.first_q_reg[0]_2 ,
    clk,
    CARRY_OUT,
    trigger_valid_prev,
    fifo_not_full,
    current_state);
  output \opt_has_pipe.first_q_reg[0]_0 ;
  output fifo_write;
  output trigger_id_one_hot_valid0;
  output \opt_has_pipe.first_q_reg[0]_1 ;
  input [0:0]SS;
  input \opt_has_pipe.first_q_reg[0]_2 ;
  input clk;
  input CARRY_OUT;
  input trigger_valid_prev;
  input fifo_not_full;
  input [1:0]current_state;

  wire CARRY_OUT;
  wire [0:0]SS;
  wire clk;
  wire [1:0]current_state;
  wire fifo_not_full;
  wire fifo_write;
  wire \opt_has_pipe.first_q_reg[0]_0 ;
  wire \opt_has_pipe.first_q_reg[0]_1 ;
  wire \opt_has_pipe.first_q_reg[0]_2 ;
  wire trigger_id_one_hot_valid0;
  wire trigger_valid_prev;

  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT4 #(
    .INIT(16'hF83F)) 
    \FSM_sequential_current_state[0]_i_1 
       (.I0(\opt_has_pipe.first_q_reg[0]_0 ),
        .I1(fifo_not_full),
        .I2(current_state[0]),
        .I3(current_state[1]),
        .O(\opt_has_pipe.first_q_reg[0]_1 ));
  LUT3 #(
    .INIT(8'h02)) 
    \b_trigger_id_to_one_hot.trigger_id_one_hot_valid_i_1 
       (.I0(\opt_has_pipe.first_q_reg[0]_0 ),
        .I1(CARRY_OUT),
        .I2(trigger_valid_prev),
        .O(trigger_id_one_hot_valid0));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_1_reg[3][0]_srl4_i_1 
       (.I0(\opt_has_pipe.first_q_reg[0]_0 ),
        .I1(CARRY_OUT),
        .O(fifo_write));
  (* KEEP = "false" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\opt_has_pipe.first_q_reg[0]_2 ),
        .Q(\opt_has_pipe.first_q_reg[0]_0 ),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized17
   (\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ,
    D,
    rm_reset_i4,
    \reset_duration_reg[6] ,
    E,
    \current_state_reg[0] ,
    SS,
    rm_info_valid_vec,
    clk,
    Q,
    \current_state_reg[1] ,
    \current_state_reg[0]_0 ,
    \current_state_reg[1]_0 ,
    \current_state_reg[3] ,
    reset,
    vsm_VS_0_rm_shutdown_ack,
    \reset_duration_reg[6]_0 ,
    \reset_duration_reg[6]_1 ,
    \reset_duration_reg[6]_2 ,
    \reset_duration_reg[6]_3 ,
    \current_state_reg[3]_0 ,
    \current_state_reg[2] ,
    \current_state_reg[3]_1 ,
    rm_reset_i_reg,
    vsm_VS_0_rm_reset);
  output \opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ;
  output [3:0]D;
  output rm_reset_i4;
  output [1:0]\reset_duration_reg[6] ;
  output [0:0]E;
  output \current_state_reg[0] ;
  input [0:0]SS;
  input rm_info_valid_vec;
  input clk;
  input [3:0]Q;
  input \current_state_reg[1] ;
  input \current_state_reg[0]_0 ;
  input \current_state_reg[1]_0 ;
  input \current_state_reg[3] ;
  input reset;
  input vsm_VS_0_rm_shutdown_ack;
  input [1:0]\reset_duration_reg[6]_0 ;
  input [3:0]\reset_duration_reg[6]_1 ;
  input \reset_duration_reg[6]_2 ;
  input \reset_duration_reg[6]_3 ;
  input \current_state_reg[3]_0 ;
  input \current_state_reg[2] ;
  input \current_state_reg[3]_1 ;
  input rm_reset_i_reg;
  input vsm_VS_0_rm_reset;

  wire [3:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire [0:0]SS;
  wire clk;
  wire \current_state[0]_i_2_n_0 ;
  wire \current_state[1]_i_4_n_0 ;
  wire \current_state[3]_i_3_n_0 ;
  wire \current_state_reg[0] ;
  wire \current_state_reg[0]_0 ;
  wire \current_state_reg[1] ;
  wire \current_state_reg[1]_0 ;
  wire \current_state_reg[2] ;
  wire \current_state_reg[3] ;
  wire \current_state_reg[3]_0 ;
  wire \current_state_reg[3]_1 ;
  (* RTL_KEEP = "true" *) wire first_q;
  wire \opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ;
  wire reset;
  wire \reset_duration[2]_i_2_n_0 ;
  wire \reset_duration[6]_i_2_n_0 ;
  wire [1:0]\reset_duration_reg[6] ;
  wire [1:0]\reset_duration_reg[6]_0 ;
  wire [3:0]\reset_duration_reg[6]_1 ;
  wire \reset_duration_reg[6]_2 ;
  wire \reset_duration_reg[6]_3 ;
  wire rm_info_valid_vec;
  wire rm_reset_i4;
  wire rm_reset_i_i_3_n_0;
  wire rm_reset_i_i_5_n_0;
  wire rm_reset_i_reg;
  wire vsm_VS_0_rm_reset;
  wire vsm_VS_0_rm_shutdown_ack;

  LUT6 #(
    .INIT(64'h0B3BFFFF0B3B0000)) 
    \current_state[0]_i_1 
       (.I0(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[3]),
        .I5(\current_state[0]_i_2_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFBF000000)) 
    \current_state[0]_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I3(Q[2]),
        .I4(\current_state_reg[1] ),
        .I5(\current_state_reg[0]_0 ),
        .O(\current_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF5D50000)) 
    \current_state[1]_i_1 
       (.I0(\current_state_reg[1] ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I4(\current_state_reg[1]_0 ),
        .I5(\current_state[1]_i_4_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h1100CC00003F0000)) 
    \current_state[1]_i_4 
       (.I0(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I1(Q[0]),
        .I2(vsm_VS_0_rm_shutdown_ack),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\current_state[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3C44FFFF3C440000)) 
    \current_state[2]_i_1 
       (.I0(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(\current_state_reg[2] ),
        .O(D[2]));
  LUT3 #(
    .INIT(8'hF8)) 
    \current_state[3]_i_1 
       (.I0(\current_state_reg[3]_0 ),
        .I1(\current_state_reg[3]_1 ),
        .I2(\current_state[3]_i_3_n_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h282802A22A2A02A2)) 
    \current_state[3]_i_3 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I4(Q[0]),
        .I5(\current_state_reg[3] ),
        .O(\current_state[3]_i_3_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(rm_info_valid_vec),
        .Q(first_q),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.i_pipe[2].pipe_reg[2][0] 
       (.C(clk),
        .CE(1'b1),
        .D(first_q),
        .Q(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .R(SS));
  LUT5 #(
    .INIT(32'h00080000)) 
    ready_for_hw_trigger_i_1
       (.I0(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(rm_reset_i4));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \reset_duration[2]_i_1 
       (.I0(\reset_duration_reg[6]_0 [0]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(\reset_duration[2]_i_2_n_0 ),
        .O(\reset_duration_reg[6] [0]));
  LUT5 #(
    .INIT(32'h000078E1)) 
    \reset_duration[2]_i_2 
       (.I0(\reset_duration_reg[6]_1 [1]),
        .I1(\reset_duration_reg[6]_1 [0]),
        .I2(\reset_duration_reg[6]_1 [2]),
        .I3(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I4(rm_info_valid_vec),
        .O(\reset_duration[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFF28)) 
    \reset_duration[6]_i_1 
       (.I0(E),
        .I1(\reset_duration_reg[6]_1 [3]),
        .I2(\reset_duration_reg[6]_2 ),
        .I3(\reset_duration[6]_i_2_n_0 ),
        .O(\reset_duration_reg[6] [1]));
  LUT6 #(
    .INIT(64'hAAAA0000AAAA003C)) 
    \reset_duration[6]_i_2 
       (.I0(\reset_duration_reg[6]_0 [1]),
        .I1(\reset_duration_reg[6]_1 [3]),
        .I2(\reset_duration_reg[6]_3 ),
        .I3(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I4(\current_state_reg[3]_0 ),
        .I5(rm_info_valid_vec),
        .O(\reset_duration[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAAAA8)) 
    \reset_duration_stored[7]_i_1 
       (.I0(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(rm_info_valid_vec),
        .O(E));
  LUT6 #(
    .INIT(64'hDFFFFFFFDFFF0000)) 
    rm_reset_i_i_1
       (.I0(rm_reset_i_reg),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(reset),
        .I4(rm_reset_i_i_3_n_0),
        .I5(vsm_VS_0_rm_reset),
        .O(\current_state_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00080000)) 
    rm_reset_i_i_3
       (.I0(Q[3]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\current_state_reg[3] ),
        .I5(rm_reset_i_i_5_n_0),
        .O(rm_reset_i_i_3_n_0));
  LUT6 #(
    .INIT(64'h2000FFFF2833FFFF)) 
    rm_reset_i_i_5
       (.I0(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(reset),
        .I5(Q[1]),
        .O(rm_reset_i_i_5_n_0));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized17_23
   (\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ,
    E,
    D,
    SS,
    rm_id_valid,
    clk,
    Q,
    bs_info_valid_vec,
    \reset_duration_reg[7] ,
    \reset_duration_reg[5] ,
    \reset_duration_reg[7]_0 ,
    \reset_duration_reg[5]_0 ,
    \reset_duration_reg[3] ,
    \reset_duration_reg[4] ,
    \reset_duration_reg[5]_1 ,
    \reset_duration_reg[7]_1 ,
    \reset_duration_reg[7]_2 );
  output \opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ;
  output [0:0]E;
  output [5:0]D;
  input [0:0]SS;
  input rm_id_valid;
  input clk;
  input [3:0]Q;
  input bs_info_valid_vec;
  input [5:0]\reset_duration_reg[7] ;
  input \reset_duration_reg[5] ;
  input [3:0]\reset_duration_reg[7]_0 ;
  input [2:0]\reset_duration_reg[5]_0 ;
  input \reset_duration_reg[3] ;
  input \reset_duration_reg[4] ;
  input \reset_duration_reg[5]_1 ;
  input \reset_duration_reg[7]_1 ;
  input \reset_duration_reg[7]_2 ;

  wire [5:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire [0:0]SS;
  wire bs_info_valid_vec;
  wire clk;
  (* RTL_KEEP = "true" *) wire first_q;
  wire \opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ;
  wire \reset_duration[7]_i_3_n_0 ;
  wire \reset_duration_reg[3] ;
  wire \reset_duration_reg[4] ;
  wire \reset_duration_reg[5] ;
  wire [2:0]\reset_duration_reg[5]_0 ;
  wire \reset_duration_reg[5]_1 ;
  wire [5:0]\reset_duration_reg[7] ;
  wire [3:0]\reset_duration_reg[7]_0 ;
  wire \reset_duration_reg[7]_1 ;
  wire \reset_duration_reg[7]_2 ;
  wire rm_id_valid;

  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(rm_id_valid),
        .Q(first_q),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.i_pipe[2].pipe_reg[2][0] 
       (.C(clk),
        .CE(1'b1),
        .D(first_q),
        .Q(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .R(SS));
  LUT4 #(
    .INIT(16'h888B)) 
    \reset_duration[0]_i_1 
       (.I0(\reset_duration_reg[7] [0]),
        .I1(\reset_duration_reg[5] ),
        .I2(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I3(\reset_duration_reg[7]_0 [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h888B8B888B88888B)) 
    \reset_duration[1]_i_1 
       (.I0(\reset_duration_reg[7] [1]),
        .I1(\reset_duration_reg[5] ),
        .I2(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I3(\reset_duration_reg[7]_0 [1]),
        .I4(\reset_duration_reg[7]_0 [0]),
        .I5(bs_info_valid_vec),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hF2F0F2F302000203)) 
    \reset_duration[3]_i_1 
       (.I0(\reset_duration_reg[5]_0 [0]),
        .I1(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I2(\reset_duration_reg[5] ),
        .I3(bs_info_valid_vec),
        .I4(\reset_duration_reg[3] ),
        .I5(\reset_duration_reg[7] [2]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hF2F0F2F302000203)) 
    \reset_duration[4]_i_1 
       (.I0(\reset_duration_reg[5]_0 [1]),
        .I1(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I2(\reset_duration_reg[5] ),
        .I3(bs_info_valid_vec),
        .I4(\reset_duration_reg[4] ),
        .I5(\reset_duration_reg[7] [3]),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hF2F0F2F302000203)) 
    \reset_duration[5]_i_1 
       (.I0(\reset_duration_reg[5]_0 [2]),
        .I1(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I2(\reset_duration_reg[5] ),
        .I3(bs_info_valid_vec),
        .I4(\reset_duration_reg[5]_1 ),
        .I5(\reset_duration_reg[7] [4]),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAEAAAF)) 
    \reset_duration[7]_i_1 
       (.I0(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(bs_info_valid_vec),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \reset_duration[7]_i_2 
       (.I0(\reset_duration_reg[7] [5]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(\reset_duration[7]_i_3_n_0 ),
        .O(D[5]));
  LUT6 #(
    .INIT(64'h0550510455005104)) 
    \reset_duration[7]_i_3 
       (.I0(\opt_has_pipe.i_pipe[2].pipe_reg[2][0]_0 ),
        .I1(\reset_duration_reg[7]_1 ),
        .I2(\reset_duration_reg[7]_0 [2]),
        .I3(\reset_duration_reg[7]_0 [3]),
        .I4(bs_info_valid_vec),
        .I5(\reset_duration_reg[7]_2 ),
        .O(\reset_duration[7]_i_3_n_0 ));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized3
   (vsm_VS_0_event_error,
    \current_state_reg[3] ,
    decompress_bad_size_error_flag_reg,
    \current_state_reg[2] ,
    SS,
    clk,
    \opt_has_pipe.first_q_reg[0]_0 ,
    cp_error_flag,
    cp0_vs_id,
    p_4_in,
    Q,
    SR,
    decompress_bad_format_error_flag,
    p_3_in,
    \opt_has_pipe.first_q_reg[0]_1 );
  output vsm_VS_0_event_error;
  output \current_state_reg[3] ;
  output decompress_bad_size_error_flag_reg;
  output \current_state_reg[2] ;
  input [0:0]SS;
  input clk;
  input \opt_has_pipe.first_q_reg[0]_0 ;
  input cp_error_flag;
  input cp0_vs_id;
  input p_4_in;
  input [3:0]Q;
  input [0:0]SR;
  input decompress_bad_format_error_flag;
  input p_3_in;
  input \opt_has_pipe.first_q_reg[0]_1 ;

  wire [3:0]Q;
  wire [0:0]SR;
  wire [0:0]SS;
  wire clk;
  wire cp0_vs_id;
  wire cp_error_flag;
  wire \current_state_reg[2] ;
  wire \current_state_reg[3] ;
  wire decompress_bad_format_error_flag;
  wire decompress_bad_size_error_flag_reg;
  wire event_error_i;
  (* RTL_KEEP = "true" *) wire first_q;
  wire \opt_has_pipe.first_q[0]_i_2_n_0 ;
  wire \opt_has_pipe.first_q_reg[0]_0 ;
  wire \opt_has_pipe.first_q_reg[0]_1 ;
  wire \opt_has_pipe.i_pipe[2].pipe_reg_n_0_[2][0] ;
  wire p_3_in;
  wire p_4_in;
  wire vsm_VS_0_event_error;

  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \current_state[1]_i_3 
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(\current_state_reg[2] ));
  LUT5 #(
    .INIT(32'hAAAA80AA)) 
    \opt_has_pipe.first_q[0]_i_1 
       (.I0(\opt_has_pipe.first_q[0]_i_2_n_0 ),
        .I1(\opt_has_pipe.first_q_reg[0]_0 ),
        .I2(\current_state_reg[3] ),
        .I3(decompress_bad_size_error_flag_reg),
        .I4(cp_error_flag),
        .O(event_error_i));
  LUT6 #(
    .INIT(64'h000000008A880000)) 
    \opt_has_pipe.first_q[0]_i_2 
       (.I0(\current_state_reg[2] ),
        .I1(\opt_has_pipe.first_q_reg[0]_0 ),
        .I2(cp0_vs_id),
        .I3(p_4_in),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(\opt_has_pipe.first_q[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \opt_has_pipe.first_q[0]_i_3 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\current_state_reg[3] ));
  LUT5 #(
    .INIT(32'h00001101)) 
    \opt_has_pipe.first_q[0]_i_4 
       (.I0(SR),
        .I1(decompress_bad_format_error_flag),
        .I2(p_3_in),
        .I3(cp0_vs_id),
        .I4(\opt_has_pipe.first_q_reg[0]_1 ),
        .O(decompress_bad_size_error_flag_reg));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(event_error_i),
        .Q(first_q),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.i_pipe[2].pipe_reg[2][0] 
       (.C(clk),
        .CE(1'b1),
        .D(first_q),
        .Q(\opt_has_pipe.i_pipe[2].pipe_reg_n_0_[2][0] ),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.i_pipe[3].pipe_reg[3][0] 
       (.C(clk),
        .CE(1'b1),
        .D(\opt_has_pipe.i_pipe[2].pipe_reg_n_0_[2][0] ),
        .Q(vsm_VS_0_event_error),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;
  (* RTL_KEEP = "true" *) wire first_q;

  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(first_q),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_14
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;
  (* RTL_KEEP = "true" *) wire first_q;

  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(first_q),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_15
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;
  (* RTL_KEEP = "true" *) wire first_q;

  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(first_q),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_16
   (out,
    SS,
    clk,
    Q);
  output out;
  input [0:0]SS;
  input clk;
  input [3:0]Q;

  wire [3:0]Q;
  wire [0:0]SS;
  wire clk;
  (* RTL_KEEP = "true" *) wire first_q;
  wire start_fetching_all_except_rm_id;

  assign out = first_q;
  LUT4 #(
    .INIT(16'h0880)) 
    \opt_has_pipe.first_q[0]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[1]),
        .O(start_fetching_all_except_rm_id));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(start_fetching_all_except_rm_id),
        .Q(first_q),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_17
   (out,
    SS,
    clk,
    Q);
  output out;
  input [0:0]SS;
  input clk;
  input [3:0]Q;

  wire [3:0]Q;
  wire [0:0]SS;
  wire clk;
  (* RTL_KEEP = "true" *) wire first_q;
  wire start_fetching_all;

  assign out = first_q;
  LUT4 #(
    .INIT(16'h0004)) 
    \opt_has_pipe.first_q[0]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[0]),
        .O(start_fetching_all));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(start_fetching_all),
        .Q(first_q),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_18
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;
  (* RTL_KEEP = "true" *) wire first_q;

  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(first_q),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_19
   (SS,
    rm_id_valid,
    clk);
  input [0:0]SS;
  input rm_id_valid;
  input clk;

  wire [0:0]SS;
  wire clk;
  (* RTL_KEEP = "true" *) wire first_q;
  wire rm_id_valid;

  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(rm_id_valid),
        .Q(first_q),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_20
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;
  (* RTL_KEEP = "true" *) wire first_q;

  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(first_q),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_21
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;
  (* RTL_KEEP = "true" *) wire first_q;

  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(first_q),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_22
   (decompress_bad_size_error_flag_reg,
    \opt_has_pipe.first_q_reg[0]_0 ,
    decompress_bad_format_error_flag_reg,
    fetch_error_flag_reg,
    bad_config_error_i_reg,
    cp_error_flag_reg,
    SS,
    out,
    clk,
    SR,
    bad_size_error_int,
    decompress_bad_size_error_flag_reg_0,
    decompress_bad_size_error_flag_reg_1,
    decompress_bad_format_error_flag,
    fetch_error_flag_reg_0,
    Q,
    decompress0_bad_format_error,
    fetch_error_flag_reg_1,
    D,
    p_0_in,
    bad_config_error_flag_reg,
    cp_error_flag,
    cp0_vs_id,
    p_3_in,
    \opt_has_pipe.first_q_reg[0]_1 );
  output decompress_bad_size_error_flag_reg;
  output \opt_has_pipe.first_q_reg[0]_0 ;
  output decompress_bad_format_error_flag_reg;
  output fetch_error_flag_reg;
  output bad_config_error_i_reg;
  output cp_error_flag_reg;
  input [0:0]SS;
  input out;
  input clk;
  input [0:0]SR;
  input bad_size_error_int;
  input decompress_bad_size_error_flag_reg_0;
  input decompress_bad_size_error_flag_reg_1;
  input decompress_bad_format_error_flag;
  input fetch_error_flag_reg_0;
  input [3:0]Q;
  input decompress0_bad_format_error;
  input fetch_error_flag_reg_1;
  input [0:0]D;
  input p_0_in;
  input bad_config_error_flag_reg;
  input cp_error_flag;
  input cp0_vs_id;
  input p_3_in;
  input \opt_has_pipe.first_q_reg[0]_1 ;

  wire [0:0]D;
  wire [3:0]Q;
  wire [0:0]SR;
  wire [0:0]SS;
  wire bad_config_error_flag_reg;
  wire bad_config_error_i_reg;
  wire bad_size_error_int;
  wire clk;
  wire cp0_vs_id;
  wire cp_error_flag;
  wire cp_error_flag_reg;
  wire decompress0_bad_format_error;
  wire decompress_bad_format_error_flag;
  wire decompress_bad_format_error_flag_reg;
  wire decompress_bad_size_error_flag_reg;
  wire decompress_bad_size_error_flag_reg_0;
  wire decompress_bad_size_error_flag_reg_1;
  wire fetch_error_flag_reg;
  wire fetch_error_flag_reg_0;
  wire fetch_error_flag_reg_1;
  (* RTL_KEEP = "true" *) wire first_q;
  wire \opt_has_pipe.first_q_reg[0]_0 ;
  wire \opt_has_pipe.first_q_reg[0]_1 ;
  wire out;
  wire p_0_in;
  wire p_3_in;

  LUT3 #(
    .INIT(8'hBA)) 
    bad_config_error_flag_i_1
       (.I0(p_0_in),
        .I1(\opt_has_pipe.first_q_reg[0]_0 ),
        .I2(bad_config_error_flag_reg),
        .O(bad_config_error_i_reg));
  LUT4 #(
    .INIT(16'h4F44)) 
    cp_error_flag_i_1
       (.I0(\opt_has_pipe.first_q_reg[0]_0 ),
        .I1(cp_error_flag),
        .I2(cp0_vs_id),
        .I3(p_3_in),
        .O(cp_error_flag_reg));
  LUT6 #(
    .INIT(64'h44F4444444444444)) 
    decompress_bad_format_error_flag_i_1
       (.I0(\opt_has_pipe.first_q_reg[0]_0 ),
        .I1(decompress_bad_format_error_flag),
        .I2(fetch_error_flag_reg_0),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(decompress0_bad_format_error),
        .O(decompress_bad_format_error_flag_reg));
  LUT5 #(
    .INIT(32'hFFF44444)) 
    decompress_bad_size_error_flag_i_1
       (.I0(\opt_has_pipe.first_q_reg[0]_0 ),
        .I1(SR),
        .I2(bad_size_error_int),
        .I3(decompress_bad_size_error_flag_reg_0),
        .I4(decompress_bad_size_error_flag_reg_1),
        .O(decompress_bad_size_error_flag_reg));
  LUT6 #(
    .INIT(64'h44F4444444444444)) 
    fetch_error_flag_i_1
       (.I0(\opt_has_pipe.first_q_reg[0]_0 ),
        .I1(fetch_error_flag_reg_1),
        .I2(fetch_error_flag_reg_0),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(D),
        .O(fetch_error_flag_reg));
  LUT6 #(
    .INIT(64'h0F20002000000000)) 
    \opt_has_pipe.first_q[0]_i_1__2 
       (.I0(first_q),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(\opt_has_pipe.first_q_reg[0]_1 ),
        .I5(Q[2]),
        .O(\opt_has_pipe.first_q_reg[0]_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(out),
        .Q(first_q),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_24
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;
  (* RTL_KEEP = "true" *) wire first_q;

  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(first_q),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_25
   (out,
    SS,
    rm_info_valid_vec,
    clk);
  output out;
  input [0:0]SS;
  input rm_info_valid_vec;
  input clk;

  wire [0:0]SS;
  wire clk;
  (* RTL_KEEP = "true" *) wire first_q;
  wire rm_info_valid_vec;

  assign out = first_q;
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(rm_info_valid_vec),
        .Q(first_q),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_26
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;
  (* RTL_KEEP = "true" *) wire first_q;

  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(first_q),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "xbip_pipe_v3_0_6_viv" *) 
module dfx_controller_setup_dfx_controller_0_0_xbip_pipe_v3_0_6_viv__parameterized5_27
   (SS,
    clk);
  input [0:0]SS;
  input clk;

  wire [0:0]SS;
  wire clk;
  (* RTL_KEEP = "true" *) wire first_q;

  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opt_has_pipe.first_q_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(first_q),
        .R(SS));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2020.1"
`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="cds_rsa_key", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=64)
`pragma protect key_block
EJFZwtxl4g9/OL6+bopUV8BP4e67HNukCIy7Ih3E75y7soa6GhqEucPXMiOy+mJrcrNwD+HjZ0/I
BwEKIiA4mA==

`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
rZCGWdmPJXoOuANoS8fyUXk7SyF+uTNJL18BfeKc+fxcyRrCB++WrM02adxoUdICz4/92yY8TQgj
xyPC0eaHZcjSLepbnHHgSReIQ1PL0hmufLbye7QTD0ygUXC4MvFVY8s3KeW9cPCqOxkyCSziJQzs
J5OT9XLQno1e9rIBr9M=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
I7Zo4frj3tO6FFzeDhpSENS0yd34dQZBtiyIrI/GMASFBUeny6muOD2l0HK69ImRJIOyobvK1+9O
DhxptAc4NzRpY4xUZvr4ix1AhM1Kars1OkrQCWz4a7ciGU/XDblidF3IL0Fa7c41gHIZR9c/Usa6
XL7UEu3aSPQYbZLSDOzeao4VtSSn+dCcjsH4X8zVjSqXg8dcN3fd5C15JaMYg00F2yOFtxwWwZWq
Yvwe1q1PG/wcA1cKAOscANbj4o3O4LjfylNIB6L+Mssxosh+e0+oobWNk/ouBa4k1c3/IzXGSCAs
hEvbI+iqkWJJKZrSb9PZk7S7XSJcScrJO/DGkQ==

`pragma protect key_keyowner="ATRENTA", key_keyname="ATR-SG-2015-RSA-3", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
DDRecdVJcCPEpbUqhuwKtKWXteF7XhGc5d+lQn2uiREzbHyuZvQ1wDwAGGrPwE75gjqc7CdHPMOY
8+3nqcEwR4Q5USgQcou3Cyc6C0TnzzDD/dLKPHDWA1s52x8Rx+LBH9WCvBpD5BKkE4o1s3rN1tL2
wTdCqzzKD8YlryKQ4U0lr2bX6Mlf4/nIt2K1eyPKbIrHIvKDThmaIF/qLnLnkE04pksWJ9Af1OVB
46iqBssrR5p6wZc241D4CqSRCRamfP/s1JrTi8bBNCcXhC0f0Aa35UAoG8vnFngHlFd3G2J88cas
Fo7UH4k1BTTfgbQ35ec0XfSbS/qQWS+EgAF+wA==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
L11p2bsABDhO9HvT3IM+HulCClFvs/UPexuAVExicKtzrLN7tNvUjSouZSn9KwAjR2hg5ZIJ23uy
1elB+eyEl65vQnoH4+s6Q5K4EIcMo5WVKfIKwgu5Q3Sg/jYW+aWT/kGuc7CazRsTxJ7XPFndpMIM
cxYWx2DLps320t+Be0c=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Uublhc2r9VmPPq1tMATsd3XJltn9QRg1/PdCtSlxgFBDDAk13md52Fz+h+DOWptR3Q4i+Sx5IhIP
QIONVNTf1DnoK/wa1lkbd1dROJam8/cZQFiIxnsnSPGXzOGoc0c04xDSCJCCDxiDMF1YTtAqt6nw
yZh1RwOhPpgwUKjeJ4o4TY6/i0xuYAYVc83O6KwI9Ywk9UsfyIQQS8UXFo8zA9eniU2n2NcyAVNj
Y8xZ9PYJfzfDo6dHWsj4Ik588uhfO/bmsf2/ZuY5HCAMQpnda9XzPkVomNjRfsUghko7KipIl2ur
aHh+4i2kI/+cHaihhw3z14aGidBkuYKaopasbA==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
VYqlyQSuRywWcSrUprXX2UzoaWsJXTTbptzDY9ycgFR91H2uYfY43f80gn0E87Gvj90Qmn0Dl6ck
2VjO2Zn9yATmqtuzi/Etuf29dkl3uyKtk02OitZJEhD1CDyUJHDXKHkPMXOZCBU5CfkrIWw2SsSq
YuQKmvxp4BrhcwXypr+vRSsYd1liMxxuXOdBN5AIyzibGfcR4YUeOokIoP05xZoQOfPQkotMC1B6
SHVKEaBxe37YkyKAkQ0f9eKfnPPLG/G5qeLrFPAiIar0HHpOvdCOO69vi3RG1XqoxtTm/wGwRb5J
ZqzZyTn1Fm55PXyKhlElzXXAv1xPOTbkJXRZNQ==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2019_11", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
EktM4icAEVQRmfzXBBFeRr7d3ZTOU9f+J40sQAiff114nDU+fxlewcv+twlytUk9LMSR67RJlLt4
+ZBTwcuSPZ2Cvrommkp++7rNze0VCD8pSAdj4uo1ZnYWVWmPMQaRIqI88lnAzc5+T/LxEiXKn4ji
AYGs9fja4ME8C0CHbBsg+jfUryleVk1D8jEMCetM7qDx64s/7AGfwzDqMiW2DPCPLKNUsdlOlBYT
JAOnfy6deN7/o7BYxBsE1P4Pib1x1hvR8RwEm38pBOLKGade6KL/1SHmz5N1KGLPSXQXlK53RLTI
Exc4wN04Kg72tf503oGq6Vp90c5pksQ9cc0M+w==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
qzYsaSn6YzxyfrxIwv3eyowRK7ZyzZmQHzUmV2AITf6g43c7IV/fwNBDik+XFhLScW2SxsyaGGI7
5n6kAt9uM3GerkCXA+LJQrqshcEyjuvm17vWVovBURqxhTARgZaTs5OtXdhc/wLi5e6lsdyyLtQo
bt66ubjErMgf5+tD8rpn0HkjUYmGv/MBZ0i4bGui735H12aK+wTfhGVOOiuWHCk2zCJJSx3vH4sl
dKtlpg4W0hPEM3TBPHaLnOpIDkrIUaGGN5fm6NJL6US59+Lr8/3mplbD8ld21OKzgLH+5YPRMoo4
1Pbjxkawu5Kk60AsuaR/OxngawaRMd9N4niRfQ==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-PREC-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
ob5SLVPbTjLehEVEWbxCKrK5j6QhSbuij7ZCJhXWQtmptAVH8OPlBb8NFd7QVW3qOoSF0tKdvsvN
BcaO8l5bm/Og8ZtEgFW97+0go8gRgeTosJx9x52Jq7ccTMEtjJ6vk/PDmnO+/FqJHtYyClAlJbnO
oOzWueKVNaQIJsMClksItzwE6ALU4+iKEl8f60vnvs9Ln8vwDk9cnltqqacLsHW7E0gMjxFgjrs7
DY6K7Fhe0BAE8hcDKQYAM567QXhW/MCR8/C+YLMzc1Vax/iJFSbNvIc0oQ+i5Ffd8LzTkocyEh3v
Lj1i7oah9hu/0AZI0pcwr/d/KfS+Z+J3rnnNRw==

`pragma protect key_keyowner="Synplicity", key_keyname="SYNP15_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Kr+Kw213erCTdwwUYISvLHWofUY0edPvOqE9Fe7g0R0NpnKrXp1oC2fOw4Nyj8yvwjgu1Cjmuve/
Zf/Ev2nitFU+qsVI8syslJzvrA2IM+QNrfN/GVZzpAixeqtHdYqFI8GAemQri2BwHGzK8k69KN1F
Xzp/aU6KkxE3hAt+kXDTmiKvQJ1/qeR5w8jLJktcsNl9CM885ouUZJRQ2B//EZU01m4gVdCzOOaS
ozhtAMWbkqLCxEoCnsAtrJY+GPU6KzWCh/QNW2jDmK5wIOQso3DiM7vKKushui2QbU6HXjzvRr51
ydN8yR7A7s6GDAqDFh8YLMmnVift2JyYtMc1Qg==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 47392)
`pragma protect data_block
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
F4RY8gfpJUANVaPeP/e412ICfUcYs0zE4A==
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
