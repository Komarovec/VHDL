----Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
------------------------------------------------------------------------------------
----Tool Version: Vivado v.2020.1 (win64) Build 2902540 Wed May 27 19:54:49 MDT 2020
----Date        : Thu Sep 17 14:52:59 2020
----Host        : KomaroKomp running 64-bit major release  (build 9200)
----Command     : generate_target dfx_controller_setup_wrapper.bd
----Design      : dfx_controller_setup_wrapper
----Purpose     : IP block netlist
------------------------------------------------------------------------------------
--library IEEE;
--use IEEE.STD_LOGIC_1164.ALL;
--library UNISIM;
--use UNISIM.VCOMPONENTS.ALL;
--entity dfx_controller_setup_wrapper is
--  port (
--    dfx_status : out STD_LOGIC;
--    dfx_tdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
--    hw_trig : in STD_LOGIC_VECTOR ( 1 downto 0 );
--    qspi_flash_io0_io : inout STD_LOGIC;
--    qspi_flash_io1_io : inout STD_LOGIC;
--    qspi_flash_ss_io : inout STD_LOGIC;
--    reset : in STD_LOGIC;
--    sys_clock : in STD_LOGIC;
    
--        -- DEBUG
--    qspi_flash_io_debug: out STD_LOGIC_VECTOR ( 8 downto 0 )
--  );
--end dfx_controller_setup_wrapper;

--architecture STRUCTURE of dfx_controller_setup_wrapper is
--  component dfx_controller_setup is
--  port (
--    hw_trig : in STD_LOGIC_VECTOR ( 1 downto 0 );
--    sys_clock : in STD_LOGIC;
--    reset : in STD_LOGIC;
--    qspi_flash_io0_i : in STD_LOGIC;
--    qspi_flash_io0_o : out STD_LOGIC;
--    qspi_flash_io0_t : out STD_LOGIC;
--    qspi_flash_io1_i : in STD_LOGIC;
--    qspi_flash_io1_o : out STD_LOGIC;
--    qspi_flash_io1_t : out STD_LOGIC;
--    qspi_flash_ss_i : in STD_LOGIC;
--    qspi_flash_ss_o : out STD_LOGIC;
--    qspi_flash_ss_t : out STD_LOGIC;
--    icap_csib : out STD_LOGIC;
--    icap_i : out STD_LOGIC_VECTOR ( 31 downto 0 );
--    icap_o : in STD_LOGIC_VECTOR ( 31 downto 0 );
--    icap_rdwrb : out STD_LOGIC;
--    dfx_tdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
--    dfx_status : out STD_LOGIC
--  );
--  end component dfx_controller_setup;
--  component IOBUF is
--  port (
--    I : in STD_LOGIC;
--    O : out STD_LOGIC;
--    T : in STD_LOGIC;
--    IO : inout STD_LOGIC
--  );
--  end component IOBUF;
--  signal qspi_flash_io0_i : STD_LOGIC;
--  signal qspi_flash_io0_o : STD_LOGIC;
--  signal qspi_flash_io0_t : STD_LOGIC;
--  signal qspi_flash_io1_i : STD_LOGIC;
--  signal qspi_flash_io1_o : STD_LOGIC;
--  signal qspi_flash_io1_t : STD_LOGIC;
--  signal qspi_flash_ss_i : STD_LOGIC;
--  signal qspi_flash_ss_o : STD_LOGIC;
--  signal qspi_flash_ss_t : STD_LOGIC;
  
--  -- ICAP
--  signal icap_csib: std_logic;
--  signal icap_i: std_logic_vector(31 downto 0);
--  signal icap_o: std_logic_vector(31 downto 0);
--  signal icap_rdwrb: std_logic;
--begin

--ICAPE2_inst : ICAPE2
--generic map (
--    DEVICE_ID => X"3651093", -- Specifies the pre-programmed Device ID value to be used for simulation
--    -- purposes.
--    ICAP_WIDTH => "X32", -- Specifies the input and output data width.
--    SIM_CFG_FILE_NAME => "NONE" -- Specifies the Raw Bitstream (RBT) file to be parsed by the simulation
--    -- model.
--)
--port map (
--    O => icap_o, -- 32-bit output: Configuration data output bus
--    CLK => sys_clock, -- 1-bit input: Clock Input
--    CSIB => icap_csib, -- 1-bit input: Active-Low ICAP Enable
--    I => icap_i, -- 32-bit input: Configuration data input bus
--    RDWRB => icap_rdwrb -- 1-bit input: Read/Write Select input
--);

--dfx_controller_setup_i: component dfx_controller_setup
--     port map (
--      dfx_status => dfx_status,
--      dfx_tdata(31 downto 0) => dfx_tdata(31 downto 0),
--      hw_trig(1 downto 0) => hw_trig(1 downto 0),
--      icap_csib => icap_csib,
--      icap_i(31 downto 0) => icap_i(31 downto 0),
--      icap_o(31 downto 0) => icap_o(31 downto 0),
--      icap_rdwrb => icap_rdwrb,
--      qspi_flash_io0_i => qspi_flash_io0_i,
--      qspi_flash_io0_o => qspi_flash_io0_o,
--      qspi_flash_io0_t => qspi_flash_io0_t,
--      qspi_flash_io1_i => qspi_flash_io1_i,
--      qspi_flash_io1_o => qspi_flash_io1_o,
--      qspi_flash_io1_t => qspi_flash_io1_t,
--      qspi_flash_ss_i => qspi_flash_ss_i,
--      qspi_flash_ss_o => qspi_flash_ss_o,
--      qspi_flash_ss_t => qspi_flash_ss_t,
--      reset => reset,
--      sys_clock => sys_clock
--    );
    
---- DEBUG
--qspi_flash_io_debug(0) <= qspi_flash_io0_o;
----qspi_flash_io_debug(1) <= qspi_flash_io0_i;
--qspi_flash_io_debug(2) <= qspi_flash_io0_t;
    
--qspi_flash_io_debug(3) <= qspi_flash_io1_o;
--qspi_flash_io_debug(4) <= qspi_flash_io1_i;
--qspi_flash_io_debug(5) <= qspi_flash_io1_t;

--qspi_flash_io_debug(6) <= qspi_flash_ss_o;
--qspi_flash_io_debug(7) <= qspi_flash_ss_i;
--qspi_flash_io_debug(8) <= qspi_flash_ss_t;
---- DEBUG
    
--qspi_flash_io0_iobuf: component IOBUF
--     port map (
--      I => qspi_flash_io0_o,
--      IO => qspi_flash_io0_io,
--      O => qspi_flash_io0_i,
--      T => qspi_flash_io0_t
--    );
--qspi_flash_io1_iobuf: component IOBUF
--     port map (
--      I => qspi_flash_io1_o,
--      IO => qspi_flash_io1_io,
--      O => qspi_flash_io1_i,
--      T => qspi_flash_io1_t
--    );
--qspi_flash_ss_iobuf: component IOBUF
--     port map (
--      I => qspi_flash_ss_o,
--      IO => qspi_flash_ss_io,
--      O => qspi_flash_ss_i,
--      T => qspi_flash_ss_t
--    );
--end STRUCTURE;
